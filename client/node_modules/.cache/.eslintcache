[{"/Users/albertshay/Desktop/silkroad/client/src/index.js":"1","/Users/albertshay/Desktop/silkroad/client/src/App.js":"2","/Users/albertshay/Desktop/silkroad/client/src/reducers/index.js":"3","/Users/albertshay/Desktop/silkroad/client/src/components/Navbar/Navbar.js":"4","/Users/albertshay/Desktop/silkroad/client/src/components/Auth/Auth.js":"5","/Users/albertshay/Desktop/silkroad/client/src/components/Home/Home.js":"6","/Users/albertshay/Desktop/silkroad/client/src/components/PostDetails/PostDetails.jsx":"7","/Users/albertshay/Desktop/silkroad/client/src/reducers/posts.js":"8","/Users/albertshay/Desktop/silkroad/client/src/reducers/auth.js":"9","/Users/albertshay/Desktop/silkroad/client/src/components/Navbar/styles.js":"10","/Users/albertshay/Desktop/silkroad/client/src/components/Auth/icon.js":"11","/Users/albertshay/Desktop/silkroad/client/src/components/Auth/styles.js":"12","/Users/albertshay/Desktop/silkroad/client/src/components/Auth/Input.js":"13","/Users/albertshay/Desktop/silkroad/client/src/components/Home/styles.js":"14","/Users/albertshay/Desktop/silkroad/client/src/components/Form/Form.js":"15","/Users/albertshay/Desktop/silkroad/client/src/actions/posts.js":"16","/Users/albertshay/Desktop/silkroad/client/src/constants/actionTypes.js":"17","/Users/albertshay/Desktop/silkroad/client/src/actions/auth.js":"18","/Users/albertshay/Desktop/silkroad/client/src/api/travelAdvisorAPI.js":"19","/Users/albertshay/Desktop/silkroad/client/src/components/Map/Map.js":"20","/Users/albertshay/Desktop/silkroad/client/src/components/Modal/Modal.js":"21","/Users/albertshay/Desktop/silkroad/client/src/components/Posts/Posts.js":"22","/Users/albertshay/Desktop/silkroad/client/src/components/PostDetails/styles.js":"23","/Users/albertshay/Desktop/silkroad/client/src/components/Pagination.jsx":"24","/Users/albertshay/Desktop/silkroad/client/src/components/PostDetails/CommentSection.jsx":"25","/Users/albertshay/Desktop/silkroad/client/src/api/index.js":"26","/Users/albertshay/Desktop/silkroad/client/src/components/Map/styles.js":"27","/Users/albertshay/Desktop/silkroad/client/src/components/Posts/styles.js":"28","/Users/albertshay/Desktop/silkroad/client/src/components/Posts/Post/Post.js":"29","/Users/albertshay/Desktop/silkroad/client/src/mapStyles.js":"30","/Users/albertshay/Desktop/silkroad/client/src/components/styles.js":"31","/Users/albertshay/Desktop/silkroad/client/src/components/Form/styles.js":"32","/Users/albertshay/Desktop/silkroad/client/src/components/Form/UploadIcon.js":"33","/Users/albertshay/Desktop/silkroad/client/src/components/Posts/Post/styles.js":"34"},{"size":464,"mtime":1634690704659,"results":"35","hashOfConfig":"36"},{"size":3612,"mtime":1635009158178,"results":"37","hashOfConfig":"36"},{"size":157,"mtime":1634256318104,"results":"38","hashOfConfig":"36"},{"size":6044,"mtime":1635283864935,"results":"39","hashOfConfig":"36"},{"size":5918,"mtime":1634691347116,"results":"40","hashOfConfig":"36"},{"size":5396,"mtime":1635291383628,"results":"41","hashOfConfig":"36"},{"size":9558,"mtime":1635291386249,"results":"42","hashOfConfig":"36"},{"size":1784,"mtime":1634680463686,"results":"43","hashOfConfig":"36"},{"size":664,"mtime":1634653980591,"results":"44","hashOfConfig":"36"},{"size":3842,"mtime":1635285481616,"results":"45","hashOfConfig":"36"},{"size":502,"mtime":1634256317888,"results":"46","hashOfConfig":"36"},{"size":1410,"mtime":1634690973137,"results":"47","hashOfConfig":"36"},{"size":1459,"mtime":1634691383636,"results":"48","hashOfConfig":"36"},{"size":3127,"mtime":1635291387734,"results":"49","hashOfConfig":"36"},{"size":8247,"mtime":1635291382630,"results":"50","hashOfConfig":"36"},{"size":3351,"mtime":1634663219786,"results":"51","hashOfConfig":"36"},{"size":604,"mtime":1634680462503,"results":"52","hashOfConfig":"36"},{"size":559,"mtime":1634653921303,"results":"53","hashOfConfig":"36"},{"size":0,"mtime":1635291384614,"results":"54","hashOfConfig":"36"},{"size":2895,"mtime":1635228820403,"results":"55","hashOfConfig":"36"},{"size":1310,"mtime":1634257428583,"results":"56","hashOfConfig":"36"},{"size":1055,"mtime":1635264752223,"results":"57","hashOfConfig":"36"},{"size":2237,"mtime":1635036074275,"results":"58","hashOfConfig":"36"},{"size":919,"mtime":1634256317906,"results":"59","hashOfConfig":"36"},{"size":2843,"mtime":1634683019335,"results":"60","hashOfConfig":"36"},{"size":1402,"mtime":1634663194368,"results":"61","hashOfConfig":"36"},{"size":473,"mtime":1635267392986,"results":"62","hashOfConfig":"36"},{"size":385,"mtime":1635013454336,"results":"63","hashOfConfig":"36"},{"size":4647,"mtime":1635264845912,"results":"64","hashOfConfig":"36"},{"size":1435,"mtime":1635267391974,"results":"65","hashOfConfig":"36"},{"size":145,"mtime":1634256317922,"results":"66","hashOfConfig":"36"},{"size":3695,"mtime":1635291372805,"results":"67","hashOfConfig":"36"},{"size":161,"mtime":1634783136146,"results":"68","hashOfConfig":"36"},{"size":2116,"mtime":1635291386753,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"k8o672",{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"72"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"72"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"72"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"72"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"72"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"72"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"72"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"72"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"72"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"72"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/albertshay/Desktop/silkroad/client/src/index.js",[],["149","150"],"/Users/albertshay/Desktop/silkroad/client/src/App.js",["151"],"// import React from 'react';\n// import {\n//   Container,\n//   Paper,\n//   BottomNavigation,\n//   BottomNavigationAction,\n//   AppBar,\n//   IconButton,\n//   Typography,\n//   Toolbar,\n//   Box,\n// } from '@material-ui/core';\n// // import SearchIcon from '@mui/icons-material/Search';\n// // import AddCircleIcon from '@mui/icons-material/AddCircle';\n// // import HomeIcon from '@mui/icons-material/Home';\n// // import LoginIcon from '@mui/icons-material/Login';\n// // import { styled } from '@mmui/material/styles';\n// // import RestoreIcon from '@material-ui/icons/RestoreIcon';\n// // import FavoriteIcon from '@material-ui/icons/FavoriteIcon';\n// // import ArchiveIcon from '@material-ui/icons/ArchiveIcon';\n// import { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\n// import PostDetails from '../components/PostDetails/PostDetails';\n// import Home from '../components/Home/Home';\n// import Navbar from '../components/Navbar/Navbar';\n// import Auth from './components/Auth/Auth';\n// // const StyledFab = styled(Fab)({\n// //   position: 'absolute',\n// //   zIndex: 1,\n// //   top: -30,\n// //   left: 0,\n// //   right: 0,\n// //   margin: '0 auto',\n// // });\n// import useStyles from '../styles';\n// const App = () => {\n//   const user = JSON.parse(localStorage.getItem('profile'));\n//   const classes = useStyles();\n//   return (\n//     <BrowserRouter>\n//       <Container maxWidth='xl' className={classes.container}>\n//         <Navbar />\n//         <Switch>\n//           <Route path='/' exact component={() => <Redirect to='/posts' />} />\n//           <Route path='/posts' exact component={Home} />\n//           <Route path='/posts/search' exact component={Home} />\n//           <Route path='/posts/:id' component={PostDetails} />\n//           <Route\n//             path='/auth'\n//             exact\n//             component={() => (!user ? <Auth /> : <Redirect to='/posts' />)}\n//           />\n//         </Switch>\n//       </Container>\n//       {/*  <AppBar position='fixed' color='primary' sx={{ top: 'auto', bottom: 0 }}>\n//         <Toolbar></Toolbar>\n//   </AppBar>*/}\n//       <BottomNav className={classes.bottomNav}>\n//         <Toolbar variant='dense'> </Toolbar>\n//       </BottomNav>\n//     </BrowserRouter>\n//   );\n// };\n\n// export default App;\nimport React from 'react';\nimport { Container } from '@material-ui/core';\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\n\nimport PostDetails from './components/PostDetails/PostDetails';\nimport Navbar from './components/Navbar/Navbar';\nimport Home from './components/Home/Home';\nimport Auth from './components/Auth/Auth';\n// import Profile from './components/Profile/Profile';\nimport createHistory from 'history/createBrowserHistory';\n\nconst App = () => {\n  const user = JSON.parse(localStorage.getItem('profile'));\n  const history = createHistory();\n  return (\n    <BrowserRouter history={history}>\n      <Container maxWidth='xl'>\n        <Navbar />\n        <Switch>\n          <Route path='/' exact component={() => <Redirect to='/posts' />} />\n          <Route path='/posts' exact component={Home} />\n          <Route path='/posts/search' exact component={Home} />\n          <Route path='/posts/:id' exact component={PostDetails} />\n          <Route\n            path='/auth'\n            exact\n            // component={() => (!user ? <Auth /> : <Redirect to='/posts' />)}\n            component={Auth}\n          />\n          {/*<Route path={`/profile/${user.results._id}`}>\n            <Profile />\n          </Route>*/}\n        </Switch>\n      </Container>\n    </BrowserRouter>\n  );\n};\nexport default App;\n","/Users/albertshay/Desktop/silkroad/client/src/reducers/index.js",[],"/Users/albertshay/Desktop/silkroad/client/src/components/Navbar/Navbar.js",["152","153","154","155","156","157","158","159","160"],"import React, { useState, useEffect } from 'react';\nimport {\n  AppBar,\n  Typography,\n  Toolbar,\n  Avatar,\n  Button,\n  TextField,\n  InputBase,\n} from '@material-ui/core';\nimport { Link, useHistory, useLocation } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport decode from 'jwt-decode';\nimport ChipInput from 'material-ui-chip-input';\nimport Form from '../Form/Form';\nimport silkroadText from '../../images/silkroadLogo.png';\nimport silkroadLogo from '../../images/imgLogo.png';\n// import { Autocomplete } from '@react-google-maps/api';\nimport {\n  getPosts,\n  getPostsBySearch,\n  getPostsByUser,\n} from '../../actions/posts';\n// import SearchIcon from '@material-ui/icons/Search';\nimport * as actionType from '../../constants/actionTypes';\nimport useStyles from './styles';\n\nfunction useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\nconst Navbar = () => {\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')));\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const history = useHistory();\n\n  const classes = useStyles();\n\n  const [currentId, setCurrentId] = useState(0);\n\n  const query = useQuery();\n\n  const page = query.get('page') || 1;\n  const searchQuery = query.get('searchQuery');\n\n  const [search, setSearch] = useState('');\n  const [tags, setTags] = useState([]);\n\n  const logout = () => {\n    dispatch({ type: actionType.LOGOUT });\n\n    history.push('/auth');\n\n    setUser(null);\n  };\n  // const login = () => {\n  //   console.log('login');\n  //   dispatch({ type: actionType.LOGIN });\n\n  //   history.push('/auth');\n\n  //   setUser(null);\n  // };\n\n  useEffect(() => {\n    const token = user?.token;\n\n    if (token) {\n      const decodedToken = decode(token);\n\n      if (decodedToken.exp * 1000 < new Date().getTime()) logout();\n    }\n\n    setUser(JSON.parse(localStorage.getItem('profile')));\n  }, [location]);\n\n  const searchPost = () => {\n    if (search.trim()) {\n      //to have something to dispatch we need to create the action 'getPostsBySearch\n      //dispatch -> fetch search post\n      dispatch(getPostsBySearch({ search, tags: tags.join(',') }));\n      // history.push(`/posts/search?searchQuery=${search || 'none'}`);\n      history.push(\n        `/posts/search?searchQuery=${search || 'none'}&tags=${tags.join(',')}`\n      );\n    } else {\n      history.push('/');\n    }\n  };\n  // const searchByUser = () => {\n  //   const user = JSON.parse(localStorage.getItem('profile'));\n  //   if (user) dispatch(getPostsByUser(user.result._id));\n  //   history.push(`/posts/user/`);\n  //   console.log(user);\n  // };\n\n  const handleKeyPress = (e) => {\n    console.log(e.key);\n    if (e.key === 'Enter') {\n      searchPost();\n      // search post\n    }\n  };\n  const handleAddChip = (tag) => setTags([...tags, tag]);\n\n  const handleDeleteChip = (chipToDelete) =>\n    setTags(tags.filter((tag) => tag !== chipToDelete));\n\n  return (\n    <AppBar className={classes.appBar} position='sticky' color='inherit'>\n      <Link to='/' className={classes.brandContainer}>\n        <img\n          className={classes.text}\n          component={Link}\n          to='/'\n          src={silkroadText}\n          alt='icon'\n          height='40px'\n        />\n        <img\n          className={classes.image}\n          // component={Link}\n          to='/'\n          src={silkroadLogo}\n          alt='icon'\n          height='40px'\n        />\n      </Link>\n      <TextField\n        name='search'\n        variant='outlined'\n        className={classes.searchinput}\n        label={`Search products by name or...`}\n        onKeyPress={handleKeyPress}\n        size={`small`}\n        fontFamily={`Montserrat`}\n        value={search}\n        // fullWidth\n        onChange={(e) => setSearch(e.target.value)}\n        InputProps={{\n          style: { fontSize: 12 },\n          classes: { root: classes.inputRoot },\n        }}\n        InputLabelProps={{\n          style: { fontSize: 12 },\n          classes: {\n            root: classes.labelRoot,\n            focused: classes.labelFocused,\n          },\n        }}\n      />\n      <br />\n\n      <ChipInput\n        name='search'\n        style={{ margin: '5px 5px 5px 5px' }}\n        value={tags}\n        onAdd={(chip) => handleAddChip(chip)}\n        onDelete={(chip) => handleDeleteChip(chip)}\n        size={`small`}\n        height={'small'}\n        variant='outlined'\n        fullWidth\n        disableUnderline={true}\n        // alignText='center'\n        alignItem='center'\n        fontFamily={`Montserrat`}\n        label='price'\n        className={classes.pricesearchinput}\n        InputProps={{\n          style: { fontSize: 11 },\n          classes: { root: classes.inputRoot },\n        }}\n        InputLabelProps={{\n          style: { fontSize: 11 },\n          classes: {\n            root: classes.labelRoot,\n            focused: classes.labelFocused,\n          },\n        }}\n      />\n\n      <Button\n        onClick={searchPost}\n        className={classes.searchButton}\n        // color='primary'\n        variant='contained'\n      >\n        Search\n      </Button>\n\n      <Toolbar className={classes.toolbar}>\n        {user?.result ? (\n          <>\n            <div className={classes.profile}>\n              <Typography className={classes.userName} variant='h6'>\n                {user?.result.name.slice(0, user?.result.name.indexOf(' '))}\n                {/*   {user?.result.name}*/}\n              </Typography>\n\n              <Avatar\n                className={classes.avatar}\n                alt={user?.result.name}\n                src={user?.result.imageUrl}\n                onClick={logout}\n              >\n                {user?.result.name.charAt(0)}\n              </Avatar>\n            </div>\n          </>\n        ) : (\n          <Button\n            className={classes.logout}\n            component={Link}\n            to='/auth'\n            //   onClick={login}\n            variant='contained'\n          >\n            Sign In\n          </Button>\n        )}\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Navbar;\n","/Users/albertshay/Desktop/silkroad/client/src/components/Auth/Auth.js",["161","162"],"import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport {\n  Avatar,\n  Button,\n  Paper,\n  Grid,\n  Typography,\n  Container,\n} from '@material-ui/core';\nimport { useHistory, Link } from 'react-router-dom';\nimport { GoogleLogin } from 'react-google-login';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\n\nimport Icon from './icon';\nimport { signin, signup } from '../../actions/auth';\nimport { AUTH } from '../../constants/actionTypes';\nimport useStyles from './styles';\nimport Input from './Input';\n\nconst initialState = {\n  firstName: '',\n  lastName: '',\n  email: '',\n  password: '',\n  confirmPassword: '',\n};\n\nconst SignUp = () => {\n  const [form, setForm] = useState(initialState);\n  const [isSignup, setIsSignup] = useState(false);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const classes = useStyles();\n\n  const [showPassword, setShowPassword] = useState(false);\n  const handleShowPassword = () => setShowPassword(!showPassword);\n\n  const switchMode = () => {\n    setForm(initialState);\n    setIsSignup((prevIsSignup) => !prevIsSignup);\n    setShowPassword(false);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (isSignup) {\n      dispatch(signup(form, history));\n    } else {\n      dispatch(signin(form, history));\n    }\n  };\n\n  const googleSuccess = async (res) => {\n    const result = res?.profileObj;\n    const token = res?.tokenId;\n\n    try {\n      dispatch({ type: AUTH, data: { result, token } });\n\n      history.push('/');\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const googleError = () =>\n    alert('Google Sign In was unsuccessful. Try again later');\n\n  const handleChange = (e) =>\n    setForm({ ...form, [e.target.name]: e.target.value });\n  const MouseOver = (event) => {\n    event.target.style.color = 'blue';\n  };\n  const MouseOut = (event) => {\n    event.target.style.color = '';\n  };\n  return (\n    <Container component='main' maxWidth='xs'>\n      <Paper className={classes.paper} elevation={3}>\n        <Typography className={classes.header} component='h1' variant='h5'>\n          {isSignup ? 'Sign up' : 'Sign in'}\n        </Typography>\n        <form className={classes.form} onSubmit={handleSubmit}>\n          <Grid container spacing={2}>\n            {isSignup && (\n              <>\n                <Input\n                  name='firstName'\n                  label='First Name'\n                  handleChange={handleChange}\n                  autoFocus\n                  half\n                />\n                <Input\n                  name='lastName'\n                  label='Last Name'\n                  handleChange={handleChange}\n                  half\n                />\n              </>\n            )}\n            <Input\n              name='email'\n              label='Email Address'\n              handleChange={handleChange}\n              type='email'\n              InputProps={{\n                style: { fontSize: 12, fontFamily: 'Montserrat' },\n              }}\n              InputLabelProps={{\n                style: { fontSize: 12 },\n              }}\n            />\n            <Input\n              name='password'\n              label='Password'\n              handleChange={handleChange}\n              type={showPassword ? 'text' : 'password'}\n              handleShowPassword={handleShowPassword}\n              InputProps={{\n                style: { fontSize: 12 },\n              }}\n              InputLabelProps={{\n                style: { fontSize: 12 },\n              }}\n            />\n            {isSignup && (\n              <Input\n                name='confirmPassword'\n                label='Repeat Password'\n                handleChange={handleChange}\n                type='password'\n                InputProps={{\n                  style: { fontSize: 12 },\n                }}\n                InputLabelProps={{\n                  style: { fontSize: 12 },\n                }}\n              />\n            )}\n          </Grid>\n          <Button\n            type='submit'\n            fullWidth\n            color='primary'\n            variant='contained'\n            className={classes.submit}\n          >\n            {isSignup ? 'Sign Up' : 'Sign In'}\n          </Button>\n          <GoogleLogin\n            clientId={process.env.REACT_APP_GOOGLE_CLIENT_ID}\n            render={(renderProps) => (\n              <Button\n                className={classes.googleButton}\n                fullWidth\n                color='primary'\n                onClick={renderProps.onClick}\n                disabled={renderProps.disabled}\n                startIcon={<Icon />}\n                variant='contained'\n              >\n                Google Sign In\n              </Button>\n            )}\n            onSuccess={googleSuccess}\n            onFailure={googleError}\n            cookiePolicy='single_host_origin'\n          />\n          <Grid container justify='flex-end'>\n            <Grid item>\n              <Button onClick={switchMode} className={classes.button}>\n                {isSignup ? (\n                  <Typography\n                    className={classes.signup}\n                    onMouseOver={MouseOver}\n                    onMouseOut={MouseOut}\n                    component={Link}\n                    to='/auth'\n                  >\n                    Already have an account? Sign in\n                  </Typography>\n                ) : (\n                  <Typography\n                    className={classes.signup}\n                    onMouseOver={MouseOver}\n                    onMouseOut={MouseOut}\n                    component={Link}\n                    to='/auth'\n                  >\n                    {' '}\n                    Don't have an account? Sign Up\n                  </Typography>\n                )}\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n      </Paper>\n    </Container>\n  );\n};\n\nexport default SignUp;\n","/Users/albertshay/Desktop/silkroad/client/src/components/Home/Home.js",["163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180"],"/Users/albertshay/Desktop/silkroad/client/src/components/PostDetails/PostDetails.jsx",["181","182","183","184","185"],"/Users/albertshay/Desktop/silkroad/client/src/reducers/posts.js",["186","187"],"import {\n  FETCH_ALL,\n  FETCH_BY_SEARCH,\n  FETCH_POST,\n  // FETCH_BY_USER,\n  // FETCH_BY_LIKES,\n  PROFILE,\n  CREATE,\n  UPDATE,\n  DELETE,\n  LIKE,\n  COMMENT,\n} from '../constants/actionTypes';\n\nexport default (state = { isLoading: true, posts: [] }, action) => {\n  switch (action.type) {\n    case 'START_LOADING':\n      return { ...state, isLoading: true };\n    case 'END_LOADING':\n      return { ...state, isLoading: false };\n    case FETCH_ALL:\n      return {\n        ...state,\n        posts: action.payload.data,\n        currentPage: action.payload.currentPage,\n        numberOfPages: action.payload.numberOfPages,\n      };\n    case FETCH_BY_SEARCH:\n      return { ...state, posts: action.payload.data };\n    // case FETCH_BY_LIKES:\n    //   return { ...state, posts: action.payload.data };\n    case PROFILE:\n      return { ...state, posts: action.payload.data };\n    case FETCH_POST:\n      return { ...state, post: action.payload.post };\n    case LIKE:\n      return {\n        ...state,\n        posts: state.posts.map((post) =>\n          post._id === action.payload._id ? action.payload : post\n        ),\n      };\n    case COMMENT:\n      return {\n        ...state,\n        posts: state.posts.map((post) => {\n          if (post._id == +action.payload._id) {\n            return action.payload;\n          }\n          return post;\n        }),\n      };\n    case CREATE:\n      return { ...state, posts: [...state.posts, action.payload] };\n    case UPDATE:\n      return {\n        ...state,\n        posts: state.posts.map((post) =>\n          post._id === action.payload._id ? action.payload : post\n        ),\n      };\n    case DELETE:\n      return {\n        ...state,\n        posts: state.posts.filter((post) => post._id !== action.payload),\n      };\n    default:\n      return state;\n  }\n};\n","/Users/albertshay/Desktop/silkroad/client/src/reducers/auth.js",[],"/Users/albertshay/Desktop/silkroad/client/src/components/Navbar/styles.js",[],"/Users/albertshay/Desktop/silkroad/client/src/components/Auth/icon.js",[],"/Users/albertshay/Desktop/silkroad/client/src/components/Auth/styles.js",[],"/Users/albertshay/Desktop/silkroad/client/src/components/Auth/Input.js",["188"],"import React from 'react';\nimport { TextField, Grid, InputAdornment, IconButton } from '@material-ui/core';\n\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport { fontSize } from '@mui/system';\nimport useStyles from './styles';\n\nconst Input = ({\n  name,\n  handleChange,\n  label,\n  half,\n  autoFocus,\n  type,\n  handleShowPassword,\n}) => {\n  const classes = useStyles();\n  return (\n    <Grid item xs={12} sm={half ? 6 : 12}>\n      <TextField\n        name={name}\n        onChange={handleChange}\n        variant='outlined'\n        required\n        fullWidth\n        label={label}\n        autoFocus={autoFocus}\n        type={type}\n        InputLabelProps={{\n          style: { fontSize: 12 },\n          classes: {\n            root: classes.labelRoot,\n            focused: classes.labelFocused,\n          },\n        }}\n        InputProps={\n          name === 'password'\n            ? {\n                style: { fontSize: 12 },\n                classes: { root: classes.inputRoot },\n                endAdornment: (\n                  <InputAdornment position='end'>\n                    <IconButton onClick={handleShowPassword}>\n                      {type === 'password' ? <Visibility /> : <VisibilityOff />}\n                    </IconButton>\n                  </InputAdornment>\n                ),\n              }\n            : null\n        }\n      />\n    </Grid>\n  );\n};\n\nexport default Input;\n","/Users/albertshay/Desktop/silkroad/client/src/components/Home/styles.js",["189"],"/Users/albertshay/Desktop/silkroad/client/src/components/Form/Form.js",["190","191","192","193","194","195","196","197"],"/Users/albertshay/Desktop/silkroad/client/src/actions/posts.js",["198","199"],"import {\n  START_LOADING,\n  END_LOADING,\n  FETCH_ALL,\n  FETCH_POST,\n  FETCH_BY_SEARCH,\n  CREATE,\n  UPDATE,\n  DELETE,\n  LIKE,\n  COMMENT,\n  PROFILE,\n  FETCH_BY_USER,\n  FETCH_BY_LIKES,\n} from '../constants/actionTypes';\nimport * as api from '../api/index.js';\n\nexport const getPost = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: START_LOADING });\n\n    const { data } = await api.fetchPost(id);\n\n    dispatch({ type: FETCH_POST, payload: { post: data } });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getPosts = (page) => async (dispatch) => {\n  try {\n    dispatch({ type: START_LOADING });\n    const {\n      data: { data, currentPage, numberOfPages },\n    } = await api.fetchPosts(page);\n\n    dispatch({\n      type: FETCH_ALL,\n      payload: { data, currentPage, numberOfPages },\n    });\n    dispatch({ type: END_LOADING });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// export const getPostsByLikes = (likes) => async (dispatch) => {\n//   try {\n//     dispatch({ type: START_LOADING });\n//     const {\n//       data: { data },\n//     } = await api.fetchPostsByLikes(likes);\n//     console.log(data);\n//     dispatch({ type: FETCH_BY_LIKES, payload: { data } });\n//     dispatch({ type: END_LOADING });\n//   } catch (error) {\n//     console.log(error);\n//   }\n// };\nexport const getPostsByUser = (user) => async (dispatch) => {\n  try {\n    dispatch({ type: START_LOADING });\n    const {\n      data: { data },\n    } = await api.fetchPostsByUser(user);\n    console.log(data);\n    dispatch({ type: PROFILE, payload: { data } });\n    dispatch({ type: END_LOADING });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getPostsBySearch = (searchQuery) => async (dispatch) => {\n  try {\n    dispatch({ type: START_LOADING });\n    const {\n      data: { data },\n    } = await api.fetchPostsBySearch(searchQuery);\n    console.log(data);\n    dispatch({ type: FETCH_BY_SEARCH, payload: { data } });\n    dispatch({ type: END_LOADING });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const createPost = (post, history) => async (dispatch) => {\n  try {\n    dispatch({ type: START_LOADING });\n    const { data } = await api.createPost(post);\n\n    history.push(`/posts/${data._id}`);\n    dispatch({ type: CREATE, payload: data });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const updatePost = (id, post) => async (dispatch) => {\n  try {\n    const { data } = await api.updatePost(id, post);\n\n    dispatch({ type: UPDATE, payload: data });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const likePost = (id) => async (dispatch) => {\n  const user = JSON.parse(localStorage.getItem('profile')).token;\n  // console.log(user.token);\n  try {\n    const { data } = await api.likePost(id, user?.token);\n    // console.log('data', data);\n    dispatch({ type: LIKE, payload: data });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const commentPost = (value, id) => async (dispatch) => {\n  try {\n    const { data } = await api.comment(value, id);\n\n    dispatch({ type: COMMENT, payload: data });\n\n    return data.comments;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const deletePost = (id) => async (dispatch) => {\n  try {\n    await await api.deletePost(id);\n\n    dispatch({ type: DELETE, payload: id });\n  } catch (error) {\n    console.log(error);\n  }\n};\n","/Users/albertshay/Desktop/silkroad/client/src/constants/actionTypes.js",[],"/Users/albertshay/Desktop/silkroad/client/src/actions/auth.js",[],"/Users/albertshay/Desktop/silkroad/client/src/api/travelAdvisorAPI.js",[],"/Users/albertshay/Desktop/silkroad/client/src/components/Map/Map.js",["200","201"],"import React from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport { Paper, Typography, useMediaQuery } from '@material-ui/core';\nimport LocationOnOutlinedIcon from '@material-ui/icons/LocationOnOutlined';\nimport Rating from '@material-ui/lab/Rating';\n\nimport mapStyles from '../../mapStyles';\nimport useStyles from './styles.js';\n\nconst Map = ({\n  coords,\n  places,\n  setCoords,\n  setBounds,\n  setChildClicked,\n  weatherData,\n}) => {\n  const matches = useMediaQuery('(min-width:600px)');\n  const classes = useStyles();\n\n  return (\n    <div className={classes.mapContainer}>\n      <GoogleMapReact\n        bootstrapURLKeys={{ key: process.env.REACT_APP_GOOGLE_MAP_API_KEY }}\n        defaultCenter={coords}\n        center={coords}\n        defaultZoom={14}\n        margin={[50, 50, 50, 50]}\n        options={{\n          disableDefaultUI: true,\n          zoomControl: true,\n          styles: mapStyles,\n        }}\n        onChange={(e) => {\n          setCoords({ lat: e.center.lat, lng: e.center.lng });\n          setBounds({ ne: e.marginBounds.ne, sw: e.marginBounds.sw });\n        }}\n        onChildClick={(child) => setChildClicked(child)}\n      >\n        {places?.length &&\n          places?.map((place, i) => (\n            <div\n              className={classes.markerContainer}\n              lat={Number(place.latitude)}\n              lng={Number(place.longitude)}\n              key={i}\n            >\n              {!matches ? (\n                <LocationOnOutlinedIcon color='primary' fontSize='large' />\n              ) : (\n                <Paper elevation={3} className={classes.paper}>\n                  <Typography\n                    className={classes.typography}\n                    variant='subtitle2'\n                    gutterBottom\n                  >\n                    {' '}\n                    {place.name}\n                  </Typography>\n                  <img\n                    className={classes.pointer}\n                    src={\n                      place.photo\n                        ? place.photo.images.large.url\n                        : 'https://www.foodserviceandhospitality.com/wp-content/uploads/2016/09/Restaurant-Placeholder-001.jpg'\n                    }\n                  />\n                  <Rating\n                    name='read-only'\n                    size='small'\n                    value={Number(place.rating)}\n                    readOnly\n                  />\n                </Paper>\n              )}\n            </div>\n          ))}\n        {weatherData?.list?.length &&\n          weatherData.list.map((data, i) => (\n            <div key={i} lat={data.coord.lat} lng={data.coord.lon}>\n              <img\n                src={`http://openweathermap.org/img/w/${data.weather[0].icon}.png`}\n                height='70px'\n              />\n            </div>\n          ))}\n      </GoogleMapReact>\n    </div>\n  );\n};\n\nexport default Map;\n","/Users/albertshay/Desktop/silkroad/client/src/components/Modal/Modal.js",["202","203"],"import * as React from 'react';\nimport { styled, Box } from '@mui/system';\nimport ModalUnstyled from '@mui/core/ModalUnstyled';\nimport Form from '../Form/Form';\nconst StyledModal = styled(ModalUnstyled)`\n  position: fixed;\n  z-index: 1300;\n  right: 0;\n  bottom: 0;\n  top: 0;\n  left: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Backdrop = styled('div')`\n  z-index: -1;\n  position: fixed;\n  right: 0;\n  bottom: 0;\n  top: 0;\n  left: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  -webkit-tap-highlight-color: transparent;\n`;\n\nconst style = {\n  width: 400,\n  bgcolor: 'background.paper',\n  border: '2px solid #000',\n  p: 2,\n  px: 4,\n  pb: 3,\n};\n\nexport default function ModalUnstyledDemo({ currentId, setCurrentId }) {\n  const [open, setOpen] = React.useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  return (\n    <div>\n      <button type='button' onClick={handleOpen}>\n        Open modal\n      </button>\n      <StyledModal\n        aria-labelledby='unstyled-modal-title'\n        aria-describedby='unstyled-modal-description'\n        open={open}\n        onClose={handleClose}\n        BackdropComponent={Backdrop}\n      >\n        <Form current={currentId} setCurrentId={setCurrentId} />\n      </StyledModal>\n    </div>\n  );\n}\n","/Users/albertshay/Desktop/silkroad/client/src/components/Posts/Posts.js",[],"/Users/albertshay/Desktop/silkroad/client/src/components/PostDetails/styles.js",[],"/Users/albertshay/Desktop/silkroad/client/src/components/Pagination.jsx",[],"/Users/albertshay/Desktop/silkroad/client/src/components/PostDetails/CommentSection.jsx",[],"/Users/albertshay/Desktop/silkroad/client/src/api/index.js",[],"/Users/albertshay/Desktop/silkroad/client/src/components/Map/styles.js",[],"/Users/albertshay/Desktop/silkroad/client/src/components/Posts/styles.js",[],"/Users/albertshay/Desktop/silkroad/client/src/components/Posts/Post/Post.js",["204","205"],"import React from 'react';\nimport {\n  Card,\n  CardActions,\n  CardContent,\n  CardMedia,\n  Button,\n  Typography,\n  ButtonBase,\n} from '@material-ui/core/';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\n// import ThumbUpAltOutlined from '@material-ui/icons/ThumbUpAltOutlined';\nimport { useDispatch } from 'react-redux';\nimport moment from 'moment';\nimport { useHistory } from 'react-router-dom';\n\nimport { likePost, deletePost } from '../../../actions/posts';\nimport useStyles from './styles';\n\nconst Post = ({ post, setCurrentId, showModal }) => {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const user = JSON.parse(localStorage.getItem('profile'));\n  const history = useHistory();\n\n  const Likes = () => {\n    console.log(post);\n    if (post?.likes?.length > 0) {\n      return post.likes.find(\n        (like) => like === (user?.result?.googleId || user?.result?._id)\n      ) ? (\n        <>\n          <FavoriteBorderIcon fontSize='small' />\n          &nbsp;\n          {post.likes.length > 2\n            ? `You and ${post.likes.length - 1} others`\n            : `${post.likes.length} like${post.likes.length > 1 ? 's' : ''}`}\n        </>\n      ) : (\n        <>\n          <FavoriteBorderIcon fontSize='small' />\n          &nbsp;{post.likes.length} {post.likes.length === 1 ? 'Like' : 'Likes'}\n        </>\n      );\n    }\n\n    return (\n      <>\n        <FavoriteBorderIcon fontSize='small' />\n        &nbsp;Like\n      </>\n    );\n  };\n  const handleLike = () => {\n    if (!user?.token) {\n      history.push('/auth');\n    } else {\n      dispatch(likePost(post._id));\n    }\n  };\n  const openPost = (e) => {\n    // dispatch(getPost(post._id, history));\n\n    history.push(`/posts/${post._id}`);\n  };\n\n  return (\n    <Card className={classes.card}>\n      <CardMedia\n        className={classes.media}\n        image={\n          post.selectedFile ||\n          'https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png'\n        }\n        title={post.title}\n        onClick={openPost}\n      />\n      <div className={classes.overlay}>\n        {/*<Typography className={classes.creator}>{post.name}</Typography> */}\n        <Typography className={classes.creator} variant='body2'>\n          {moment(post.createdAt).fromNow()}\n        </Typography>\n      </div>\n      {(user?.result?.googleId === post?.creator ||\n        user?.result?._id === post?.creator) && (\n        <div className={classes.overlay2}>\n          <Button\n            onClick={() => {\n              showModal();\n              setCurrentId(post._id);\n            }}\n            style={{ color: 'white' }}\n            size='small'\n          >\n            <MoreHorizIcon fontSize='default' />\n          </Button>\n        </div>\n      )}\n\n      <div>\n        <Button\n          className={classes.overlay3}\n          size='small'\n          color='primary'\n          //  disabled={!user?.result}\n          //onClick={() => dispatch(likePost(post._id))}\n          onClick={handleLike}\n        >\n          <Likes />\n        </Button>\n      </div>\n      <div className={classes.details}></div>\n      <Typography\n        className={classes.title}\n        //gutterBottom\n        variant='h6'\n        component='h2'\n      >\n        {post.title}\n      </Typography>\n      <Typography\n        className={classes.location}\n        //gutterBottom\n        variant='h6'\n        component='h2'\n      >\n        {post.location}\n      </Typography>\n      <Typography className={classes.message}>{post.message}</Typography>\n      <Typography\n        className={classes.price}\n        //gutterBottom\n        variant='h6'\n        component='h2'\n      >\n        {`$${post.tags}`}\n      </Typography>\n\n      {/*<CardContent className={classes.message}>\n       \n       </CardContent> */}\n\n      <CardActions>\n        {/*  <Button\n          className={classes.likeButton}\n          size='small'\n          color='primary'\n          //  disabled={!user?.result}\n          //onClick={() => dispatch(likePost(post._id))}\n          onClick={handleLike}\n        >\n          <Likes />\n        </Button>*/}\n\n        {(user?.result?.googleId === post?.creator ||\n          user?.result?._id === post?.creator) && (\n          <Button\n            className={classes.overlay4}\n            size='small'\n            color='secondary'\n            onClick={() => dispatch(deletePost(post._id))}\n          >\n            <DeleteIcon fontSize='small' />\n          </Button>\n        )}\n      </CardActions>\n    </Card>\n  );\n};\n\nexport default Post;\n","/Users/albertshay/Desktop/silkroad/client/src/mapStyles.js",["206"],"export default [\n  {\n    featureType: 'all',\n    elementType: 'all',\n    stylers: [\n      {\n        saturation: '32',\n      },\n      {\n        lightness: '-1',\n      },\n      {\n        visibility: 'on',\n      },\n      {\n        weight: '1.18',\n      },\n    ],\n  },\n  {\n    featureType: 'administrative',\n    elementType: 'labels',\n    stylers: [\n      {\n        visibility: 'on',\n      },\n    ],\n  },\n  {\n    featureType: 'landscape',\n    elementType: 'labels',\n    stylers: [\n      {\n        visibility: 'off',\n      },\n    ],\n  },\n  {\n    featureType: 'landscape.man_made',\n    elementType: 'all',\n    stylers: [\n      {\n        saturation: '-70',\n      },\n      {\n        lightness: '8',\n      },\n    ],\n  },\n  {\n    featureType: 'poi',\n    elementType: 'labels',\n    stylers: [\n      {\n        visibility: 'off',\n      },\n    ],\n  },\n  {\n    featureType: 'road',\n    elementType: 'labels',\n    stylers: [\n      {\n        visibility: 'off',\n      },\n    ],\n  },\n  {\n    featureType: 'transit',\n    elementType: 'labels',\n    stylers: [\n      {\n        visibility: 'off',\n      },\n    ],\n  },\n  {\n    featureType: 'water',\n    elementType: 'all',\n    stylers: [\n      {\n        saturation: '70',\n      },\n      {\n        lightness: '-10',\n      },\n    ],\n  },\n  {\n    featureType: 'water',\n    elementType: 'labels',\n    stylers: [\n      {\n        visibility: 'off',\n      },\n      {\n        lightness: '12',\n      },\n    ],\n  },\n];\n","/Users/albertshay/Desktop/silkroad/client/src/components/styles.js",[],"/Users/albertshay/Desktop/silkroad/client/src/components/Form/styles.js",[],"/Users/albertshay/Desktop/silkroad/client/src/components/Form/UploadIcon.js",[],"/Users/albertshay/Desktop/silkroad/client/src/components/Posts/Post/styles.js",[],{"ruleId":"207","replacedBy":"208"},{"ruleId":"209","replacedBy":"210"},{"ruleId":"211","severity":1,"message":"212","line":77,"column":9,"nodeType":"213","messageId":"214","endLine":77,"endColumn":13},{"ruleId":"211","severity":1,"message":"215","line":9,"column":3,"nodeType":"213","messageId":"214","endLine":9,"endColumn":12},{"ruleId":"211","severity":1,"message":"216","line":15,"column":8,"nodeType":"213","messageId":"214","endLine":15,"endColumn":12},{"ruleId":"211","severity":1,"message":"217","line":20,"column":3,"nodeType":"213","messageId":"214","endLine":20,"endColumn":11},{"ruleId":"211","severity":1,"message":"218","line":22,"column":3,"nodeType":"213","messageId":"214","endLine":22,"endColumn":17},{"ruleId":"211","severity":1,"message":"219","line":39,"column":10,"nodeType":"213","messageId":"214","endLine":39,"endColumn":19},{"ruleId":"211","severity":1,"message":"220","line":39,"column":21,"nodeType":"213","messageId":"214","endLine":39,"endColumn":33},{"ruleId":"211","severity":1,"message":"221","line":43,"column":9,"nodeType":"213","messageId":"214","endLine":43,"endColumn":13},{"ruleId":"211","severity":1,"message":"222","line":44,"column":9,"nodeType":"213","messageId":"214","endLine":44,"endColumn":20},{"ruleId":"223","severity":1,"message":"224","line":75,"column":6,"nodeType":"225","endLine":75,"endColumn":16,"suggestions":"226"},{"ruleId":"211","severity":1,"message":"227","line":4,"column":3,"nodeType":"213","messageId":"214","endLine":4,"endColumn":9},{"ruleId":"211","severity":1,"message":"228","line":13,"column":8,"nodeType":"213","messageId":"214","endLine":13,"endColumn":24},{"ruleId":"211","severity":1,"message":"229","line":1,"column":27,"nodeType":"213","messageId":"214","endLine":1,"endColumn":36},{"ruleId":"211","severity":1,"message":"230","line":6,"column":3,"nodeType":"213","messageId":"214","endLine":6,"endColumn":8},{"ruleId":"211","severity":1,"message":"231","line":8,"column":3,"nodeType":"213","messageId":"214","endLine":8,"endColumn":19},{"ruleId":"211","severity":1,"message":"232","line":9,"column":3,"nodeType":"213","messageId":"214","endLine":9,"endColumn":12},{"ruleId":"211","severity":1,"message":"233","line":10,"column":3,"nodeType":"213","messageId":"214","endLine":10,"endColumn":9},{"ruleId":"211","severity":1,"message":"234","line":14,"column":10,"nodeType":"213","messageId":"214","endLine":14,"endColumn":23},{"ruleId":"211","severity":1,"message":"235","line":14,"column":25,"nodeType":"213","messageId":"214","endLine":14,"endColumn":39},{"ruleId":"211","severity":1,"message":"217","line":17,"column":3,"nodeType":"213","messageId":"214","endLine":17,"endColumn":11},{"ruleId":"211","severity":1,"message":"236","line":23,"column":8,"nodeType":"213","messageId":"214","endLine":23,"endColumn":11},{"ruleId":"211","severity":1,"message":"237","line":24,"column":8,"nodeType":"213","messageId":"214","endLine":24,"endColumn":17},{"ruleId":"211","severity":1,"message":"238","line":26,"column":8,"nodeType":"213","messageId":"214","endLine":26,"endColumn":25},{"ruleId":"211","severity":1,"message":"239","line":43,"column":18,"nodeType":"213","messageId":"214","endLine":43,"endColumn":27},{"ruleId":"211","severity":1,"message":"240","line":47,"column":11,"nodeType":"213","messageId":"214","endLine":47,"endColumn":16},{"ruleId":"211","severity":1,"message":"241","line":47,"column":18,"nodeType":"213","messageId":"214","endLine":47,"endColumn":27},{"ruleId":"211","severity":1,"message":"242","line":68,"column":9,"nodeType":"213","messageId":"214","endLine":68,"endColumn":21},{"ruleId":"211","severity":1,"message":"243","line":74,"column":9,"nodeType":"213","messageId":"214","endLine":74,"endColumn":23},{"ruleId":"211","severity":1,"message":"244","line":80,"column":9,"nodeType":"213","messageId":"214","endLine":80,"endColumn":22},{"ruleId":"211","severity":1,"message":"245","line":82,"column":9,"nodeType":"213","messageId":"214","endLine":82,"endColumn":25},{"ruleId":"211","severity":1,"message":"233","line":129,"column":3,"nodeType":"213","messageId":"214","endLine":129,"endColumn":9},{"ruleId":"211","severity":1,"message":"212","line":146,"column":9,"nodeType":"213","messageId":"214","endLine":146,"endColumn":13},{"ruleId":"223","severity":1,"message":"246","line":149,"column":6,"nodeType":"225","endLine":149,"endColumn":10,"suggestions":"247"},{"ruleId":"223","severity":1,"message":"246","line":157,"column":6,"nodeType":"225","endLine":157,"endColumn":12,"suggestions":"248"},{"ruleId":"249","severity":1,"message":"250","line":239,"column":13,"nodeType":"251","messageId":"252","endLine":239,"endColumn":42},{"ruleId":"253","severity":1,"message":"254","line":15,"column":1,"nodeType":"255","endLine":70,"endColumn":3},{"ruleId":"256","severity":1,"message":"257","line":47,"column":24,"nodeType":"258","messageId":"259","endLine":47,"endColumn":26},{"ruleId":"211","severity":1,"message":"260","line":6,"column":10,"nodeType":"213","messageId":"214","endLine":6,"endColumn":18},{"ruleId":"261","severity":1,"message":"262","line":105,"column":5,"nodeType":"263","messageId":"259","endLine":105,"endColumn":11},{"ruleId":"211","severity":1,"message":"264","line":1,"column":38,"nodeType":"213","messageId":"214","endLine":1,"endColumn":44},{"ruleId":"211","severity":1,"message":"265","line":12,"column":8,"nodeType":"213","messageId":"214","endLine":12,"endColumn":22},{"ruleId":"211","severity":1,"message":"237","line":14,"column":8,"nodeType":"213","messageId":"214","endLine":14,"endColumn":17},{"ruleId":"211","severity":1,"message":"266","line":19,"column":8,"nodeType":"213","messageId":"214","endLine":19,"endColumn":14},{"ruleId":"211","severity":1,"message":"267","line":47,"column":9,"nodeType":"213","messageId":"214","endLine":47,"endColumn":15},{"ruleId":"223","severity":1,"message":"268","line":64,"column":6,"nodeType":"225","endLine":64,"endColumn":12,"suggestions":"269"},{"ruleId":"211","severity":1,"message":"244","line":102,"column":9,"nodeType":"213","messageId":"214","endLine":102,"endColumn":22},{"ruleId":"211","severity":1,"message":"245","line":106,"column":9,"nodeType":"213","messageId":"214","endLine":106,"endColumn":25},{"ruleId":"211","severity":1,"message":"270","line":13,"column":3,"nodeType":"213","messageId":"214","endLine":13,"endColumn":16},{"ruleId":"211","severity":1,"message":"271","line":14,"column":3,"nodeType":"213","messageId":"214","endLine":14,"endColumn":17},{"ruleId":"272","severity":1,"message":"273","line":60,"column":19,"nodeType":"274","endLine":67,"endColumn":21},{"ruleId":"272","severity":1,"message":"273","line":81,"column":15,"nodeType":"274","endLine":84,"endColumn":17},{"ruleId":"211","severity":1,"message":"275","line":2,"column":18,"nodeType":"213","messageId":"214","endLine":2,"endColumn":21},{"ruleId":"211","severity":1,"message":"276","line":28,"column":7,"nodeType":"213","messageId":"214","endLine":28,"endColumn":12},{"ruleId":"211","severity":1,"message":"277","line":5,"column":3,"nodeType":"213","messageId":"214","endLine":5,"endColumn":14},{"ruleId":"211","severity":1,"message":"278","line":9,"column":3,"nodeType":"213","messageId":"214","endLine":9,"endColumn":13},{"ruleId":"253","severity":1,"message":"279","line":1,"column":1,"nodeType":"255","endLine":101,"endColumn":3},"no-native-reassign",["280"],"no-negated-in-lhs",["281"],"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","'InputBase' is defined but never used.","'Form' is defined but never used.","'getPosts' is defined but never used.","'getPostsByUser' is defined but never used.","'currentId' is assigned a value but never used.","'setCurrentId' is assigned a value but never used.","'page' is assigned a value but never used.","'searchQuery' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'logout' and 'user?.token'. Either include them or remove the dependency array.","ArrayExpression",["282"],"'Avatar' is defined but never used.","'LockOutlinedIcon' is defined but never used.","'useEffect' is defined but never used.","'Paper' is defined but never used.","'BottomNavigation' is defined but never used.","'TextField' is defined but never used.","'Button' is defined but never used.","'getPlacesData' is defined but never used.","'getWeatherData' is defined but never used.","'Map' is defined but never used.","'ChipInput' is defined but never used.","'ModalUnstyledDemo' is defined but never used.","'setSearch' is assigned a value but never used.","'posts' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'searchByUser' is assigned a value but never used.","'handleKeyPress' is assigned a value but never used.","'handleAddChip' is assigned a value but never used.","'handleDeleteChip' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["283"],["284"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'fontSize' is defined but never used.","no-dupe-keys","Duplicate key 'height'.","ObjectExpression","'useRef' is defined but never used.","'FileUploadIcon' is defined but never used.","'places' is defined but never used.","'notify' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'clear'. Either include it or remove the dependency array.",["285"],"'FETCH_BY_USER' is defined but never used.","'FETCH_BY_LIKES' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Box' is defined but never used.","'style' is assigned a value but never used.","'CardContent' is defined but never used.","'ButtonBase' is defined but never used.","Assign array to a variable before exporting as module default","no-global-assign","no-unsafe-negation",{"desc":"286","fix":"287"},{"desc":"288","fix":"289"},{"desc":"290","fix":"291"},{"desc":"292","fix":"293"},"Update the dependencies array to be: [location, logout, user?.token]",{"range":"294","text":"295"},"Update the dependencies array to be: [dispatch, id]",{"range":"296","text":"297"},"Update the dependencies array to be: [dispatch, post]",{"range":"298","text":"299"},"Update the dependencies array to be: [clear, post]",{"range":"300","text":"301"},[1900,1910],"[location, logout, user?.token]",[4994,4998],"[dispatch, id]",[5148,5154],"[dispatch, post]",[1762,1768],"[clear, post]"]