{"ast":null,"code":"\"use strict\";\n\nvar _class, _temp;\n\nconst {\n  UIPlugin\n} = require('@uppy/core');\n\nconst toArray = require('@uppy/utils/lib/toArray');\n\nconst isDragDropSupported = require('@uppy/utils/lib/isDragDropSupported');\n\nconst getDroppedFiles = require('@uppy/utils/lib/getDroppedFiles');\n\nconst {\n  h\n} = require('preact');\n/**\n * Drag & Drop plugin\n *\n */\n\n\nmodule.exports = (_temp = _class = class DragDrop extends UIPlugin {\n  // eslint-disable-next-line global-require\n  constructor(uppy, opts) {\n    super(uppy, opts);\n    this.type = 'acquirer';\n    this.id = this.opts.id || 'DragDrop';\n    this.title = 'Drag & Drop';\n    this.defaultLocale = {\n      strings: {\n        dropHereOr: 'Drop files here or %{browse}',\n        browse: 'browse'\n      }\n    }; // Default options\n\n    const defaultOpts = {\n      target: null,\n      inputName: 'files[]',\n      width: '100%',\n      height: '100%',\n      note: null\n    }; // Merge default options with the ones set by user\n\n    this.opts = { ...defaultOpts,\n      ...opts\n    };\n    this.i18nInit(); // Check for browser dragDrop support\n\n    this.isDragDropSupported = isDragDropSupported();\n    this.removeDragOverClassTimeout = null; // Bind `this` to class methods\n\n    this.onInputChange = this.onInputChange.bind(this);\n    this.handleDragOver = this.handleDragOver.bind(this);\n    this.handleDragLeave = this.handleDragLeave.bind(this);\n    this.handleDrop = this.handleDrop.bind(this);\n    this.addFiles = this.addFiles.bind(this);\n    this.render = this.render.bind(this);\n  }\n\n  addFiles(files) {\n    const descriptors = files.map(file => ({\n      source: this.id,\n      name: file.name,\n      type: file.type,\n      data: file,\n      meta: {\n        // path of the file relative to the ancestor directory the user selected.\n        // e.g. 'docs/Old Prague/airbnb.pdf'\n        relativePath: file.relativePath || null\n      }\n    }));\n\n    try {\n      this.uppy.addFiles(descriptors);\n    } catch (err) {\n      this.uppy.log(err);\n    }\n  }\n\n  onInputChange(event) {\n    this.uppy.log('[DragDrop] Files selected through input');\n    const files = toArray(event.target.files);\n    this.addFiles(files); // We clear the input after a file is selected, because otherwise\n    // change event is not fired in Chrome and Safari when a file\n    // with the same name is selected.\n    // ___Why not use value=\"\" on <input/> instead?\n    //    Because if we use that method of clearing the input,\n    //    Chrome will not trigger change if we drop the same file twice (Issue #768).\n    // eslint-disable-next-line no-param-reassign\n\n    event.target.value = null;\n  }\n\n  handleDrop(event) {\n    if (this.opts.onDrop) this.opts.onDrop(event);\n    event.preventDefault();\n    event.stopPropagation();\n    clearTimeout(this.removeDragOverClassTimeout); // 2. Remove dragover class\n\n    this.setPluginState({\n      isDraggingOver: false\n    }); // 3. Add all dropped files\n\n    this.uppy.log('[DragDrop] Files were dropped');\n\n    const logDropError = error => {\n      this.uppy.log(error, 'error');\n    };\n\n    getDroppedFiles(event.dataTransfer, {\n      logDropError\n    }).then(files => this.addFiles(files));\n  }\n\n  handleDragOver(event) {\n    if (this.opts.onDragOver) this.opts.onDragOver(event);\n    event.preventDefault();\n    event.stopPropagation(); // 1. Add a small (+) icon on drop\n    // (and prevent browsers from interpreting this as files being _moved_ into the browser\n    // https://github.com/transloadit/uppy/issues/1978)\n    //\n    // eslint-disable-next-line no-param-reassign\n\n    event.dataTransfer.dropEffect = 'copy';\n    clearTimeout(this.removeDragOverClassTimeout);\n    this.setPluginState({\n      isDraggingOver: true\n    });\n  }\n\n  handleDragLeave(event) {\n    if (this.opts.onDragLeave) this.opts.onDragLeave(event);\n    event.preventDefault();\n    event.stopPropagation();\n    clearTimeout(this.removeDragOverClassTimeout); // Timeout against flickering, this solution is taken from drag-drop library.\n    // Solution with 'pointer-events: none' didn't work across browsers.\n\n    this.removeDragOverClassTimeout = setTimeout(() => {\n      this.setPluginState({\n        isDraggingOver: false\n      });\n    }, 50);\n  }\n\n  renderHiddenFileInput() {\n    const {\n      restrictions\n    } = this.uppy.opts;\n    return h(\"input\", {\n      className: \"uppy-DragDrop-input\",\n      type: \"file\",\n      hidden: true,\n      ref: ref => {\n        this.fileInputRef = ref;\n      },\n      name: this.opts.inputName,\n      multiple: restrictions.maxNumberOfFiles !== 1,\n      accept: restrictions.allowedFileTypes,\n      onChange: this.onInputChange\n    });\n  }\n\n  static renderArrowSvg() {\n    return h(\"svg\", {\n      \"aria-hidden\": \"true\",\n      focusable: \"false\",\n      className: \"uppy-c-icon uppy-DragDrop-arrow\",\n      width: \"16\",\n      height: \"16\",\n      viewBox: \"0 0 16 16\"\n    }, h(\"path\", {\n      d: \"M11 10V0H5v10H2l6 6 6-6h-3zm0 0\",\n      fillRule: \"evenodd\"\n    }));\n  }\n\n  renderLabel() {\n    return h(\"div\", {\n      className: \"uppy-DragDrop-label\"\n    }, this.i18nArray('dropHereOr', {\n      browse: h(\"span\", {\n        className: \"uppy-DragDrop-browse\"\n      }, this.i18n('browse'))\n    }));\n  }\n\n  renderNote() {\n    return h(\"span\", {\n      className: \"uppy-DragDrop-note\"\n    }, this.opts.note);\n  }\n\n  render() {\n    const dragDropClass = `uppy-Root\n      uppy-u-reset\n      uppy-DragDrop-container\n      ${this.isDragDropSupported ? 'uppy-DragDrop--isDragDropSupported' : ''}\n      ${this.getPluginState().isDraggingOver ? 'uppy-DragDrop--isDraggingOver' : ''}\n    `;\n    const dragDropStyle = {\n      width: this.opts.width,\n      height: this.opts.height\n    };\n    return h(\"button\", {\n      type: \"button\",\n      className: dragDropClass,\n      style: dragDropStyle,\n      onClick: () => this.fileInputRef.click(),\n      onDragOver: this.handleDragOver,\n      onDragLeave: this.handleDragLeave,\n      onDrop: this.handleDrop\n    }, this.renderHiddenFileInput(), h(\"div\", {\n      className: \"uppy-DragDrop-inner\"\n    }, DragDrop.renderArrowSvg(), this.renderLabel(), this.renderNote()));\n  }\n\n  install() {\n    const {\n      target\n    } = this.opts;\n    this.setPluginState({\n      isDraggingOver: false\n    });\n\n    if (target) {\n      this.mount(target, this);\n    }\n  }\n\n  uninstall() {\n    this.unmount();\n  }\n\n}, _class.VERSION = \"2.0.4\", _temp);","map":{"version":3,"sources":["/Users/albertshay/Desktop/silkroad/client/node_modules/@uppy/drag-drop/lib/index.js"],"names":["_class","_temp","UIPlugin","require","toArray","isDragDropSupported","getDroppedFiles","h","module","exports","DragDrop","constructor","uppy","opts","type","id","title","defaultLocale","strings","dropHereOr","browse","defaultOpts","target","inputName","width","height","note","i18nInit","removeDragOverClassTimeout","onInputChange","bind","handleDragOver","handleDragLeave","handleDrop","addFiles","render","files","descriptors","map","file","source","name","data","meta","relativePath","err","log","event","value","onDrop","preventDefault","stopPropagation","clearTimeout","setPluginState","isDraggingOver","logDropError","error","dataTransfer","then","onDragOver","dropEffect","onDragLeave","setTimeout","renderHiddenFileInput","restrictions","className","hidden","ref","fileInputRef","multiple","maxNumberOfFiles","accept","allowedFileTypes","onChange","renderArrowSvg","focusable","viewBox","d","fillRule","renderLabel","i18nArray","i18n","renderNote","dragDropClass","getPluginState","dragDropStyle","style","onClick","click","install","mount","uninstall","unmount","VERSION"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _class, _temp;\n\nconst {\n  UIPlugin\n} = require('@uppy/core');\n\nconst toArray = require('@uppy/utils/lib/toArray');\n\nconst isDragDropSupported = require('@uppy/utils/lib/isDragDropSupported');\n\nconst getDroppedFiles = require('@uppy/utils/lib/getDroppedFiles');\n\nconst {\n  h\n} = require('preact');\n/**\n * Drag & Drop plugin\n *\n */\n\n\nmodule.exports = (_temp = _class = class DragDrop extends UIPlugin {\n  // eslint-disable-next-line global-require\n  constructor(uppy, opts) {\n    super(uppy, opts);\n    this.type = 'acquirer';\n    this.id = this.opts.id || 'DragDrop';\n    this.title = 'Drag & Drop';\n    this.defaultLocale = {\n      strings: {\n        dropHereOr: 'Drop files here or %{browse}',\n        browse: 'browse'\n      }\n    }; // Default options\n\n    const defaultOpts = {\n      target: null,\n      inputName: 'files[]',\n      width: '100%',\n      height: '100%',\n      note: null\n    }; // Merge default options with the ones set by user\n\n    this.opts = { ...defaultOpts,\n      ...opts\n    };\n    this.i18nInit(); // Check for browser dragDrop support\n\n    this.isDragDropSupported = isDragDropSupported();\n    this.removeDragOverClassTimeout = null; // Bind `this` to class methods\n\n    this.onInputChange = this.onInputChange.bind(this);\n    this.handleDragOver = this.handleDragOver.bind(this);\n    this.handleDragLeave = this.handleDragLeave.bind(this);\n    this.handleDrop = this.handleDrop.bind(this);\n    this.addFiles = this.addFiles.bind(this);\n    this.render = this.render.bind(this);\n  }\n\n  addFiles(files) {\n    const descriptors = files.map(file => ({\n      source: this.id,\n      name: file.name,\n      type: file.type,\n      data: file,\n      meta: {\n        // path of the file relative to the ancestor directory the user selected.\n        // e.g. 'docs/Old Prague/airbnb.pdf'\n        relativePath: file.relativePath || null\n      }\n    }));\n\n    try {\n      this.uppy.addFiles(descriptors);\n    } catch (err) {\n      this.uppy.log(err);\n    }\n  }\n\n  onInputChange(event) {\n    this.uppy.log('[DragDrop] Files selected through input');\n    const files = toArray(event.target.files);\n    this.addFiles(files); // We clear the input after a file is selected, because otherwise\n    // change event is not fired in Chrome and Safari when a file\n    // with the same name is selected.\n    // ___Why not use value=\"\" on <input/> instead?\n    //    Because if we use that method of clearing the input,\n    //    Chrome will not trigger change if we drop the same file twice (Issue #768).\n    // eslint-disable-next-line no-param-reassign\n\n    event.target.value = null;\n  }\n\n  handleDrop(event) {\n    if (this.opts.onDrop) this.opts.onDrop(event);\n    event.preventDefault();\n    event.stopPropagation();\n    clearTimeout(this.removeDragOverClassTimeout); // 2. Remove dragover class\n\n    this.setPluginState({\n      isDraggingOver: false\n    }); // 3. Add all dropped files\n\n    this.uppy.log('[DragDrop] Files were dropped');\n\n    const logDropError = error => {\n      this.uppy.log(error, 'error');\n    };\n\n    getDroppedFiles(event.dataTransfer, {\n      logDropError\n    }).then(files => this.addFiles(files));\n  }\n\n  handleDragOver(event) {\n    if (this.opts.onDragOver) this.opts.onDragOver(event);\n    event.preventDefault();\n    event.stopPropagation(); // 1. Add a small (+) icon on drop\n    // (and prevent browsers from interpreting this as files being _moved_ into the browser\n    // https://github.com/transloadit/uppy/issues/1978)\n    //\n    // eslint-disable-next-line no-param-reassign\n\n    event.dataTransfer.dropEffect = 'copy';\n    clearTimeout(this.removeDragOverClassTimeout);\n    this.setPluginState({\n      isDraggingOver: true\n    });\n  }\n\n  handleDragLeave(event) {\n    if (this.opts.onDragLeave) this.opts.onDragLeave(event);\n    event.preventDefault();\n    event.stopPropagation();\n    clearTimeout(this.removeDragOverClassTimeout); // Timeout against flickering, this solution is taken from drag-drop library.\n    // Solution with 'pointer-events: none' didn't work across browsers.\n\n    this.removeDragOverClassTimeout = setTimeout(() => {\n      this.setPluginState({\n        isDraggingOver: false\n      });\n    }, 50);\n  }\n\n  renderHiddenFileInput() {\n    const {\n      restrictions\n    } = this.uppy.opts;\n    return h(\"input\", {\n      className: \"uppy-DragDrop-input\",\n      type: \"file\",\n      hidden: true,\n      ref: ref => {\n        this.fileInputRef = ref;\n      },\n      name: this.opts.inputName,\n      multiple: restrictions.maxNumberOfFiles !== 1,\n      accept: restrictions.allowedFileTypes,\n      onChange: this.onInputChange\n    });\n  }\n\n  static renderArrowSvg() {\n    return h(\"svg\", {\n      \"aria-hidden\": \"true\",\n      focusable: \"false\",\n      className: \"uppy-c-icon uppy-DragDrop-arrow\",\n      width: \"16\",\n      height: \"16\",\n      viewBox: \"0 0 16 16\"\n    }, h(\"path\", {\n      d: \"M11 10V0H5v10H2l6 6 6-6h-3zm0 0\",\n      fillRule: \"evenodd\"\n    }));\n  }\n\n  renderLabel() {\n    return h(\"div\", {\n      className: \"uppy-DragDrop-label\"\n    }, this.i18nArray('dropHereOr', {\n      browse: h(\"span\", {\n        className: \"uppy-DragDrop-browse\"\n      }, this.i18n('browse'))\n    }));\n  }\n\n  renderNote() {\n    return h(\"span\", {\n      className: \"uppy-DragDrop-note\"\n    }, this.opts.note);\n  }\n\n  render() {\n    const dragDropClass = `uppy-Root\n      uppy-u-reset\n      uppy-DragDrop-container\n      ${this.isDragDropSupported ? 'uppy-DragDrop--isDragDropSupported' : ''}\n      ${this.getPluginState().isDraggingOver ? 'uppy-DragDrop--isDraggingOver' : ''}\n    `;\n    const dragDropStyle = {\n      width: this.opts.width,\n      height: this.opts.height\n    };\n    return h(\"button\", {\n      type: \"button\",\n      className: dragDropClass,\n      style: dragDropStyle,\n      onClick: () => this.fileInputRef.click(),\n      onDragOver: this.handleDragOver,\n      onDragLeave: this.handleDragLeave,\n      onDrop: this.handleDrop\n    }, this.renderHiddenFileInput(), h(\"div\", {\n      className: \"uppy-DragDrop-inner\"\n    }, DragDrop.renderArrowSvg(), this.renderLabel(), this.renderNote()));\n  }\n\n  install() {\n    const {\n      target\n    } = this.opts;\n    this.setPluginState({\n      isDraggingOver: false\n    });\n\n    if (target) {\n      this.mount(target, this);\n    }\n  }\n\n  uninstall() {\n    this.unmount();\n  }\n\n}, _class.VERSION = \"2.0.4\", _temp);"]},"metadata":{},"sourceType":"script"}