{"ast":null,"code":"import axios from'axios';var API=axios.create({baseURL:'http://localhost:8080'});API.interceptors.request.use(function(req){if(localStorage.getItem('profile')){req.headers.Authorization=\"Bearer \".concat(JSON.parse(localStorage.getItem('profile')).token);}return req;});export var fetchPost=function fetchPost(id){return API.get(\"/posts/\".concat(id));};export var fetchPosts=function fetchPosts(page){return API.get(\"/posts?page=\".concat(page));};export var fetchPostsBySearch=function fetchPostsBySearch(searchQuery){return API.get(\"/posts/search?searchQuery=\".concat(searchQuery.search||'none',\"&tags=\").concat(searchQuery.tags));};export var fetchPostsByUser=function fetchPostsByUser(user){return API.get(\"/profile/user?user:id=\".concat(user.results._id));};// export const fetchPostsByLikes = (user) =>\n//   API.get(\n//     `/posts/user?user=${user}/likes\n//     }`\n//   );\nexport var getPost=function getPost(id){return API.patch(\"/posts/\".concat(id,\"/likePost\"));};export var createPost=function createPost(newPost){return API.post('/posts',newPost);};export var likePost=function likePost(id){return API.patch(\"/posts/\".concat(id,\"/likePost\"));};export var comment=function comment(value,id){return API.post(\"/posts/\".concat(id,\"/commentPost\"),{value:value});};export var updatePost=function updatePost(id,updatedPost){return API.patch(\"/posts/\".concat(id),updatedPost);};export var deletePost=function deletePost(id){return API.delete(\"/posts/\".concat(id));};export var signIn=function signIn(formData){return API.post('/user/signin',formData);};export var signUp=function signUp(formData){return API.post('/user/signup',formData);};","map":{"version":3,"sources":["/Users/albertshay/Desktop/silkroad/client/src/api/index.js"],"names":["axios","API","create","baseURL","interceptors","request","use","req","localStorage","getItem","headers","Authorization","JSON","parse","token","fetchPost","id","get","fetchPosts","page","fetchPostsBySearch","searchQuery","search","tags","fetchPostsByUser","user","results","_id","getPost","patch","createPost","newPost","post","likePost","comment","value","updatePost","updatedPost","deletePost","delete","signIn","formData","signUp"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,GAAMC,CAAAA,GAAG,CAAGD,KAAK,CAACE,MAAN,CAAa,CACvBC,OAAO,CAAE,uBADc,CAAb,CAAZ,CAIAF,GAAG,CAACG,YAAJ,CAAiBC,OAAjB,CAAyBC,GAAzB,CAA6B,SAACC,GAAD,CAAS,CACpC,GAAIC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAJ,CAAqC,CACnCF,GAAG,CAACG,OAAJ,CAAYC,aAAZ,kBACEC,IAAI,CAACC,KAAL,CAAWL,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,EAA4CK,KAD9C,EAGD,CAED,MAAOP,CAAAA,GAAP,CACD,CARD,EAUA,MAAO,IAAMQ,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,EAAD,QAAQf,CAAAA,GAAG,CAACgB,GAAJ,kBAAkBD,EAAlB,EAAR,EAAlB,CACP,MAAO,IAAME,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,IAAD,QAAUlB,CAAAA,GAAG,CAACgB,GAAJ,uBAAuBE,IAAvB,EAAV,EAAnB,CACP,MAAO,IAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,WAAD,QAChCpB,CAAAA,GAAG,CAACgB,GAAJ,qCAC+BI,WAAW,CAACC,MAAZ,EAAsB,MADrD,kBAEID,WAAW,CAACE,IAFhB,EADgC,EAA3B,CAMP,MAAO,IAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,IAAD,QAC9BxB,CAAAA,GAAG,CAACgB,GAAJ,iCAAiCQ,IAAI,CAACC,OAAL,CAAaC,GAA9C,EAD8B,EAAzB,CAEP;AACA;AACA;AACA;AACA;AACA,MAAO,IAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACZ,EAAD,QAAQf,CAAAA,GAAG,CAAC4B,KAAJ,kBAAoBb,EAApB,cAAR,EAAhB,CACP,MAAO,IAAMc,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,OAAD,QAAa9B,CAAAA,GAAG,CAAC+B,IAAJ,CAAS,QAAT,CAAmBD,OAAnB,CAAb,EAAnB,CACP,MAAO,IAAME,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACjB,EAAD,QAAQf,CAAAA,GAAG,CAAC4B,KAAJ,kBAAoBb,EAApB,cAAR,EAAjB,CACP,MAAO,IAAMkB,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,KAAD,CAAQnB,EAAR,QACrBf,CAAAA,GAAG,CAAC+B,IAAJ,kBAAmBhB,EAAnB,iBAAqC,CAAEmB,KAAK,CAALA,KAAF,CAArC,CADqB,EAAhB,CAEP,MAAO,IAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACpB,EAAD,CAAKqB,WAAL,QACxBpC,CAAAA,GAAG,CAAC4B,KAAJ,kBAAoBb,EAApB,EAA0BqB,WAA1B,CADwB,EAAnB,CAEP,MAAO,IAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACtB,EAAD,QAAQf,CAAAA,GAAG,CAACsC,MAAJ,kBAAqBvB,EAArB,EAAR,EAAnB,CAEP,MAAO,IAAMwB,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACC,QAAD,QAAcxC,CAAAA,GAAG,CAAC+B,IAAJ,CAAS,cAAT,CAAyBS,QAAzB,CAAd,EAAf,CACP,MAAO,IAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACD,QAAD,QAAcxC,CAAAA,GAAG,CAAC+B,IAAJ,CAAS,cAAT,CAAyBS,QAAzB,CAAd,EAAf","sourcesContent":["import axios from 'axios';\n\nconst API = axios.create({\n  baseURL: 'http://localhost:8080',\n});\n\nAPI.interceptors.request.use((req) => {\n  if (localStorage.getItem('profile')) {\n    req.headers.Authorization = `Bearer ${\n      JSON.parse(localStorage.getItem('profile')).token\n    }`;\n  }\n\n  return req;\n});\n\nexport const fetchPost = (id) => API.get(`/posts/${id}`);\nexport const fetchPosts = (page) => API.get(`/posts?page=${page}`);\nexport const fetchPostsBySearch = (searchQuery) =>\n  API.get(\n    `/posts/search?searchQuery=${searchQuery.search || 'none'}&tags=${\n      searchQuery.tags\n    }`\n  );\nexport const fetchPostsByUser = (user) =>\n  API.get(`/profile/user?user:id=${user.results._id}`);\n// export const fetchPostsByLikes = (user) =>\n//   API.get(\n//     `/posts/user?user=${user}/likes\n//     }`\n//   );\nexport const getPost = (id) => API.patch(`/posts/${id}/likePost`);\nexport const createPost = (newPost) => API.post('/posts', newPost);\nexport const likePost = (id) => API.patch(`/posts/${id}/likePost`);\nexport const comment = (value, id) =>\n  API.post(`/posts/${id}/commentPost`, { value });\nexport const updatePost = (id, updatedPost) =>\n  API.patch(`/posts/${id}`, updatedPost);\nexport const deletePost = (id) => API.delete(`/posts/${id}`);\n\nexport const signIn = (formData) => API.post('/user/signin', formData);\nexport const signUp = (formData) => API.post('/user/signup', formData);\n"]},"metadata":{},"sourceType":"module"}