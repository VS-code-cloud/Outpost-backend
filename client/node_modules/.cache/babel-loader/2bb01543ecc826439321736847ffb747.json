{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"/Users/albertshay/Desktop/silkroad/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _objectSpread = require(\"/Users/albertshay/Desktop/silkroad/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread2\");\n\nvar _classCallCheck = require(\"/Users/albertshay/Desktop/silkroad/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/albertshay/Desktop/silkroad/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/Users/albertshay/Desktop/silkroad/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/albertshay/Desktop/silkroad/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar _class, _temp;\n\nvar _require = require('@uppy/core'),\n    UIPlugin = _require.UIPlugin;\n\nvar dataURItoBlob = require('@uppy/utils/lib/dataURItoBlob');\n\nvar isObjectURL = require('@uppy/utils/lib/isObjectURL');\n\nvar isPreviewSupported = require('@uppy/utils/lib/isPreviewSupported');\n\nvar exifr = require('exifr/dist/mini.legacy.umd.js');\n/**\n * The Thumbnail Generator plugin\n */\n\n\nmodule.exports = (_temp = _class = /*#__PURE__*/function (_UIPlugin) {\n  _inherits(ThumbnailGenerator, _UIPlugin);\n\n  var _super = _createSuper(ThumbnailGenerator);\n\n  function ThumbnailGenerator(uppy, opts) {\n    var _this;\n\n    _classCallCheck(this, ThumbnailGenerator);\n\n    _this = _super.call(this, uppy, opts);\n\n    _this.onFileAdded = function (file) {\n      if (!file.preview && file.data && isPreviewSupported(file.type) && !file.isRemote) {\n        _this.addToQueue(file.id);\n      }\n    };\n\n    _this.onCancelRequest = function (file) {\n      var index = _this.queue.indexOf(file.id);\n\n      if (index !== -1) {\n        _this.queue.splice(index, 1);\n      }\n    };\n\n    _this.onFileRemoved = function (file) {\n      var index = _this.queue.indexOf(file.id);\n\n      if (index !== -1) {\n        _this.queue.splice(index, 1);\n      } // Clean up object URLs.\n\n\n      if (file.preview && isObjectURL(file.preview)) {\n        URL.revokeObjectURL(file.preview);\n      }\n    };\n\n    _this.onRestored = function () {\n      var restoredFiles = _this.uppy.getFiles().filter(function (file) {\n        return file.isRestored;\n      });\n\n      restoredFiles.forEach(function (file) {\n        // Only add blob URLs; they are likely invalid after being restored.\n        if (!file.preview || isObjectURL(file.preview)) {\n          _this.addToQueue(file.id);\n        }\n      });\n    };\n\n    _this.waitUntilAllProcessed = function (fileIDs) {\n      fileIDs.forEach(function (fileID) {\n        var file = _this.uppy.getFile(fileID);\n\n        _this.uppy.emit('preprocess-progress', file, {\n          mode: 'indeterminate',\n          message: _this.i18n('generatingThumbnails')\n        });\n      });\n\n      var emitPreprocessCompleteForAll = function emitPreprocessCompleteForAll() {\n        fileIDs.forEach(function (fileID) {\n          var file = _this.uppy.getFile(fileID);\n\n          _this.uppy.emit('preprocess-complete', file);\n        });\n      };\n\n      return new Promise(function (resolve) {\n        if (_this.queueProcessing) {\n          _this.uppy.once('thumbnail:all-generated', function () {\n            emitPreprocessCompleteForAll();\n            resolve();\n          });\n        } else {\n          emitPreprocessCompleteForAll();\n          resolve();\n        }\n      });\n    };\n\n    _this.type = 'modifier';\n    _this.id = _this.opts.id || 'ThumbnailGenerator';\n    _this.title = 'Thumbnail Generator';\n    _this.queue = [];\n    _this.queueProcessing = false;\n    _this.defaultThumbnailDimension = 200;\n    _this.thumbnailType = _this.opts.thumbnailType || 'image/jpeg';\n    _this.defaultLocale = {\n      strings: {\n        generatingThumbnails: 'Generating thumbnails...'\n      }\n    };\n    var defaultOptions = {\n      thumbnailWidth: null,\n      thumbnailHeight: null,\n      waitForThumbnailsBeforeUpload: false,\n      lazy: false\n    };\n    _this.opts = _objectSpread(_objectSpread({}, defaultOptions), opts);\n\n    _this.i18nInit();\n\n    if (_this.opts.lazy && _this.opts.waitForThumbnailsBeforeUpload) {\n      throw new Error('ThumbnailGenerator: The `lazy` and `waitForThumbnailsBeforeUpload` options are mutually exclusive. Please ensure at most one of them is set to `true`.');\n    }\n\n    return _this;\n  }\n  /**\n   * Create a thumbnail for the given Uppy file object.\n   *\n   * @param {{data: Blob}} file\n   * @param {number} targetWidth\n   * @param {number} targetHeight\n   * @returns {Promise}\n   */\n\n\n  _createClass(ThumbnailGenerator, [{\n    key: \"createThumbnail\",\n    value: function createThumbnail(file, targetWidth, targetHeight) {\n      var _this2 = this;\n\n      var originalUrl = URL.createObjectURL(file.data);\n      var onload = new Promise(function (resolve, reject) {\n        var image = new Image();\n        image.src = originalUrl;\n        image.addEventListener('load', function () {\n          URL.revokeObjectURL(originalUrl);\n          resolve(image);\n        });\n        image.addEventListener('error', function (event) {\n          URL.revokeObjectURL(originalUrl);\n          reject(event.error || new Error('Could not create thumbnail'));\n        });\n      });\n      var orientationPromise = exifr.rotation(file.data).catch(function () {\n        return 1;\n      });\n      return Promise.all([onload, orientationPromise]).then(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            image = _ref2[0],\n            orientation = _ref2[1];\n\n        var dimensions = _this2.getProportionalDimensions(image, targetWidth, targetHeight, orientation.deg);\n\n        var rotatedImage = _this2.rotateImage(image, orientation);\n\n        var resizedImage = _this2.resizeImage(rotatedImage, dimensions.width, dimensions.height);\n\n        return _this2.canvasToBlob(resizedImage, _this2.thumbnailType, 80);\n      }).then(function (blob) {\n        return URL.createObjectURL(blob);\n      });\n    }\n    /**\n     * Get the new calculated dimensions for the given image and a target width\n     * or height. If both width and height are given, only width is taken into\n     * account. If neither width nor height are given, the default dimension\n     * is used.\n     */\n\n  }, {\n    key: \"getProportionalDimensions\",\n    value: function getProportionalDimensions(img, width, height, rotation) {\n      var aspect = img.width / img.height;\n\n      if (rotation === 90 || rotation === 270) {\n        aspect = img.height / img.width;\n      }\n\n      if (width != null) {\n        return {\n          width: width,\n          height: Math.round(width / aspect)\n        };\n      }\n\n      if (height != null) {\n        return {\n          width: Math.round(height * aspect),\n          height: height\n        };\n      }\n\n      return {\n        width: this.defaultThumbnailDimension,\n        height: Math.round(this.defaultThumbnailDimension / aspect)\n      };\n    }\n    /**\n     * Make sure the image doesnâ€™t exceed browser/device canvas limits.\n     * For ios with 256 RAM and ie\n     */\n\n  }, {\n    key: \"protect\",\n    value: function protect(image) {\n      // https://stackoverflow.com/questions/6081483/maximum-size-of-a-canvas-element\n      var ratio = image.width / image.height;\n      var maxSquare = 5000000; // ios max canvas square\n\n      var maxSize = 4096; // ie max canvas dimensions\n\n      var maxW = Math.floor(Math.sqrt(maxSquare * ratio));\n      var maxH = Math.floor(maxSquare / Math.sqrt(maxSquare * ratio));\n\n      if (maxW > maxSize) {\n        maxW = maxSize;\n        maxH = Math.round(maxW / ratio);\n      }\n\n      if (maxH > maxSize) {\n        maxH = maxSize;\n        maxW = Math.round(ratio * maxH);\n      }\n\n      if (image.width > maxW) {\n        var canvas = document.createElement('canvas');\n        canvas.width = maxW;\n        canvas.height = maxH;\n        canvas.getContext('2d').drawImage(image, 0, 0, maxW, maxH);\n        image = canvas;\n      }\n\n      return image;\n    }\n    /**\n     * Resize an image to the target `width` and `height`.\n     *\n     * Returns a Canvas with the resized image on it.\n     */\n\n  }, {\n    key: \"resizeImage\",\n    value: function resizeImage(image, targetWidth, targetHeight) {\n      // Resizing in steps refactored to use a solution from\n      // https://blog.uploadcare.com/image-resize-in-browsers-is-broken-e38eed08df01\n      image = this.protect(image);\n      var steps = Math.ceil(Math.log2(image.width / targetWidth));\n\n      if (steps < 1) {\n        steps = 1;\n      }\n\n      var sW = targetWidth * Math.pow(2, steps - 1);\n      var sH = targetHeight * Math.pow(2, steps - 1);\n      var x = 2;\n\n      while (steps--) {\n        var canvas = document.createElement('canvas');\n        canvas.width = sW;\n        canvas.height = sH;\n        canvas.getContext('2d').drawImage(image, 0, 0, sW, sH);\n        image = canvas;\n        sW = Math.round(sW / x);\n        sH = Math.round(sH / x);\n      }\n\n      return image;\n    }\n  }, {\n    key: \"rotateImage\",\n    value: function rotateImage(image, translate) {\n      var w = image.width;\n      var h = image.height;\n\n      if (translate.deg === 90 || translate.deg === 270) {\n        w = image.height;\n        h = image.width;\n      }\n\n      var canvas = document.createElement('canvas');\n      canvas.width = w;\n      canvas.height = h;\n      var context = canvas.getContext('2d');\n      context.translate(w / 2, h / 2);\n\n      if (translate.canvas) {\n        context.rotate(translate.rad);\n        context.scale(translate.scaleX, translate.scaleY);\n      }\n\n      context.drawImage(image, -image.width / 2, -image.height / 2, image.width, image.height);\n      return canvas;\n    }\n    /**\n     * Save a <canvas> element's content to a Blob object.\n     *\n     * @param {HTMLCanvasElement} canvas\n     * @returns {Promise}\n     */\n\n  }, {\n    key: \"canvasToBlob\",\n    value: function canvasToBlob(canvas, type, quality) {\n      try {\n        canvas.getContext('2d').getImageData(0, 0, 1, 1);\n      } catch (err) {\n        if (err.code === 18) {\n          return Promise.reject(new Error('cannot read image, probably an svg with external resources'));\n        }\n      }\n\n      if (canvas.toBlob) {\n        return new Promise(function (resolve) {\n          canvas.toBlob(resolve, type, quality);\n        }).then(function (blob) {\n          if (blob === null) {\n            throw new Error('cannot read image, probably an svg with external resources');\n          }\n\n          return blob;\n        });\n      }\n\n      return Promise.resolve().then(function () {\n        return dataURItoBlob(canvas.toDataURL(type, quality), {});\n      }).then(function (blob) {\n        if (blob === null) {\n          throw new Error('could not extract blob, probably an old browser');\n        }\n\n        return blob;\n      });\n    }\n    /**\n     * Set the preview URL for a file.\n     */\n\n  }, {\n    key: \"setPreviewURL\",\n    value: function setPreviewURL(fileID, preview) {\n      this.uppy.setFileState(fileID, {\n        preview: preview\n      });\n    }\n  }, {\n    key: \"addToQueue\",\n    value: function addToQueue(item) {\n      this.queue.push(item);\n\n      if (this.queueProcessing === false) {\n        this.processQueue();\n      }\n    }\n  }, {\n    key: \"processQueue\",\n    value: function processQueue() {\n      var _this3 = this;\n\n      this.queueProcessing = true;\n\n      if (this.queue.length > 0) {\n        var current = this.uppy.getFile(this.queue.shift());\n\n        if (!current) {\n          this.uppy.log('[ThumbnailGenerator] file was removed before a thumbnail could be generated, but not removed from the queue. This is probably a bug', 'error');\n          return;\n        }\n\n        return this.requestThumbnail(current).catch(function () {}) // eslint-disable-line node/handle-callback-err\n        .then(function () {\n          return _this3.processQueue();\n        });\n      }\n\n      this.queueProcessing = false;\n      this.uppy.log('[ThumbnailGenerator] Emptied thumbnail queue');\n      this.uppy.emit('thumbnail:all-generated');\n    }\n  }, {\n    key: \"requestThumbnail\",\n    value: function requestThumbnail(file) {\n      var _this4 = this;\n\n      if (isPreviewSupported(file.type) && !file.isRemote) {\n        return this.createThumbnail(file, this.opts.thumbnailWidth, this.opts.thumbnailHeight).then(function (preview) {\n          _this4.setPreviewURL(file.id, preview);\n\n          _this4.uppy.log(\"[ThumbnailGenerator] Generated thumbnail for \".concat(file.id));\n\n          _this4.uppy.emit('thumbnail:generated', _this4.uppy.getFile(file.id), preview);\n        }).catch(function (err) {\n          _this4.uppy.log(\"[ThumbnailGenerator] Failed thumbnail for \".concat(file.id, \":\"), 'warning');\n\n          _this4.uppy.log(err, 'warning');\n\n          _this4.uppy.emit('thumbnail:error', _this4.uppy.getFile(file.id), err);\n        });\n      }\n\n      return Promise.resolve();\n    }\n  }, {\n    key: \"install\",\n    value: function install() {\n      this.uppy.on('file-removed', this.onFileRemoved);\n\n      if (this.opts.lazy) {\n        this.uppy.on('thumbnail:request', this.onFileAdded);\n        this.uppy.on('thumbnail:cancel', this.onCancelRequest);\n      } else {\n        this.uppy.on('file-added', this.onFileAdded);\n        this.uppy.on('restored', this.onRestored);\n      }\n\n      if (this.opts.waitForThumbnailsBeforeUpload) {\n        this.uppy.addPreProcessor(this.waitUntilAllProcessed);\n      }\n    }\n  }, {\n    key: \"uninstall\",\n    value: function uninstall() {\n      this.uppy.off('file-removed', this.onFileRemoved);\n\n      if (this.opts.lazy) {\n        this.uppy.off('thumbnail:request', this.onFileAdded);\n        this.uppy.off('thumbnail:cancel', this.onCancelRequest);\n      } else {\n        this.uppy.off('file-added', this.onFileAdded);\n        this.uppy.off('restored', this.onRestored);\n      }\n\n      if (this.opts.waitForThumbnailsBeforeUpload) {\n        this.uppy.removePreProcessor(this.waitUntilAllProcessed);\n      }\n    }\n  }]);\n\n  return ThumbnailGenerator;\n}(UIPlugin), _class.VERSION = \"2.0.5\", _temp);","map":{"version":3,"sources":["/Users/albertshay/Desktop/silkroad/client/node_modules/@uppy/thumbnail-generator/lib/index.js"],"names":["_class","_temp","require","UIPlugin","dataURItoBlob","isObjectURL","isPreviewSupported","exifr","module","exports","uppy","opts","onFileAdded","file","preview","data","type","isRemote","addToQueue","id","onCancelRequest","index","queue","indexOf","splice","onFileRemoved","URL","revokeObjectURL","onRestored","restoredFiles","getFiles","filter","isRestored","forEach","waitUntilAllProcessed","fileIDs","fileID","getFile","emit","mode","message","i18n","emitPreprocessCompleteForAll","Promise","resolve","queueProcessing","once","title","defaultThumbnailDimension","thumbnailType","defaultLocale","strings","generatingThumbnails","defaultOptions","thumbnailWidth","thumbnailHeight","waitForThumbnailsBeforeUpload","lazy","i18nInit","Error","targetWidth","targetHeight","originalUrl","createObjectURL","onload","reject","image","Image","src","addEventListener","event","error","orientationPromise","rotation","catch","all","then","orientation","dimensions","getProportionalDimensions","deg","rotatedImage","rotateImage","resizedImage","resizeImage","width","height","canvasToBlob","blob","img","aspect","Math","round","ratio","maxSquare","maxSize","maxW","floor","sqrt","maxH","canvas","document","createElement","getContext","drawImage","protect","steps","ceil","log2","sW","sH","x","translate","w","h","context","rotate","rad","scale","scaleX","scaleY","quality","getImageData","err","code","toBlob","toDataURL","setFileState","item","push","processQueue","length","current","shift","log","requestThumbnail","createThumbnail","setPreviewURL","on","addPreProcessor","off","removePreProcessor","VERSION"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _class, _temp;\n\nconst {\n  UIPlugin\n} = require('@uppy/core');\n\nconst dataURItoBlob = require('@uppy/utils/lib/dataURItoBlob');\n\nconst isObjectURL = require('@uppy/utils/lib/isObjectURL');\n\nconst isPreviewSupported = require('@uppy/utils/lib/isPreviewSupported');\n\nconst exifr = require('exifr/dist/mini.legacy.umd.js');\n/**\n * The Thumbnail Generator plugin\n */\n\n\nmodule.exports = (_temp = _class = class ThumbnailGenerator extends UIPlugin {\n  constructor(uppy, opts) {\n    super(uppy, opts);\n\n    this.onFileAdded = file => {\n      if (!file.preview && file.data && isPreviewSupported(file.type) && !file.isRemote) {\n        this.addToQueue(file.id);\n      }\n    };\n\n    this.onCancelRequest = file => {\n      const index = this.queue.indexOf(file.id);\n\n      if (index !== -1) {\n        this.queue.splice(index, 1);\n      }\n    };\n\n    this.onFileRemoved = file => {\n      const index = this.queue.indexOf(file.id);\n\n      if (index !== -1) {\n        this.queue.splice(index, 1);\n      } // Clean up object URLs.\n\n\n      if (file.preview && isObjectURL(file.preview)) {\n        URL.revokeObjectURL(file.preview);\n      }\n    };\n\n    this.onRestored = () => {\n      const restoredFiles = this.uppy.getFiles().filter(file => file.isRestored);\n      restoredFiles.forEach(file => {\n        // Only add blob URLs; they are likely invalid after being restored.\n        if (!file.preview || isObjectURL(file.preview)) {\n          this.addToQueue(file.id);\n        }\n      });\n    };\n\n    this.waitUntilAllProcessed = fileIDs => {\n      fileIDs.forEach(fileID => {\n        const file = this.uppy.getFile(fileID);\n        this.uppy.emit('preprocess-progress', file, {\n          mode: 'indeterminate',\n          message: this.i18n('generatingThumbnails')\n        });\n      });\n\n      const emitPreprocessCompleteForAll = () => {\n        fileIDs.forEach(fileID => {\n          const file = this.uppy.getFile(fileID);\n          this.uppy.emit('preprocess-complete', file);\n        });\n      };\n\n      return new Promise(resolve => {\n        if (this.queueProcessing) {\n          this.uppy.once('thumbnail:all-generated', () => {\n            emitPreprocessCompleteForAll();\n            resolve();\n          });\n        } else {\n          emitPreprocessCompleteForAll();\n          resolve();\n        }\n      });\n    };\n\n    this.type = 'modifier';\n    this.id = this.opts.id || 'ThumbnailGenerator';\n    this.title = 'Thumbnail Generator';\n    this.queue = [];\n    this.queueProcessing = false;\n    this.defaultThumbnailDimension = 200;\n    this.thumbnailType = this.opts.thumbnailType || 'image/jpeg';\n    this.defaultLocale = {\n      strings: {\n        generatingThumbnails: 'Generating thumbnails...'\n      }\n    };\n    const defaultOptions = {\n      thumbnailWidth: null,\n      thumbnailHeight: null,\n      waitForThumbnailsBeforeUpload: false,\n      lazy: false\n    };\n    this.opts = { ...defaultOptions,\n      ...opts\n    };\n    this.i18nInit();\n\n    if (this.opts.lazy && this.opts.waitForThumbnailsBeforeUpload) {\n      throw new Error('ThumbnailGenerator: The `lazy` and `waitForThumbnailsBeforeUpload` options are mutually exclusive. Please ensure at most one of them is set to `true`.');\n    }\n  }\n  /**\n   * Create a thumbnail for the given Uppy file object.\n   *\n   * @param {{data: Blob}} file\n   * @param {number} targetWidth\n   * @param {number} targetHeight\n   * @returns {Promise}\n   */\n\n\n  createThumbnail(file, targetWidth, targetHeight) {\n    const originalUrl = URL.createObjectURL(file.data);\n    const onload = new Promise((resolve, reject) => {\n      const image = new Image();\n      image.src = originalUrl;\n      image.addEventListener('load', () => {\n        URL.revokeObjectURL(originalUrl);\n        resolve(image);\n      });\n      image.addEventListener('error', event => {\n        URL.revokeObjectURL(originalUrl);\n        reject(event.error || new Error('Could not create thumbnail'));\n      });\n    });\n    const orientationPromise = exifr.rotation(file.data).catch(() => 1);\n    return Promise.all([onload, orientationPromise]).then(([image, orientation]) => {\n      const dimensions = this.getProportionalDimensions(image, targetWidth, targetHeight, orientation.deg);\n      const rotatedImage = this.rotateImage(image, orientation);\n      const resizedImage = this.resizeImage(rotatedImage, dimensions.width, dimensions.height);\n      return this.canvasToBlob(resizedImage, this.thumbnailType, 80);\n    }).then(blob => {\n      return URL.createObjectURL(blob);\n    });\n  }\n  /**\n   * Get the new calculated dimensions for the given image and a target width\n   * or height. If both width and height are given, only width is taken into\n   * account. If neither width nor height are given, the default dimension\n   * is used.\n   */\n\n\n  getProportionalDimensions(img, width, height, rotation) {\n    let aspect = img.width / img.height;\n\n    if (rotation === 90 || rotation === 270) {\n      aspect = img.height / img.width;\n    }\n\n    if (width != null) {\n      return {\n        width,\n        height: Math.round(width / aspect)\n      };\n    }\n\n    if (height != null) {\n      return {\n        width: Math.round(height * aspect),\n        height\n      };\n    }\n\n    return {\n      width: this.defaultThumbnailDimension,\n      height: Math.round(this.defaultThumbnailDimension / aspect)\n    };\n  }\n  /**\n   * Make sure the image doesnâ€™t exceed browser/device canvas limits.\n   * For ios with 256 RAM and ie\n   */\n\n\n  protect(image) {\n    // https://stackoverflow.com/questions/6081483/maximum-size-of-a-canvas-element\n    const ratio = image.width / image.height;\n    const maxSquare = 5000000; // ios max canvas square\n\n    const maxSize = 4096; // ie max canvas dimensions\n\n    let maxW = Math.floor(Math.sqrt(maxSquare * ratio));\n    let maxH = Math.floor(maxSquare / Math.sqrt(maxSquare * ratio));\n\n    if (maxW > maxSize) {\n      maxW = maxSize;\n      maxH = Math.round(maxW / ratio);\n    }\n\n    if (maxH > maxSize) {\n      maxH = maxSize;\n      maxW = Math.round(ratio * maxH);\n    }\n\n    if (image.width > maxW) {\n      const canvas = document.createElement('canvas');\n      canvas.width = maxW;\n      canvas.height = maxH;\n      canvas.getContext('2d').drawImage(image, 0, 0, maxW, maxH);\n      image = canvas;\n    }\n\n    return image;\n  }\n  /**\n   * Resize an image to the target `width` and `height`.\n   *\n   * Returns a Canvas with the resized image on it.\n   */\n\n\n  resizeImage(image, targetWidth, targetHeight) {\n    // Resizing in steps refactored to use a solution from\n    // https://blog.uploadcare.com/image-resize-in-browsers-is-broken-e38eed08df01\n    image = this.protect(image);\n    let steps = Math.ceil(Math.log2(image.width / targetWidth));\n\n    if (steps < 1) {\n      steps = 1;\n    }\n\n    let sW = targetWidth * 2 ** (steps - 1);\n    let sH = targetHeight * 2 ** (steps - 1);\n    const x = 2;\n\n    while (steps--) {\n      const canvas = document.createElement('canvas');\n      canvas.width = sW;\n      canvas.height = sH;\n      canvas.getContext('2d').drawImage(image, 0, 0, sW, sH);\n      image = canvas;\n      sW = Math.round(sW / x);\n      sH = Math.round(sH / x);\n    }\n\n    return image;\n  }\n\n  rotateImage(image, translate) {\n    let w = image.width;\n    let h = image.height;\n\n    if (translate.deg === 90 || translate.deg === 270) {\n      w = image.height;\n      h = image.width;\n    }\n\n    const canvas = document.createElement('canvas');\n    canvas.width = w;\n    canvas.height = h;\n    const context = canvas.getContext('2d');\n    context.translate(w / 2, h / 2);\n\n    if (translate.canvas) {\n      context.rotate(translate.rad);\n      context.scale(translate.scaleX, translate.scaleY);\n    }\n\n    context.drawImage(image, -image.width / 2, -image.height / 2, image.width, image.height);\n    return canvas;\n  }\n  /**\n   * Save a <canvas> element's content to a Blob object.\n   *\n   * @param {HTMLCanvasElement} canvas\n   * @returns {Promise}\n   */\n\n\n  canvasToBlob(canvas, type, quality) {\n    try {\n      canvas.getContext('2d').getImageData(0, 0, 1, 1);\n    } catch (err) {\n      if (err.code === 18) {\n        return Promise.reject(new Error('cannot read image, probably an svg with external resources'));\n      }\n    }\n\n    if (canvas.toBlob) {\n      return new Promise(resolve => {\n        canvas.toBlob(resolve, type, quality);\n      }).then(blob => {\n        if (blob === null) {\n          throw new Error('cannot read image, probably an svg with external resources');\n        }\n\n        return blob;\n      });\n    }\n\n    return Promise.resolve().then(() => {\n      return dataURItoBlob(canvas.toDataURL(type, quality), {});\n    }).then(blob => {\n      if (blob === null) {\n        throw new Error('could not extract blob, probably an old browser');\n      }\n\n      return blob;\n    });\n  }\n  /**\n   * Set the preview URL for a file.\n   */\n\n\n  setPreviewURL(fileID, preview) {\n    this.uppy.setFileState(fileID, {\n      preview\n    });\n  }\n\n  addToQueue(item) {\n    this.queue.push(item);\n\n    if (this.queueProcessing === false) {\n      this.processQueue();\n    }\n  }\n\n  processQueue() {\n    this.queueProcessing = true;\n\n    if (this.queue.length > 0) {\n      const current = this.uppy.getFile(this.queue.shift());\n\n      if (!current) {\n        this.uppy.log('[ThumbnailGenerator] file was removed before a thumbnail could be generated, but not removed from the queue. This is probably a bug', 'error');\n        return;\n      }\n\n      return this.requestThumbnail(current).catch(() => {}) // eslint-disable-line node/handle-callback-err\n      .then(() => this.processQueue());\n    }\n\n    this.queueProcessing = false;\n    this.uppy.log('[ThumbnailGenerator] Emptied thumbnail queue');\n    this.uppy.emit('thumbnail:all-generated');\n  }\n\n  requestThumbnail(file) {\n    if (isPreviewSupported(file.type) && !file.isRemote) {\n      return this.createThumbnail(file, this.opts.thumbnailWidth, this.opts.thumbnailHeight).then(preview => {\n        this.setPreviewURL(file.id, preview);\n        this.uppy.log(`[ThumbnailGenerator] Generated thumbnail for ${file.id}`);\n        this.uppy.emit('thumbnail:generated', this.uppy.getFile(file.id), preview);\n      }).catch(err => {\n        this.uppy.log(`[ThumbnailGenerator] Failed thumbnail for ${file.id}:`, 'warning');\n        this.uppy.log(err, 'warning');\n        this.uppy.emit('thumbnail:error', this.uppy.getFile(file.id), err);\n      });\n    }\n\n    return Promise.resolve();\n  }\n\n  install() {\n    this.uppy.on('file-removed', this.onFileRemoved);\n\n    if (this.opts.lazy) {\n      this.uppy.on('thumbnail:request', this.onFileAdded);\n      this.uppy.on('thumbnail:cancel', this.onCancelRequest);\n    } else {\n      this.uppy.on('file-added', this.onFileAdded);\n      this.uppy.on('restored', this.onRestored);\n    }\n\n    if (this.opts.waitForThumbnailsBeforeUpload) {\n      this.uppy.addPreProcessor(this.waitUntilAllProcessed);\n    }\n  }\n\n  uninstall() {\n    this.uppy.off('file-removed', this.onFileRemoved);\n\n    if (this.opts.lazy) {\n      this.uppy.off('thumbnail:request', this.onFileAdded);\n      this.uppy.off('thumbnail:cancel', this.onCancelRequest);\n    } else {\n      this.uppy.off('file-added', this.onFileAdded);\n      this.uppy.off('restored', this.onRestored);\n    }\n\n    if (this.opts.waitForThumbnailsBeforeUpload) {\n      this.uppy.removePreProcessor(this.waitUntilAllProcessed);\n    }\n  }\n\n}, _class.VERSION = \"2.0.5\", _temp);"]},"metadata":{},"sourceType":"script"}