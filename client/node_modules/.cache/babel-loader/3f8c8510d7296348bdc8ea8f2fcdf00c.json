{"ast":null,"code":"\"use strict\";\n\nconst PropTypes = require('prop-types');\n\nconst React = require('react');\n\nconst FileInputPlugin = require('@uppy/file-input');\n\nconst propTypes = require('./propTypes');\n\nconst h = React.createElement;\n/**\n * React component that renders an area in which files can be dropped to be\n * uploaded.\n */\n\nclass FileInput extends React.Component {\n  componentDidMount() {\n    this.installPlugin();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.uppy !== this.props.uppy) {\n      this.uninstallPlugin(prevProps);\n      this.installPlugin();\n    }\n  }\n\n  componentWillUnmount() {\n    this.uninstallPlugin();\n  }\n\n  installPlugin() {\n    const {\n      uppy\n    } = this.props;\n    const options = {\n      id: 'react:FileInput',\n      ...this.props,\n      target: this.container\n    };\n    delete options.uppy;\n    uppy.use(FileInputPlugin, options);\n    this.plugin = uppy.getPlugin(options.id);\n  }\n\n  uninstallPlugin(props = this.props) {\n    const {\n      uppy\n    } = props;\n    uppy.removePlugin(this.plugin);\n  }\n\n  render() {\n    return h('div', {\n      ref: container => {\n        this.container = container;\n      }\n    });\n  }\n\n}\n\nFileInput.propTypes = {\n  uppy: propTypes.uppy,\n  locale: propTypes.locale,\n  pretty: PropTypes.bool,\n  inputName: PropTypes.string\n};\nFileInput.defaultProps = {};\nmodule.exports = FileInput;","map":{"version":3,"sources":["/Users/albertshay/Desktop/silkroad/client/node_modules/@uppy/react/lib/FileInput.js"],"names":["PropTypes","require","React","FileInputPlugin","propTypes","h","createElement","FileInput","Component","componentDidMount","installPlugin","componentDidUpdate","prevProps","uppy","props","uninstallPlugin","componentWillUnmount","options","id","target","container","use","plugin","getPlugin","removePlugin","render","ref","locale","pretty","bool","inputName","string","defaultProps","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,SAAS,GAAGC,OAAO,CAAC,YAAD,CAAzB;;AAEA,MAAMC,KAAK,GAAGD,OAAO,CAAC,OAAD,CAArB;;AAEA,MAAME,eAAe,GAAGF,OAAO,CAAC,kBAAD,CAA/B;;AAEA,MAAMG,SAAS,GAAGH,OAAO,CAAC,aAAD,CAAzB;;AAEA,MAAMI,CAAC,GAAGH,KAAK,CAACI,aAAhB;AACA;AACA;AACA;AACA;;AAEA,MAAMC,SAAN,SAAwBL,KAAK,CAACM,SAA9B,CAAwC;AACtCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,aAAL;AACD;;AAEDC,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC5B,QAAIA,SAAS,CAACC,IAAV,KAAmB,KAAKC,KAAL,CAAWD,IAAlC,EAAwC;AACtC,WAAKE,eAAL,CAAqBH,SAArB;AACA,WAAKF,aAAL;AACD;AACF;;AAEDM,EAAAA,oBAAoB,GAAG;AACrB,SAAKD,eAAL;AACD;;AAEDL,EAAAA,aAAa,GAAG;AACd,UAAM;AACJG,MAAAA;AADI,QAEF,KAAKC,KAFT;AAGA,UAAMG,OAAO,GAAG;AACdC,MAAAA,EAAE,EAAE,iBADU;AAEd,SAAG,KAAKJ,KAFM;AAGdK,MAAAA,MAAM,EAAE,KAAKC;AAHC,KAAhB;AAKA,WAAOH,OAAO,CAACJ,IAAf;AACAA,IAAAA,IAAI,CAACQ,GAAL,CAASlB,eAAT,EAA0Bc,OAA1B;AACA,SAAKK,MAAL,GAAcT,IAAI,CAACU,SAAL,CAAeN,OAAO,CAACC,EAAvB,CAAd;AACD;;AAEDH,EAAAA,eAAe,CAACD,KAAK,GAAG,KAAKA,KAAd,EAAqB;AAClC,UAAM;AACJD,MAAAA;AADI,QAEFC,KAFJ;AAGAD,IAAAA,IAAI,CAACW,YAAL,CAAkB,KAAKF,MAAvB;AACD;;AAEDG,EAAAA,MAAM,GAAG;AACP,WAAOpB,CAAC,CAAC,KAAD,EAAQ;AACdqB,MAAAA,GAAG,EAAEN,SAAS,IAAI;AAChB,aAAKA,SAAL,GAAiBA,SAAjB;AACD;AAHa,KAAR,CAAR;AAKD;;AA3CqC;;AA+CxCb,SAAS,CAACH,SAAV,GAAsB;AACpBS,EAAAA,IAAI,EAAET,SAAS,CAACS,IADI;AAEpBc,EAAAA,MAAM,EAAEvB,SAAS,CAACuB,MAFE;AAGpBC,EAAAA,MAAM,EAAE5B,SAAS,CAAC6B,IAHE;AAIpBC,EAAAA,SAAS,EAAE9B,SAAS,CAAC+B;AAJD,CAAtB;AAMAxB,SAAS,CAACyB,YAAV,GAAyB,EAAzB;AACAC,MAAM,CAACC,OAAP,GAAiB3B,SAAjB","sourcesContent":["\"use strict\";\n\nconst PropTypes = require('prop-types');\n\nconst React = require('react');\n\nconst FileInputPlugin = require('@uppy/file-input');\n\nconst propTypes = require('./propTypes');\n\nconst h = React.createElement;\n/**\n * React component that renders an area in which files can be dropped to be\n * uploaded.\n */\n\nclass FileInput extends React.Component {\n  componentDidMount() {\n    this.installPlugin();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.uppy !== this.props.uppy) {\n      this.uninstallPlugin(prevProps);\n      this.installPlugin();\n    }\n  }\n\n  componentWillUnmount() {\n    this.uninstallPlugin();\n  }\n\n  installPlugin() {\n    const {\n      uppy\n    } = this.props;\n    const options = {\n      id: 'react:FileInput',\n      ...this.props,\n      target: this.container\n    };\n    delete options.uppy;\n    uppy.use(FileInputPlugin, options);\n    this.plugin = uppy.getPlugin(options.id);\n  }\n\n  uninstallPlugin(props = this.props) {\n    const {\n      uppy\n    } = props;\n    uppy.removePlugin(this.plugin);\n  }\n\n  render() {\n    return h('div', {\n      ref: container => {\n        this.container = container;\n      }\n    });\n  }\n\n}\n\nFileInput.propTypes = {\n  uppy: propTypes.uppy,\n  locale: propTypes.locale,\n  pretty: PropTypes.bool,\n  inputName: PropTypes.string\n};\nFileInput.defaultProps = {};\nmodule.exports = FileInput;"]},"metadata":{},"sourceType":"script"}