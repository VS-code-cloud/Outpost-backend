{"ast":null,"code":"\"use strict\";\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nconst classNames = require('classnames');\n\nconst {\n  h\n} = require('preact');\n\nconst FileItem = require('./FileItem/index.js');\n\nconst VirtualList = require('./VirtualList');\n\nfunction chunks(list, size) {\n  const chunked = [];\n  let currentChunk = [];\n  list.forEach(item => {\n    if (currentChunk.length < size) {\n      currentChunk.push(item);\n    } else {\n      chunked.push(currentChunk);\n      currentChunk = [item];\n    }\n  });\n  if (currentChunk.length) chunked.push(currentChunk);\n  return chunked;\n}\n\nmodule.exports = props => {\n  const noFiles = props.totalFileCount === 0;\n  const dashboardFilesClass = classNames('uppy-Dashboard-files', {\n    'uppy-Dashboard-files--noFiles': noFiles\n  }); // It's not great that this is hardcoded!\n  // It's ESPECIALLY not great that this is checking against `itemsPerRow`!\n\n  const rowHeight = props.itemsPerRow === 1 // Mobile\n  ? 71 // 190px height + 2 * 5px margin\n  : 200;\n  const fileProps = {\n    // FIXME This is confusing, it's actually the Dashboard's plugin ID\n    id: props.id,\n    error: props.error,\n    // TODO move this to context\n    i18n: props.i18n,\n    uppy: props.uppy,\n    // features\n    acquirers: props.acquirers,\n    resumableUploads: props.resumableUploads,\n    individualCancellation: props.individualCancellation,\n    // visual options\n    hideRetryButton: props.hideRetryButton,\n    hidePauseResumeButton: props.hidePauseResumeButton,\n    hideCancelButton: props.hideCancelButton,\n    showLinkToFileUploadResult: props.showLinkToFileUploadResult,\n    showRemoveButtonAfterComplete: props.showRemoveButtonAfterComplete,\n    isWide: props.isWide,\n    metaFields: props.metaFields,\n    recoveredState: props.recoveredState,\n    // callbacks\n    toggleFileCard: props.toggleFileCard,\n    handleRequestThumbnail: props.handleRequestThumbnail,\n    handleCancelThumbnail: props.handleCancelThumbnail\n  };\n\n  const sortByGhostComesFirst = (file1, file2) => {\n    return props.files[file2].isGhost - props.files[file1].isGhost;\n  }; // Sort files by file.isGhost, ghost files first, only if recoveredState is present\n\n\n  const files = Object.keys(props.files);\n  if (props.recoveredState) files.sort(sortByGhostComesFirst);\n  const rows = chunks(files, props.itemsPerRow);\n\n  const renderRow = row => // The `role=\"presentation` attribute ensures that the list items are properly\n  // associated with the `VirtualList` element.\n  // We use the first file ID as the keyâ€”this should not change across scroll rerenders\n  h(\"div\", {\n    role: \"presentation\",\n    key: row[0]\n  }, row.map(fileID => h(FileItem, _extends({\n    key: fileID,\n    uppy: props.uppy\n  }, fileProps, {\n    role: \"listitem\",\n    openFileEditor: props.openFileEditor,\n    canEditFile: props.canEditFile,\n    toggleAddFilesPanel: props.toggleAddFilesPanel,\n    file: props.files[fileID]\n  }))));\n\n  return h(VirtualList, {\n    class: dashboardFilesClass,\n    role: \"list\",\n    data: rows,\n    renderRow: renderRow,\n    rowHeight: rowHeight\n  });\n};","map":{"version":3,"sources":["/Users/albertshay/Desktop/silkroad/client/node_modules/@uppy/dashboard/lib/components/FileList.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","classNames","require","h","FileItem","VirtualList","chunks","list","size","chunked","currentChunk","forEach","item","push","module","exports","props","noFiles","totalFileCount","dashboardFilesClass","rowHeight","itemsPerRow","fileProps","id","error","i18n","uppy","acquirers","resumableUploads","individualCancellation","hideRetryButton","hidePauseResumeButton","hideCancelButton","showLinkToFileUploadResult","showRemoveButtonAfterComplete","isWide","metaFields","recoveredState","toggleFileCard","handleRequestThumbnail","handleCancelThumbnail","sortByGhostComesFirst","file1","file2","files","isGhost","keys","sort","rows","renderRow","row","role","map","fileID","openFileEditor","canEditFile","toggleAddFilesPanel","file","class","data"],"mappings":"AAAA;;AAEA,SAASA,QAAT,GAAoB;AAAEA,EAAAA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAAUC,MAAV,EAAkB;AAAE,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,UAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAtB;;AAA2B,WAAK,IAAII,GAAT,IAAgBD,MAAhB,EAAwB;AAAE,YAAIN,MAAM,CAACQ,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCJ,MAArC,EAA6CC,GAA7C,CAAJ,EAAuD;AAAEL,UAAAA,MAAM,CAACK,GAAD,CAAN,GAAcD,MAAM,CAACC,GAAD,CAApB;AAA4B;AAAE;AAAE;;AAAC,WAAOL,MAAP;AAAgB,GAA5P;;AAA8P,SAAOH,QAAQ,CAACY,KAAT,CAAe,IAAf,EAAqBP,SAArB,CAAP;AAAyC;;AAE7T,MAAMQ,UAAU,GAAGC,OAAO,CAAC,YAAD,CAA1B;;AAEA,MAAM;AACJC,EAAAA;AADI,IAEFD,OAAO,CAAC,QAAD,CAFX;;AAIA,MAAME,QAAQ,GAAGF,OAAO,CAAC,qBAAD,CAAxB;;AAEA,MAAMG,WAAW,GAAGH,OAAO,CAAC,eAAD,CAA3B;;AAEA,SAASI,MAAT,CAAgBC,IAAhB,EAAsBC,IAAtB,EAA4B;AAC1B,QAAMC,OAAO,GAAG,EAAhB;AACA,MAAIC,YAAY,GAAG,EAAnB;AACAH,EAAAA,IAAI,CAACI,OAAL,CAAaC,IAAI,IAAI;AACnB,QAAIF,YAAY,CAAChB,MAAb,GAAsBc,IAA1B,EAAgC;AAC9BE,MAAAA,YAAY,CAACG,IAAb,CAAkBD,IAAlB;AACD,KAFD,MAEO;AACLH,MAAAA,OAAO,CAACI,IAAR,CAAaH,YAAb;AACAA,MAAAA,YAAY,GAAG,CAACE,IAAD,CAAf;AACD;AACF,GAPD;AAQA,MAAIF,YAAY,CAAChB,MAAjB,EAAyBe,OAAO,CAACI,IAAR,CAAaH,YAAb;AACzB,SAAOD,OAAP;AACD;;AAEDK,MAAM,CAACC,OAAP,GAAiBC,KAAK,IAAI;AACxB,QAAMC,OAAO,GAAGD,KAAK,CAACE,cAAN,KAAyB,CAAzC;AACA,QAAMC,mBAAmB,GAAGlB,UAAU,CAAC,sBAAD,EAAyB;AAC7D,qCAAiCgB;AAD4B,GAAzB,CAAtC,CAFwB,CAIpB;AACJ;;AAEA,QAAMG,SAAS,GAAGJ,KAAK,CAACK,WAAN,KAAsB,CAAtB,CAAwB;AAAxB,IAChB,EADgB,CACb;AADa,IAEhB,GAFF;AAGA,QAAMC,SAAS,GAAG;AAChB;AACAC,IAAAA,EAAE,EAAEP,KAAK,CAACO,EAFM;AAGhBC,IAAAA,KAAK,EAAER,KAAK,CAACQ,KAHG;AAIhB;AACAC,IAAAA,IAAI,EAAET,KAAK,CAACS,IALI;AAMhBC,IAAAA,IAAI,EAAEV,KAAK,CAACU,IANI;AAOhB;AACAC,IAAAA,SAAS,EAAEX,KAAK,CAACW,SARD;AAShBC,IAAAA,gBAAgB,EAAEZ,KAAK,CAACY,gBATR;AAUhBC,IAAAA,sBAAsB,EAAEb,KAAK,CAACa,sBAVd;AAWhB;AACAC,IAAAA,eAAe,EAAEd,KAAK,CAACc,eAZP;AAahBC,IAAAA,qBAAqB,EAAEf,KAAK,CAACe,qBAbb;AAchBC,IAAAA,gBAAgB,EAAEhB,KAAK,CAACgB,gBAdR;AAehBC,IAAAA,0BAA0B,EAAEjB,KAAK,CAACiB,0BAflB;AAgBhBC,IAAAA,6BAA6B,EAAElB,KAAK,CAACkB,6BAhBrB;AAiBhBC,IAAAA,MAAM,EAAEnB,KAAK,CAACmB,MAjBE;AAkBhBC,IAAAA,UAAU,EAAEpB,KAAK,CAACoB,UAlBF;AAmBhBC,IAAAA,cAAc,EAAErB,KAAK,CAACqB,cAnBN;AAoBhB;AACAC,IAAAA,cAAc,EAAEtB,KAAK,CAACsB,cArBN;AAsBhBC,IAAAA,sBAAsB,EAAEvB,KAAK,CAACuB,sBAtBd;AAuBhBC,IAAAA,qBAAqB,EAAExB,KAAK,CAACwB;AAvBb,GAAlB;;AA0BA,QAAMC,qBAAqB,GAAG,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC9C,WAAO3B,KAAK,CAAC4B,KAAN,CAAYD,KAAZ,EAAmBE,OAAnB,GAA6B7B,KAAK,CAAC4B,KAAN,CAAYF,KAAZ,EAAmBG,OAAvD;AACD,GAFD,CApCwB,CAsCrB;;;AAGH,QAAMD,KAAK,GAAGvD,MAAM,CAACyD,IAAP,CAAY9B,KAAK,CAAC4B,KAAlB,CAAd;AACA,MAAI5B,KAAK,CAACqB,cAAV,EAA0BO,KAAK,CAACG,IAAN,CAAWN,qBAAX;AAC1B,QAAMO,IAAI,GAAG1C,MAAM,CAACsC,KAAD,EAAQ5B,KAAK,CAACK,WAAd,CAAnB;;AAEA,QAAM4B,SAAS,GAAGC,GAAG,IAAI;AACzB;AACA;AACA/C,EAAAA,CAAC,CAAC,KAAD,EAAQ;AACPgD,IAAAA,IAAI,EAAE,cADC;AAEPvD,IAAAA,GAAG,EAAEsD,GAAG,CAAC,CAAD;AAFD,GAAR,EAGEA,GAAG,CAACE,GAAJ,CAAQC,MAAM,IAAIlD,CAAC,CAACC,QAAD,EAAWhB,QAAQ,CAAC;AACxCQ,IAAAA,GAAG,EAAEyD,MADmC;AAExC3B,IAAAA,IAAI,EAAEV,KAAK,CAACU;AAF4B,GAAD,EAGtCJ,SAHsC,EAG3B;AACZ6B,IAAAA,IAAI,EAAE,UADM;AAEZG,IAAAA,cAAc,EAAEtC,KAAK,CAACsC,cAFV;AAGZC,IAAAA,WAAW,EAAEvC,KAAK,CAACuC,WAHP;AAIZC,IAAAA,mBAAmB,EAAExC,KAAK,CAACwC,mBAJf;AAKZC,IAAAA,IAAI,EAAEzC,KAAK,CAAC4B,KAAN,CAAYS,MAAZ;AALM,GAH2B,CAAnB,CAAnB,CAHF,CAHD;;AAiBA,SAAOlD,CAAC,CAACE,WAAD,EAAc;AACpBqD,IAAAA,KAAK,EAAEvC,mBADa;AAEpBgC,IAAAA,IAAI,EAAE,MAFc;AAGpBQ,IAAAA,IAAI,EAAEX,IAHc;AAIpBC,IAAAA,SAAS,EAAEA,SAJS;AAKpB7B,IAAAA,SAAS,EAAEA;AALS,GAAd,CAAR;AAOD,CArED","sourcesContent":["\"use strict\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nconst classNames = require('classnames');\n\nconst {\n  h\n} = require('preact');\n\nconst FileItem = require('./FileItem/index.js');\n\nconst VirtualList = require('./VirtualList');\n\nfunction chunks(list, size) {\n  const chunked = [];\n  let currentChunk = [];\n  list.forEach(item => {\n    if (currentChunk.length < size) {\n      currentChunk.push(item);\n    } else {\n      chunked.push(currentChunk);\n      currentChunk = [item];\n    }\n  });\n  if (currentChunk.length) chunked.push(currentChunk);\n  return chunked;\n}\n\nmodule.exports = props => {\n  const noFiles = props.totalFileCount === 0;\n  const dashboardFilesClass = classNames('uppy-Dashboard-files', {\n    'uppy-Dashboard-files--noFiles': noFiles\n  }); // It's not great that this is hardcoded!\n  // It's ESPECIALLY not great that this is checking against `itemsPerRow`!\n\n  const rowHeight = props.itemsPerRow === 1 // Mobile\n  ? 71 // 190px height + 2 * 5px margin\n  : 200;\n  const fileProps = {\n    // FIXME This is confusing, it's actually the Dashboard's plugin ID\n    id: props.id,\n    error: props.error,\n    // TODO move this to context\n    i18n: props.i18n,\n    uppy: props.uppy,\n    // features\n    acquirers: props.acquirers,\n    resumableUploads: props.resumableUploads,\n    individualCancellation: props.individualCancellation,\n    // visual options\n    hideRetryButton: props.hideRetryButton,\n    hidePauseResumeButton: props.hidePauseResumeButton,\n    hideCancelButton: props.hideCancelButton,\n    showLinkToFileUploadResult: props.showLinkToFileUploadResult,\n    showRemoveButtonAfterComplete: props.showRemoveButtonAfterComplete,\n    isWide: props.isWide,\n    metaFields: props.metaFields,\n    recoveredState: props.recoveredState,\n    // callbacks\n    toggleFileCard: props.toggleFileCard,\n    handleRequestThumbnail: props.handleRequestThumbnail,\n    handleCancelThumbnail: props.handleCancelThumbnail\n  };\n\n  const sortByGhostComesFirst = (file1, file2) => {\n    return props.files[file2].isGhost - props.files[file1].isGhost;\n  }; // Sort files by file.isGhost, ghost files first, only if recoveredState is present\n\n\n  const files = Object.keys(props.files);\n  if (props.recoveredState) files.sort(sortByGhostComesFirst);\n  const rows = chunks(files, props.itemsPerRow);\n\n  const renderRow = row => // The `role=\"presentation` attribute ensures that the list items are properly\n  // associated with the `VirtualList` element.\n  // We use the first file ID as the keyâ€”this should not change across scroll rerenders\n  h(\"div\", {\n    role: \"presentation\",\n    key: row[0]\n  }, row.map(fileID => h(FileItem, _extends({\n    key: fileID,\n    uppy: props.uppy\n  }, fileProps, {\n    role: \"listitem\",\n    openFileEditor: props.openFileEditor,\n    canEditFile: props.canEditFile,\n    toggleAddFilesPanel: props.toggleAddFilesPanel,\n    file: props.files[fileID]\n  }))));\n\n  return h(VirtualList, {\n    class: dashboardFilesClass,\n    role: \"list\",\n    data: rows,\n    renderRow: renderRow,\n    rowHeight: rowHeight\n  });\n};"]},"metadata":{},"sourceType":"script"}