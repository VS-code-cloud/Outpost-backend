{"ast":null,"code":"\"use strict\";\n\nconst {\n  h,\n  Fragment\n} = require('preact');\n\nconst prettierBytes = require('@transloadit/prettier-bytes');\n\nconst truncateString = require('@uppy/utils/lib/truncateString');\n\nconst renderFileName = props => {\n  const {\n    author,\n    name\n  } = props.file.meta;\n\n  function getMaxNameLength() {\n    if (props.containerWidth <= 352) {\n      return 35;\n    }\n\n    if (props.containerWidth <= 576) {\n      return 60;\n    } // When `author` is present, we want to make sure\n    // the file name fits on one line so we can place\n    // the author on the second line.\n\n\n    return author ? 20 : 30;\n  }\n\n  return h(\"div\", {\n    className: \"uppy-Dashboard-Item-name\",\n    title: name\n  }, truncateString(name, getMaxNameLength()));\n};\n\nconst renderAuthor = props => {\n  const {\n    author\n  } = props.file.meta;\n  const {\n    providerName\n  } = props.file.remote;\n  const dot = `\\u00B7`;\n\n  if (!author) {\n    return null;\n  }\n\n  return h(\"div\", {\n    className: \"uppy-Dashboard-Item-author\"\n  }, h(\"a\", {\n    href: `${author.url}?utm_source=Companion&utm_medium=referral`,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\"\n  }, truncateString(author.name, 13)), providerName ? h(Fragment, null, ` ${dot} `, providerName) : null);\n};\n\nconst renderFileSize = props => props.file.size && h(\"div\", {\n  className: \"uppy-Dashboard-Item-statusSize\"\n}, prettierBytes(props.file.size));\n\nconst ReSelectButton = props => props.file.isGhost && h(\"span\", null, ' \\u2022 ', h(\"button\", {\n  className: \"uppy-u-reset uppy-c-btn uppy-Dashboard-Item-reSelect\",\n  type: \"button\",\n  onClick: props.toggleAddFilesPanel\n}, props.i18n('reSelect')));\n\nconst ErrorButton = ({\n  file,\n  onClick\n}) => {\n  if (file.error) {\n    return h(\"button\", {\n      className: \"uppy-Dashboard-Item-errorDetails\",\n      \"aria-label\": file.error,\n      \"data-microtip-position\": \"bottom\",\n      \"data-microtip-size\": \"medium\",\n      onClick: onClick,\n      type: \"button\"\n    }, \"?\");\n  }\n\n  return null;\n};\n\nmodule.exports = function FileInfo(props) {\n  return h(\"div\", {\n    className: \"uppy-Dashboard-Item-fileInfo\",\n    \"data-uppy-file-source\": props.file.source\n  }, renderFileName(props), h(\"div\", {\n    className: \"uppy-Dashboard-Item-status\"\n  }, renderFileSize(props), renderAuthor(props), ReSelectButton(props), h(ErrorButton, {\n    file: props.file // eslint-disable-next-line no-alert\n    ,\n    onClick: () => alert(props.file.error) // TODO: move to a custom alert implementation\n\n  })));\n};","map":{"version":3,"sources":["/Users/albertshay/Desktop/silkroad/client/node_modules/@uppy/dashboard/lib/components/FileItem/FileInfo/index.js"],"names":["h","Fragment","require","prettierBytes","truncateString","renderFileName","props","author","name","file","meta","getMaxNameLength","containerWidth","className","title","renderAuthor","providerName","remote","dot","href","url","target","rel","renderFileSize","size","ReSelectButton","isGhost","type","onClick","toggleAddFilesPanel","i18n","ErrorButton","error","module","exports","FileInfo","source","alert"],"mappings":"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","sourcesContent":["\"use strict\";\n\nconst {\n  h,\n  Fragment\n} = require('preact');\n\nconst prettierBytes = require('@transloadit/prettier-bytes');\n\nconst truncateString = require('@uppy/utils/lib/truncateString');\n\nconst renderFileName = props => {\n  const {\n    author,\n    name\n  } = props.file.meta;\n\n  function getMaxNameLength() {\n    if (props.containerWidth <= 352) {\n      return 35;\n    }\n\n    if (props.containerWidth <= 576) {\n      return 60;\n    } // When `author` is present, we want to make sure\n    // the file name fits on one line so we can place\n    // the author on the second line.\n\n\n    return author ? 20 : 30;\n  }\n\n  return h(\"div\", {\n    className: \"uppy-Dashboard-Item-name\",\n    title: name\n  }, truncateString(name, getMaxNameLength()));\n};\n\nconst renderAuthor = props => {\n  const {\n    author\n  } = props.file.meta;\n  const {\n    providerName\n  } = props.file.remote;\n  const dot = `\\u00B7`;\n\n  if (!author) {\n    return null;\n  }\n\n  return h(\"div\", {\n    className: \"uppy-Dashboard-Item-author\"\n  }, h(\"a\", {\n    href: `${author.url}?utm_source=Companion&utm_medium=referral`,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\"\n  }, truncateString(author.name, 13)), providerName ? h(Fragment, null, ` ${dot} `, providerName) : null);\n};\n\nconst renderFileSize = props => props.file.size && h(\"div\", {\n  className: \"uppy-Dashboard-Item-statusSize\"\n}, prettierBytes(props.file.size));\n\nconst ReSelectButton = props => props.file.isGhost && h(\"span\", null, ' \\u2022 ', h(\"button\", {\n  className: \"uppy-u-reset uppy-c-btn uppy-Dashboard-Item-reSelect\",\n  type: \"button\",\n  onClick: props.toggleAddFilesPanel\n}, props.i18n('reSelect')));\n\nconst ErrorButton = ({\n  file,\n  onClick\n}) => {\n  if (file.error) {\n    return h(\"button\", {\n      className: \"uppy-Dashboard-Item-errorDetails\",\n      \"aria-label\": file.error,\n      \"data-microtip-position\": \"bottom\",\n      \"data-microtip-size\": \"medium\",\n      onClick: onClick,\n      type: \"button\"\n    }, \"?\");\n  }\n\n  return null;\n};\n\nmodule.exports = function FileInfo(props) {\n  return h(\"div\", {\n    className: \"uppy-Dashboard-Item-fileInfo\",\n    \"data-uppy-file-source\": props.file.source\n  }, renderFileName(props), h(\"div\", {\n    className: \"uppy-Dashboard-Item-status\"\n  }, renderFileSize(props), renderAuthor(props), ReSelectButton(props), h(ErrorButton, {\n    file: props.file // eslint-disable-next-line no-alert\n    ,\n    onClick: () => alert(props.file.error) // TODO: move to a custom alert implementation\n\n  })));\n};"]},"metadata":{},"sourceType":"script"}