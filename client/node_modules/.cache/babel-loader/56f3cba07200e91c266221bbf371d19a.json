{"ast":null,"code":"\"use strict\";\n\nvar _require = require('preact'),\n    h = _require.h;\n\nvar classNames = require('classnames');\n\nvar statusBarStates = require('./StatusBarStates');\n\nvar calculateProcessingProgress = require('./calculateProcessingProgress');\n\nvar _require2 = require('./Components'),\n    UploadBtn = _require2.UploadBtn,\n    RetryBtn = _require2.RetryBtn,\n    CancelBtn = _require2.CancelBtn,\n    PauseResumeButton = _require2.PauseResumeButton,\n    DoneBtn = _require2.DoneBtn,\n    ProgressBarProcessing = _require2.ProgressBarProcessing,\n    ProgressBarError = _require2.ProgressBarError,\n    ProgressBarUploading = _require2.ProgressBarUploading,\n    ProgressBarComplete = _require2.ProgressBarComplete;\n\nvar STATE_ERROR = statusBarStates.STATE_ERROR,\n    STATE_WAITING = statusBarStates.STATE_WAITING,\n    STATE_PREPROCESSING = statusBarStates.STATE_PREPROCESSING,\n    STATE_UPLOADING = statusBarStates.STATE_UPLOADING,\n    STATE_POSTPROCESSING = statusBarStates.STATE_POSTPROCESSING,\n    STATE_COMPLETE = statusBarStates.STATE_COMPLETE;\nmodule.exports = StatusBar;\n\nfunction StatusBar(props) {\n  var newFiles = props.newFiles,\n      allowNewUpload = props.allowNewUpload,\n      isUploadInProgress = props.isUploadInProgress,\n      isAllPaused = props.isAllPaused,\n      resumableUploads = props.resumableUploads,\n      error = props.error,\n      hideUploadButton = props.hideUploadButton,\n      hidePauseResumeButton = props.hidePauseResumeButton,\n      hideCancelButton = props.hideCancelButton,\n      hideRetryButton = props.hideRetryButton,\n      recoveredState = props.recoveredState,\n      uploadState = props.uploadState,\n      totalProgress = props.totalProgress,\n      files = props.files,\n      supportsUploadProgress = props.supportsUploadProgress,\n      hideAfterFinish = props.hideAfterFinish,\n      isSomeGhost = props.isSomeGhost,\n      isTargetDOMEl = props.isTargetDOMEl,\n      doneButtonHandler = props.doneButtonHandler,\n      isUploadStarted = props.isUploadStarted,\n      i18n = props.i18n,\n      startUpload = props.startUpload,\n      uppy = props.uppy,\n      isAllComplete = props.isAllComplete,\n      showProgressDetails = props.showProgressDetails,\n      numUploads = props.numUploads,\n      complete = props.complete,\n      totalSize = props.totalSize,\n      totalETA = props.totalETA,\n      totalUploadedSize = props.totalUploadedSize;\n\n  function getProgressValue() {\n    switch (uploadState) {\n      case STATE_POSTPROCESSING:\n      case STATE_PREPROCESSING:\n        {\n          var progress = calculateProcessingProgress(files);\n\n          if (progress.mode === 'determinate') {\n            return progress.value * 100;\n          }\n\n          return totalProgress;\n        }\n\n      case STATE_ERROR:\n        {\n          return null;\n        }\n\n      case STATE_UPLOADING:\n        {\n          if (!supportsUploadProgress) {\n            return null;\n          }\n\n          return totalProgress;\n        }\n\n      default:\n        return totalProgress;\n    }\n  }\n\n  function getIsIndeterminate() {\n    switch (uploadState) {\n      case STATE_POSTPROCESSING:\n      case STATE_PREPROCESSING:\n        {\n          var _calculateProcessingP = calculateProcessingProgress(files),\n              mode = _calculateProcessingP.mode;\n\n          return mode === 'indeterminate';\n        }\n\n      case STATE_UPLOADING:\n        {\n          if (!supportsUploadProgress) {\n            return true;\n          }\n\n          return false;\n        }\n\n      default:\n        return false;\n    }\n  }\n\n  function getIsHidden() {\n    if (recoveredState) {\n      return false;\n    }\n\n    switch (uploadState) {\n      case STATE_WAITING:\n        return hideUploadButton || newFiles === 0;\n\n      case STATE_COMPLETE:\n        return hideAfterFinish;\n\n      default:\n        return false;\n    }\n  }\n\n  var progressValue = getProgressValue();\n  var isHidden = getIsHidden();\n  var width = progressValue != null ? progressValue : 100;\n  var showUploadBtn = !error && newFiles && !isUploadInProgress && !isAllPaused && allowNewUpload && !hideUploadButton;\n  var showCancelBtn = !hideCancelButton && uploadState !== STATE_WAITING && uploadState !== STATE_COMPLETE;\n  var showPauseResumeBtn = resumableUploads && !hidePauseResumeButton && uploadState === STATE_UPLOADING;\n  var showRetryBtn = error && !hideRetryButton;\n  var showDoneBtn = doneButtonHandler && uploadState === STATE_COMPLETE;\n  var progressClassNames = classNames('uppy-StatusBar-progress', {\n    'is-indeterminate': getIsIndeterminate()\n  });\n  var statusBarClassNames = classNames({\n    'uppy-Root': isTargetDOMEl\n  }, 'uppy-StatusBar', \"is-\".concat(uploadState), {\n    'has-ghosts': isSomeGhost\n  });\n  return h(\"div\", {\n    className: statusBarClassNames,\n    \"aria-hidden\": isHidden\n  }, h(\"div\", {\n    className: progressClassNames,\n    style: {\n      width: \"\".concat(width, \"%\")\n    },\n    role: \"progressbar\",\n    \"aria-label\": \"\".concat(width, \"%\"),\n    \"aria-valuetext\": \"\".concat(width, \"%\"),\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\",\n    \"aria-valuenow\": progressValue\n  }), function () {\n    switch (uploadState) {\n      case STATE_PREPROCESSING:\n      case STATE_POSTPROCESSING:\n        return h(ProgressBarProcessing, {\n          progress: calculateProcessingProgress(files)\n        });\n\n      case STATE_COMPLETE:\n        return h(ProgressBarComplete, {\n          i18n: i18n\n        });\n\n      case STATE_ERROR:\n        return h(ProgressBarError, {\n          error: error,\n          i18n: i18n\n        });\n\n      case STATE_UPLOADING:\n        return h(ProgressBarUploading, {\n          i18n: i18n,\n          supportsUploadProgress: supportsUploadProgress,\n          totalProgress: totalProgress,\n          showProgressDetails: showProgressDetails,\n          isUploadStarted: isUploadStarted,\n          isAllComplete: isAllComplete,\n          isAllPaused: isAllPaused,\n          newFiles: newFiles,\n          numUploads: numUploads,\n          complete: complete,\n          totalUploadedSize: totalUploadedSize,\n          totalSize: totalSize,\n          totalETA: totalETA,\n          startUpload: startUpload\n        });\n\n      default:\n        return null;\n    }\n  }(), h(\"div\", {\n    className: \"uppy-StatusBar-actions\"\n  }, recoveredState || showUploadBtn ? h(UploadBtn, {\n    newFiles: newFiles,\n    isUploadStarted: isUploadStarted,\n    recoveredState: recoveredState,\n    i18n: i18n,\n    isSomeGhost: isSomeGhost,\n    startUpload: startUpload,\n    uploadState: uploadState\n  }) : null, showRetryBtn ? h(RetryBtn, {\n    i18n: i18n,\n    uppy: uppy\n  }) : null, showPauseResumeBtn ? h(PauseResumeButton, {\n    isAllPaused: isAllPaused,\n    i18n: i18n,\n    isAllComplete: isAllComplete,\n    resumableUploads: resumableUploads,\n    uppy: uppy\n  }) : null, showCancelBtn ? h(CancelBtn, {\n    i18n: i18n,\n    uppy: uppy\n  }) : null, showDoneBtn ? h(DoneBtn, {\n    i18n: i18n,\n    doneButtonHandler: doneButtonHandler\n  }) : null));\n}","map":{"version":3,"sources":["/Users/albertshay/Desktop/silkroad/client/node_modules/@uppy/status-bar/lib/StatusBar.js"],"names":["require","h","classNames","statusBarStates","calculateProcessingProgress","UploadBtn","RetryBtn","CancelBtn","PauseResumeButton","DoneBtn","ProgressBarProcessing","ProgressBarError","ProgressBarUploading","ProgressBarComplete","STATE_ERROR","STATE_WAITING","STATE_PREPROCESSING","STATE_UPLOADING","STATE_POSTPROCESSING","STATE_COMPLETE","module","exports","StatusBar","props","newFiles","allowNewUpload","isUploadInProgress","isAllPaused","resumableUploads","error","hideUploadButton","hidePauseResumeButton","hideCancelButton","hideRetryButton","recoveredState","uploadState","totalProgress","files","supportsUploadProgress","hideAfterFinish","isSomeGhost","isTargetDOMEl","doneButtonHandler","isUploadStarted","i18n","startUpload","uppy","isAllComplete","showProgressDetails","numUploads","complete","totalSize","totalETA","totalUploadedSize","getProgressValue","progress","mode","value","getIsIndeterminate","getIsHidden","progressValue","isHidden","width","showUploadBtn","showCancelBtn","showPauseResumeBtn","showRetryBtn","showDoneBtn","progressClassNames","statusBarClassNames","className","style","role"],"mappings":"AAAA;;AAEA,eAEIA,OAAO,CAAC,QAAD,CAFX;AAAA,IACEC,CADF,YACEA,CADF;;AAIA,IAAMC,UAAU,GAAGF,OAAO,CAAC,YAAD,CAA1B;;AAEA,IAAMG,eAAe,GAAGH,OAAO,CAAC,mBAAD,CAA/B;;AAEA,IAAMI,2BAA2B,GAAGJ,OAAO,CAAC,+BAAD,CAA3C;;AAEA,gBAUIA,OAAO,CAAC,cAAD,CAVX;AAAA,IACEK,SADF,aACEA,SADF;AAAA,IAEEC,QAFF,aAEEA,QAFF;AAAA,IAGEC,SAHF,aAGEA,SAHF;AAAA,IAIEC,iBAJF,aAIEA,iBAJF;AAAA,IAKEC,OALF,aAKEA,OALF;AAAA,IAMEC,qBANF,aAMEA,qBANF;AAAA,IAOEC,gBAPF,aAOEA,gBAPF;AAAA,IAQEC,oBARF,aAQEA,oBARF;AAAA,IASEC,mBATF,aASEA,mBATF;;AAYA,IACEC,WADF,GAOIX,eAPJ,CACEW,WADF;AAAA,IAEEC,aAFF,GAOIZ,eAPJ,CAEEY,aAFF;AAAA,IAGEC,mBAHF,GAOIb,eAPJ,CAGEa,mBAHF;AAAA,IAIEC,eAJF,GAOId,eAPJ,CAIEc,eAJF;AAAA,IAKEC,oBALF,GAOIf,eAPJ,CAKEe,oBALF;AAAA,IAMEC,cANF,GAOIhB,eAPJ,CAMEgB,cANF;AAQAC,MAAM,CAACC,OAAP,GAAiBC,SAAjB;;AAEA,SAASA,SAAT,CAAmBC,KAAnB,EAA0B;AACxB,MACEC,QADF,GA+BID,KA/BJ,CACEC,QADF;AAAA,MAEEC,cAFF,GA+BIF,KA/BJ,CAEEE,cAFF;AAAA,MAGEC,kBAHF,GA+BIH,KA/BJ,CAGEG,kBAHF;AAAA,MAIEC,WAJF,GA+BIJ,KA/BJ,CAIEI,WAJF;AAAA,MAKEC,gBALF,GA+BIL,KA/BJ,CAKEK,gBALF;AAAA,MAMEC,KANF,GA+BIN,KA/BJ,CAMEM,KANF;AAAA,MAOEC,gBAPF,GA+BIP,KA/BJ,CAOEO,gBAPF;AAAA,MAQEC,qBARF,GA+BIR,KA/BJ,CAQEQ,qBARF;AAAA,MASEC,gBATF,GA+BIT,KA/BJ,CASES,gBATF;AAAA,MAUEC,eAVF,GA+BIV,KA/BJ,CAUEU,eAVF;AAAA,MAWEC,cAXF,GA+BIX,KA/BJ,CAWEW,cAXF;AAAA,MAYEC,WAZF,GA+BIZ,KA/BJ,CAYEY,WAZF;AAAA,MAaEC,aAbF,GA+BIb,KA/BJ,CAaEa,aAbF;AAAA,MAcEC,KAdF,GA+BId,KA/BJ,CAcEc,KAdF;AAAA,MAeEC,sBAfF,GA+BIf,KA/BJ,CAeEe,sBAfF;AAAA,MAgBEC,eAhBF,GA+BIhB,KA/BJ,CAgBEgB,eAhBF;AAAA,MAiBEC,WAjBF,GA+BIjB,KA/BJ,CAiBEiB,WAjBF;AAAA,MAkBEC,aAlBF,GA+BIlB,KA/BJ,CAkBEkB,aAlBF;AAAA,MAmBEC,iBAnBF,GA+BInB,KA/BJ,CAmBEmB,iBAnBF;AAAA,MAoBEC,eApBF,GA+BIpB,KA/BJ,CAoBEoB,eApBF;AAAA,MAqBEC,IArBF,GA+BIrB,KA/BJ,CAqBEqB,IArBF;AAAA,MAsBEC,WAtBF,GA+BItB,KA/BJ,CAsBEsB,WAtBF;AAAA,MAuBEC,IAvBF,GA+BIvB,KA/BJ,CAuBEuB,IAvBF;AAAA,MAwBEC,aAxBF,GA+BIxB,KA/BJ,CAwBEwB,aAxBF;AAAA,MAyBEC,mBAzBF,GA+BIzB,KA/BJ,CAyBEyB,mBAzBF;AAAA,MA0BEC,UA1BF,GA+BI1B,KA/BJ,CA0BE0B,UA1BF;AAAA,MA2BEC,QA3BF,GA+BI3B,KA/BJ,CA2BE2B,QA3BF;AAAA,MA4BEC,SA5BF,GA+BI5B,KA/BJ,CA4BE4B,SA5BF;AAAA,MA6BEC,QA7BF,GA+BI7B,KA/BJ,CA6BE6B,QA7BF;AAAA,MA8BEC,iBA9BF,GA+BI9B,KA/BJ,CA8BE8B,iBA9BF;;AAiCA,WAASC,gBAAT,GAA4B;AAC1B,YAAQnB,WAAR;AACE,WAAKjB,oBAAL;AACA,WAAKF,mBAAL;AACE;AACE,cAAMuC,QAAQ,GAAGnD,2BAA2B,CAACiC,KAAD,CAA5C;;AAEA,cAAIkB,QAAQ,CAACC,IAAT,KAAkB,aAAtB,EAAqC;AACnC,mBAAOD,QAAQ,CAACE,KAAT,GAAiB,GAAxB;AACD;;AAED,iBAAOrB,aAAP;AACD;;AAEH,WAAKtB,WAAL;AACE;AACE,iBAAO,IAAP;AACD;;AAEH,WAAKG,eAAL;AACE;AACE,cAAI,CAACqB,sBAAL,EAA6B;AAC3B,mBAAO,IAAP;AACD;;AAED,iBAAOF,aAAP;AACD;;AAEH;AACE,eAAOA,aAAP;AA5BJ;AA8BD;;AAED,WAASsB,kBAAT,GAA8B;AAC5B,YAAQvB,WAAR;AACE,WAAKjB,oBAAL;AACA,WAAKF,mBAAL;AACE;AACE,sCAEIZ,2BAA2B,CAACiC,KAAD,CAF/B;AAAA,cACEmB,IADF,yBACEA,IADF;;AAGA,iBAAOA,IAAI,KAAK,eAAhB;AACD;;AAEH,WAAKvC,eAAL;AACE;AACE,cAAI,CAACqB,sBAAL,EAA6B;AAC3B,mBAAO,IAAP;AACD;;AAED,iBAAO,KAAP;AACD;;AAEH;AACE,eAAO,KAAP;AApBJ;AAsBD;;AAED,WAASqB,WAAT,GAAuB;AACrB,QAAIzB,cAAJ,EAAoB;AAClB,aAAO,KAAP;AACD;;AAED,YAAQC,WAAR;AACE,WAAKpB,aAAL;AACE,eAAOe,gBAAgB,IAAIN,QAAQ,KAAK,CAAxC;;AAEF,WAAKL,cAAL;AACE,eAAOoB,eAAP;;AAEF;AACE,eAAO,KAAP;AARJ;AAUD;;AAED,MAAMqB,aAAa,GAAGN,gBAAgB,EAAtC;AACA,MAAMO,QAAQ,GAAGF,WAAW,EAA5B;AACA,MAAMG,KAAK,GAAGF,aAAa,IAAI,IAAjB,GAAwBA,aAAxB,GAAwC,GAAtD;AACA,MAAMG,aAAa,GAAG,CAAClC,KAAD,IAAUL,QAAV,IAAsB,CAACE,kBAAvB,IAA6C,CAACC,WAA9C,IAA6DF,cAA7D,IAA+E,CAACK,gBAAtG;AACA,MAAMkC,aAAa,GAAG,CAAChC,gBAAD,IAAqBG,WAAW,KAAKpB,aAArC,IAAsDoB,WAAW,KAAKhB,cAA5F;AACA,MAAM8C,kBAAkB,GAAGrC,gBAAgB,IAAI,CAACG,qBAArB,IAA8CI,WAAW,KAAKlB,eAAzF;AACA,MAAMiD,YAAY,GAAGrC,KAAK,IAAI,CAACI,eAA/B;AACA,MAAMkC,WAAW,GAAGzB,iBAAiB,IAAIP,WAAW,KAAKhB,cAAzD;AACA,MAAMiD,kBAAkB,GAAGlE,UAAU,CAAC,yBAAD,EAA4B;AAC/D,wBAAoBwD,kBAAkB;AADyB,GAA5B,CAArC;AAGA,MAAMW,mBAAmB,GAAGnE,UAAU,CAAC;AACrC,iBAAauC;AADwB,GAAD,EAEnC,gBAFmC,eAEXN,WAFW,GAEI;AACxC,kBAAcK;AAD0B,GAFJ,CAAtC;AAKA,SAAOvC,CAAC,CAAC,KAAD,EAAQ;AACdqE,IAAAA,SAAS,EAAED,mBADG;AAEd,mBAAeR;AAFD,GAAR,EAGL5D,CAAC,CAAC,KAAD,EAAQ;AACVqE,IAAAA,SAAS,EAAEF,kBADD;AAEVG,IAAAA,KAAK,EAAE;AACLT,MAAAA,KAAK,YAAKA,KAAL;AADA,KAFG;AAKVU,IAAAA,IAAI,EAAE,aALI;AAMV,4BAAiBV,KAAjB,MANU;AAOV,gCAAqBA,KAArB,MAPU;AAQV,qBAAiB,GARP;AASV,qBAAiB,KATP;AAUV,qBAAiBF;AAVP,GAAR,CAHI,EAcH,YAAM;AACT,YAAQzB,WAAR;AACE,WAAKnB,mBAAL;AACA,WAAKE,oBAAL;AACE,eAAOjB,CAAC,CAACS,qBAAD,EAAwB;AAC9B6C,UAAAA,QAAQ,EAAEnD,2BAA2B,CAACiC,KAAD;AADP,SAAxB,CAAR;;AAIF,WAAKlB,cAAL;AACE,eAAOlB,CAAC,CAACY,mBAAD,EAAsB;AAC5B+B,UAAAA,IAAI,EAAEA;AADsB,SAAtB,CAAR;;AAIF,WAAK9B,WAAL;AACE,eAAOb,CAAC,CAACU,gBAAD,EAAmB;AACzBkB,UAAAA,KAAK,EAAEA,KADkB;AAEzBe,UAAAA,IAAI,EAAEA;AAFmB,SAAnB,CAAR;;AAKF,WAAK3B,eAAL;AACE,eAAOhB,CAAC,CAACW,oBAAD,EAAuB;AAC7BgC,UAAAA,IAAI,EAAEA,IADuB;AAE7BN,UAAAA,sBAAsB,EAAEA,sBAFK;AAG7BF,UAAAA,aAAa,EAAEA,aAHc;AAI7BY,UAAAA,mBAAmB,EAAEA,mBAJQ;AAK7BL,UAAAA,eAAe,EAAEA,eALY;AAM7BI,UAAAA,aAAa,EAAEA,aANc;AAO7BpB,UAAAA,WAAW,EAAEA,WAPgB;AAQ7BH,UAAAA,QAAQ,EAAEA,QARmB;AAS7ByB,UAAAA,UAAU,EAAEA,UATiB;AAU7BC,UAAAA,QAAQ,EAAEA,QAVmB;AAW7BG,UAAAA,iBAAiB,EAAEA,iBAXU;AAY7BF,UAAAA,SAAS,EAAEA,SAZkB;AAa7BC,UAAAA,QAAQ,EAAEA,QAbmB;AAc7BP,UAAAA,WAAW,EAAEA;AAdgB,SAAvB,CAAR;;AAiBF;AACE,eAAO,IAAP;AArCJ;AAuCD,GAxCG,EAdI,EAsDF5C,CAAC,CAAC,KAAD,EAAQ;AACbqE,IAAAA,SAAS,EAAE;AADE,GAAR,EAEJpC,cAAc,IAAI6B,aAAlB,GAAkC9D,CAAC,CAACI,SAAD,EAAY;AAChDmB,IAAAA,QAAQ,EAAEA,QADsC;AAEhDmB,IAAAA,eAAe,EAAEA,eAF+B;AAGhDT,IAAAA,cAAc,EAAEA,cAHgC;AAIhDU,IAAAA,IAAI,EAAEA,IAJ0C;AAKhDJ,IAAAA,WAAW,EAAEA,WALmC;AAMhDK,IAAAA,WAAW,EAAEA,WANmC;AAOhDV,IAAAA,WAAW,EAAEA;AAPmC,GAAZ,CAAnC,GAQE,IAVE,EAUI+B,YAAY,GAAGjE,CAAC,CAACK,QAAD,EAAW;AACpCsC,IAAAA,IAAI,EAAEA,IAD8B;AAEpCE,IAAAA,IAAI,EAAEA;AAF8B,GAAX,CAAJ,GAGlB,IAbE,EAaImB,kBAAkB,GAAGhE,CAAC,CAACO,iBAAD,EAAoB;AACnDmB,IAAAA,WAAW,EAAEA,WADsC;AAEnDiB,IAAAA,IAAI,EAAEA,IAF6C;AAGnDG,IAAAA,aAAa,EAAEA,aAHoC;AAInDnB,IAAAA,gBAAgB,EAAEA,gBAJiC;AAKnDkB,IAAAA,IAAI,EAAEA;AAL6C,GAApB,CAAJ,GAMxB,IAnBE,EAmBIkB,aAAa,GAAG/D,CAAC,CAACM,SAAD,EAAY;AACtCqC,IAAAA,IAAI,EAAEA,IADgC;AAEtCE,IAAAA,IAAI,EAAEA;AAFgC,GAAZ,CAAJ,GAGnB,IAtBE,EAsBIqB,WAAW,GAAGlE,CAAC,CAACQ,OAAD,EAAU;AAClCmC,IAAAA,IAAI,EAAEA,IAD4B;AAElCF,IAAAA,iBAAiB,EAAEA;AAFe,GAAV,CAAJ,GAGjB,IAzBE,CAtDC,CAAR;AAgFD","sourcesContent":["\"use strict\";\n\nconst {\n  h\n} = require('preact');\n\nconst classNames = require('classnames');\n\nconst statusBarStates = require('./StatusBarStates');\n\nconst calculateProcessingProgress = require('./calculateProcessingProgress');\n\nconst {\n  UploadBtn,\n  RetryBtn,\n  CancelBtn,\n  PauseResumeButton,\n  DoneBtn,\n  ProgressBarProcessing,\n  ProgressBarError,\n  ProgressBarUploading,\n  ProgressBarComplete\n} = require('./Components');\n\nconst {\n  STATE_ERROR,\n  STATE_WAITING,\n  STATE_PREPROCESSING,\n  STATE_UPLOADING,\n  STATE_POSTPROCESSING,\n  STATE_COMPLETE\n} = statusBarStates;\nmodule.exports = StatusBar;\n\nfunction StatusBar(props) {\n  const {\n    newFiles,\n    allowNewUpload,\n    isUploadInProgress,\n    isAllPaused,\n    resumableUploads,\n    error,\n    hideUploadButton,\n    hidePauseResumeButton,\n    hideCancelButton,\n    hideRetryButton,\n    recoveredState,\n    uploadState,\n    totalProgress,\n    files,\n    supportsUploadProgress,\n    hideAfterFinish,\n    isSomeGhost,\n    isTargetDOMEl,\n    doneButtonHandler,\n    isUploadStarted,\n    i18n,\n    startUpload,\n    uppy,\n    isAllComplete,\n    showProgressDetails,\n    numUploads,\n    complete,\n    totalSize,\n    totalETA,\n    totalUploadedSize\n  } = props;\n\n  function getProgressValue() {\n    switch (uploadState) {\n      case STATE_POSTPROCESSING:\n      case STATE_PREPROCESSING:\n        {\n          const progress = calculateProcessingProgress(files);\n\n          if (progress.mode === 'determinate') {\n            return progress.value * 100;\n          }\n\n          return totalProgress;\n        }\n\n      case STATE_ERROR:\n        {\n          return null;\n        }\n\n      case STATE_UPLOADING:\n        {\n          if (!supportsUploadProgress) {\n            return null;\n          }\n\n          return totalProgress;\n        }\n\n      default:\n        return totalProgress;\n    }\n  }\n\n  function getIsIndeterminate() {\n    switch (uploadState) {\n      case STATE_POSTPROCESSING:\n      case STATE_PREPROCESSING:\n        {\n          const {\n            mode\n          } = calculateProcessingProgress(files);\n          return mode === 'indeterminate';\n        }\n\n      case STATE_UPLOADING:\n        {\n          if (!supportsUploadProgress) {\n            return true;\n          }\n\n          return false;\n        }\n\n      default:\n        return false;\n    }\n  }\n\n  function getIsHidden() {\n    if (recoveredState) {\n      return false;\n    }\n\n    switch (uploadState) {\n      case STATE_WAITING:\n        return hideUploadButton || newFiles === 0;\n\n      case STATE_COMPLETE:\n        return hideAfterFinish;\n\n      default:\n        return false;\n    }\n  }\n\n  const progressValue = getProgressValue();\n  const isHidden = getIsHidden();\n  const width = progressValue != null ? progressValue : 100;\n  const showUploadBtn = !error && newFiles && !isUploadInProgress && !isAllPaused && allowNewUpload && !hideUploadButton;\n  const showCancelBtn = !hideCancelButton && uploadState !== STATE_WAITING && uploadState !== STATE_COMPLETE;\n  const showPauseResumeBtn = resumableUploads && !hidePauseResumeButton && uploadState === STATE_UPLOADING;\n  const showRetryBtn = error && !hideRetryButton;\n  const showDoneBtn = doneButtonHandler && uploadState === STATE_COMPLETE;\n  const progressClassNames = classNames('uppy-StatusBar-progress', {\n    'is-indeterminate': getIsIndeterminate()\n  });\n  const statusBarClassNames = classNames({\n    'uppy-Root': isTargetDOMEl\n  }, 'uppy-StatusBar', `is-${uploadState}`, {\n    'has-ghosts': isSomeGhost\n  });\n  return h(\"div\", {\n    className: statusBarClassNames,\n    \"aria-hidden\": isHidden\n  }, h(\"div\", {\n    className: progressClassNames,\n    style: {\n      width: `${width}%`\n    },\n    role: \"progressbar\",\n    \"aria-label\": `${width}%`,\n    \"aria-valuetext\": `${width}%`,\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\",\n    \"aria-valuenow\": progressValue\n  }), (() => {\n    switch (uploadState) {\n      case STATE_PREPROCESSING:\n      case STATE_POSTPROCESSING:\n        return h(ProgressBarProcessing, {\n          progress: calculateProcessingProgress(files)\n        });\n\n      case STATE_COMPLETE:\n        return h(ProgressBarComplete, {\n          i18n: i18n\n        });\n\n      case STATE_ERROR:\n        return h(ProgressBarError, {\n          error: error,\n          i18n: i18n\n        });\n\n      case STATE_UPLOADING:\n        return h(ProgressBarUploading, {\n          i18n: i18n,\n          supportsUploadProgress: supportsUploadProgress,\n          totalProgress: totalProgress,\n          showProgressDetails: showProgressDetails,\n          isUploadStarted: isUploadStarted,\n          isAllComplete: isAllComplete,\n          isAllPaused: isAllPaused,\n          newFiles: newFiles,\n          numUploads: numUploads,\n          complete: complete,\n          totalUploadedSize: totalUploadedSize,\n          totalSize: totalSize,\n          totalETA: totalETA,\n          startUpload: startUpload\n        });\n\n      default:\n        return null;\n    }\n  })(), h(\"div\", {\n    className: \"uppy-StatusBar-actions\"\n  }, recoveredState || showUploadBtn ? h(UploadBtn, {\n    newFiles: newFiles,\n    isUploadStarted: isUploadStarted,\n    recoveredState: recoveredState,\n    i18n: i18n,\n    isSomeGhost: isSomeGhost,\n    startUpload: startUpload,\n    uploadState: uploadState\n  }) : null, showRetryBtn ? h(RetryBtn, {\n    i18n: i18n,\n    uppy: uppy\n  }) : null, showPauseResumeBtn ? h(PauseResumeButton, {\n    isAllPaused: isAllPaused,\n    i18n: i18n,\n    isAllComplete: isAllComplete,\n    resumableUploads: resumableUploads,\n    uppy: uppy\n  }) : null, showCancelBtn ? h(CancelBtn, {\n    i18n: i18n,\n    uppy: uppy\n  }) : null, showDoneBtn ? h(DoneBtn, {\n    i18n: i18n,\n    doneButtonHandler: doneButtonHandler\n  }) : null));\n}"]},"metadata":{},"sourceType":"script"}