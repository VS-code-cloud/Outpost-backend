{"ast":null,"code":"\"use strict\";\n/**\n * Save a <canvas> element's content to a Blob object.\n *\n * @param {HTMLCanvasElement} canvas\n * @returns {Promise}\n */\n\nmodule.exports = function canvasToBlob(canvas, type, quality) {\n  return new Promise(resolve => {\n    canvas.toBlob(resolve, type, quality);\n  });\n};","map":{"version":3,"sources":["/Users/albertshay/Desktop/silkroad/client/node_modules/@uppy/utils/lib/canvasToBlob.js"],"names":["module","exports","canvasToBlob","canvas","type","quality","Promise","resolve","toBlob"],"mappings":"AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,OAAP,GAAiB,SAASC,YAAT,CAAsBC,MAAtB,EAA8BC,IAA9B,EAAoCC,OAApC,EAA6C;AAC5D,SAAO,IAAIC,OAAJ,CAAYC,OAAO,IAAI;AAC5BJ,IAAAA,MAAM,CAACK,MAAP,CAAcD,OAAd,EAAuBH,IAAvB,EAA6BC,OAA7B;AACD,GAFM,CAAP;AAGD,CAJD","sourcesContent":["\"use strict\";\n\n/**\n * Save a <canvas> element's content to a Blob object.\n *\n * @param {HTMLCanvasElement} canvas\n * @returns {Promise}\n */\nmodule.exports = function canvasToBlob(canvas, type, quality) {\n  return new Promise(resolve => {\n    canvas.toBlob(resolve, type, quality);\n  });\n};"]},"metadata":{},"sourceType":"script"}