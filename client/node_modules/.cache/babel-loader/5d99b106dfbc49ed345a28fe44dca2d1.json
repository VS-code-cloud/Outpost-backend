{"ast":null,"code":"\"use strict\";\n\nvar _objectSpread = require(\"/Users/albertshay/Desktop/silkroad/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread2\");\n\nvar _classCallCheck = require(\"/Users/albertshay/Desktop/silkroad/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/albertshay/Desktop/silkroad/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _assertThisInitialized = require(\"/Users/albertshay/Desktop/silkroad/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/assertThisInitialized\");\n\nvar _inherits = require(\"/Users/albertshay/Desktop/silkroad/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/albertshay/Desktop/silkroad/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar _class, _temp;\n\nvar _require = require('@uppy/core'),\n    UIPlugin = _require.UIPlugin;\n\nvar toArray = require('@uppy/utils/lib/toArray');\n\nvar isDragDropSupported = require('@uppy/utils/lib/isDragDropSupported');\n\nvar getDroppedFiles = require('@uppy/utils/lib/getDroppedFiles');\n\nvar _require2 = require('preact'),\n    h = _require2.h;\n/**\n * Drag & Drop plugin\n *\n */\n\n\nmodule.exports = (_temp = _class = /*#__PURE__*/function (_UIPlugin) {\n  _inherits(DragDrop, _UIPlugin);\n\n  var _super = _createSuper(DragDrop);\n\n  // eslint-disable-next-line global-require\n  function DragDrop(uppy, opts) {\n    var _this;\n\n    _classCallCheck(this, DragDrop);\n\n    _this = _super.call(this, uppy, opts);\n    _this.type = 'acquirer';\n    _this.id = _this.opts.id || 'DragDrop';\n    _this.title = 'Drag & Drop';\n    _this.defaultLocale = {\n      strings: {\n        dropHereOr: 'Drop files here or %{browse}',\n        browse: 'browse'\n      }\n    }; // Default options\n\n    var defaultOpts = {\n      target: null,\n      inputName: 'files[]',\n      width: '100%',\n      height: '100%',\n      note: null\n    }; // Merge default options with the ones set by user\n\n    _this.opts = _objectSpread(_objectSpread({}, defaultOpts), opts);\n\n    _this.i18nInit(); // Check for browser dragDrop support\n\n\n    _this.isDragDropSupported = isDragDropSupported();\n    _this.removeDragOverClassTimeout = null; // Bind `this` to class methods\n\n    _this.onInputChange = _this.onInputChange.bind(_assertThisInitialized(_this));\n    _this.handleDragOver = _this.handleDragOver.bind(_assertThisInitialized(_this));\n    _this.handleDragLeave = _this.handleDragLeave.bind(_assertThisInitialized(_this));\n    _this.handleDrop = _this.handleDrop.bind(_assertThisInitialized(_this));\n    _this.addFiles = _this.addFiles.bind(_assertThisInitialized(_this));\n    _this.render = _this.render.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(DragDrop, [{\n    key: \"addFiles\",\n    value: function addFiles(files) {\n      var _this2 = this;\n\n      var descriptors = files.map(function (file) {\n        return {\n          source: _this2.id,\n          name: file.name,\n          type: file.type,\n          data: file,\n          meta: {\n            // path of the file relative to the ancestor directory the user selected.\n            // e.g. 'docs/Old Prague/airbnb.pdf'\n            relativePath: file.relativePath || null\n          }\n        };\n      });\n\n      try {\n        this.uppy.addFiles(descriptors);\n      } catch (err) {\n        this.uppy.log(err);\n      }\n    }\n  }, {\n    key: \"onInputChange\",\n    value: function onInputChange(event) {\n      this.uppy.log('[DragDrop] Files selected through input');\n      var files = toArray(event.target.files);\n      this.addFiles(files); // We clear the input after a file is selected, because otherwise\n      // change event is not fired in Chrome and Safari when a file\n      // with the same name is selected.\n      // ___Why not use value=\"\" on <input/> instead?\n      //    Because if we use that method of clearing the input,\n      //    Chrome will not trigger change if we drop the same file twice (Issue #768).\n      // eslint-disable-next-line no-param-reassign\n\n      event.target.value = null;\n    }\n  }, {\n    key: \"handleDrop\",\n    value: function handleDrop(event) {\n      var _this3 = this;\n\n      if (this.opts.onDrop) this.opts.onDrop(event);\n      event.preventDefault();\n      event.stopPropagation();\n      clearTimeout(this.removeDragOverClassTimeout); // 2. Remove dragover class\n\n      this.setPluginState({\n        isDraggingOver: false\n      }); // 3. Add all dropped files\n\n      this.uppy.log('[DragDrop] Files were dropped');\n\n      var logDropError = function logDropError(error) {\n        _this3.uppy.log(error, 'error');\n      };\n\n      getDroppedFiles(event.dataTransfer, {\n        logDropError: logDropError\n      }).then(function (files) {\n        return _this3.addFiles(files);\n      });\n    }\n  }, {\n    key: \"handleDragOver\",\n    value: function handleDragOver(event) {\n      if (this.opts.onDragOver) this.opts.onDragOver(event);\n      event.preventDefault();\n      event.stopPropagation(); // 1. Add a small (+) icon on drop\n      // (and prevent browsers from interpreting this as files being _moved_ into the browser\n      // https://github.com/transloadit/uppy/issues/1978)\n      //\n      // eslint-disable-next-line no-param-reassign\n\n      event.dataTransfer.dropEffect = 'copy';\n      clearTimeout(this.removeDragOverClassTimeout);\n      this.setPluginState({\n        isDraggingOver: true\n      });\n    }\n  }, {\n    key: \"handleDragLeave\",\n    value: function handleDragLeave(event) {\n      var _this4 = this;\n\n      if (this.opts.onDragLeave) this.opts.onDragLeave(event);\n      event.preventDefault();\n      event.stopPropagation();\n      clearTimeout(this.removeDragOverClassTimeout); // Timeout against flickering, this solution is taken from drag-drop library.\n      // Solution with 'pointer-events: none' didn't work across browsers.\n\n      this.removeDragOverClassTimeout = setTimeout(function () {\n        _this4.setPluginState({\n          isDraggingOver: false\n        });\n      }, 50);\n    }\n  }, {\n    key: \"renderHiddenFileInput\",\n    value: function renderHiddenFileInput() {\n      var _this5 = this;\n\n      var restrictions = this.uppy.opts.restrictions;\n      return h(\"input\", {\n        className: \"uppy-DragDrop-input\",\n        type: \"file\",\n        hidden: true,\n        ref: function ref(_ref) {\n          _this5.fileInputRef = _ref;\n        },\n        name: this.opts.inputName,\n        multiple: restrictions.maxNumberOfFiles !== 1,\n        accept: restrictions.allowedFileTypes,\n        onChange: this.onInputChange\n      });\n    }\n  }, {\n    key: \"renderLabel\",\n    value: function renderLabel() {\n      return h(\"div\", {\n        className: \"uppy-DragDrop-label\"\n      }, this.i18nArray('dropHereOr', {\n        browse: h(\"span\", {\n          className: \"uppy-DragDrop-browse\"\n        }, this.i18n('browse'))\n      }));\n    }\n  }, {\n    key: \"renderNote\",\n    value: function renderNote() {\n      return h(\"span\", {\n        className: \"uppy-DragDrop-note\"\n      }, this.opts.note);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this6 = this;\n\n      var dragDropClass = \"uppy-Root\\n      uppy-u-reset\\n      uppy-DragDrop-container\\n      \".concat(this.isDragDropSupported ? 'uppy-DragDrop--isDragDropSupported' : '', \"\\n      \").concat(this.getPluginState().isDraggingOver ? 'uppy-DragDrop--isDraggingOver' : '', \"\\n    \");\n      var dragDropStyle = {\n        width: this.opts.width,\n        height: this.opts.height\n      };\n      return h(\"button\", {\n        type: \"button\",\n        className: dragDropClass,\n        style: dragDropStyle,\n        onClick: function onClick() {\n          return _this6.fileInputRef.click();\n        },\n        onDragOver: this.handleDragOver,\n        onDragLeave: this.handleDragLeave,\n        onDrop: this.handleDrop\n      }, this.renderHiddenFileInput(), h(\"div\", {\n        className: \"uppy-DragDrop-inner\"\n      }, DragDrop.renderArrowSvg(), this.renderLabel(), this.renderNote()));\n    }\n  }, {\n    key: \"install\",\n    value: function install() {\n      var target = this.opts.target;\n      this.setPluginState({\n        isDraggingOver: false\n      });\n\n      if (target) {\n        this.mount(target, this);\n      }\n    }\n  }, {\n    key: \"uninstall\",\n    value: function uninstall() {\n      this.unmount();\n    }\n  }], [{\n    key: \"renderArrowSvg\",\n    value: function renderArrowSvg() {\n      return h(\"svg\", {\n        \"aria-hidden\": \"true\",\n        focusable: \"false\",\n        className: \"uppy-c-icon uppy-DragDrop-arrow\",\n        width: \"16\",\n        height: \"16\",\n        viewBox: \"0 0 16 16\"\n      }, h(\"path\", {\n        d: \"M11 10V0H5v10H2l6 6 6-6h-3zm0 0\",\n        fillRule: \"evenodd\"\n      }));\n    }\n  }]);\n\n  return DragDrop;\n}(UIPlugin), _class.VERSION = \"2.0.4\", _temp);","map":{"version":3,"sources":["/Users/albertshay/Desktop/silkroad/client/node_modules/@uppy/drag-drop/lib/index.js"],"names":["_class","_temp","require","UIPlugin","toArray","isDragDropSupported","getDroppedFiles","h","module","exports","uppy","opts","type","id","title","defaultLocale","strings","dropHereOr","browse","defaultOpts","target","inputName","width","height","note","i18nInit","removeDragOverClassTimeout","onInputChange","bind","handleDragOver","handleDragLeave","handleDrop","addFiles","render","files","descriptors","map","file","source","name","data","meta","relativePath","err","log","event","value","onDrop","preventDefault","stopPropagation","clearTimeout","setPluginState","isDraggingOver","logDropError","error","dataTransfer","then","onDragOver","dropEffect","onDragLeave","setTimeout","restrictions","className","hidden","ref","fileInputRef","multiple","maxNumberOfFiles","accept","allowedFileTypes","onChange","i18nArray","i18n","dragDropClass","getPluginState","dragDropStyle","style","onClick","click","renderHiddenFileInput","DragDrop","renderArrowSvg","renderLabel","renderNote","mount","unmount","focusable","viewBox","d","fillRule","VERSION"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _class, _temp;\n\nconst {\n  UIPlugin\n} = require('@uppy/core');\n\nconst toArray = require('@uppy/utils/lib/toArray');\n\nconst isDragDropSupported = require('@uppy/utils/lib/isDragDropSupported');\n\nconst getDroppedFiles = require('@uppy/utils/lib/getDroppedFiles');\n\nconst {\n  h\n} = require('preact');\n/**\n * Drag & Drop plugin\n *\n */\n\n\nmodule.exports = (_temp = _class = class DragDrop extends UIPlugin {\n  // eslint-disable-next-line global-require\n  constructor(uppy, opts) {\n    super(uppy, opts);\n    this.type = 'acquirer';\n    this.id = this.opts.id || 'DragDrop';\n    this.title = 'Drag & Drop';\n    this.defaultLocale = {\n      strings: {\n        dropHereOr: 'Drop files here or %{browse}',\n        browse: 'browse'\n      }\n    }; // Default options\n\n    const defaultOpts = {\n      target: null,\n      inputName: 'files[]',\n      width: '100%',\n      height: '100%',\n      note: null\n    }; // Merge default options with the ones set by user\n\n    this.opts = { ...defaultOpts,\n      ...opts\n    };\n    this.i18nInit(); // Check for browser dragDrop support\n\n    this.isDragDropSupported = isDragDropSupported();\n    this.removeDragOverClassTimeout = null; // Bind `this` to class methods\n\n    this.onInputChange = this.onInputChange.bind(this);\n    this.handleDragOver = this.handleDragOver.bind(this);\n    this.handleDragLeave = this.handleDragLeave.bind(this);\n    this.handleDrop = this.handleDrop.bind(this);\n    this.addFiles = this.addFiles.bind(this);\n    this.render = this.render.bind(this);\n  }\n\n  addFiles(files) {\n    const descriptors = files.map(file => ({\n      source: this.id,\n      name: file.name,\n      type: file.type,\n      data: file,\n      meta: {\n        // path of the file relative to the ancestor directory the user selected.\n        // e.g. 'docs/Old Prague/airbnb.pdf'\n        relativePath: file.relativePath || null\n      }\n    }));\n\n    try {\n      this.uppy.addFiles(descriptors);\n    } catch (err) {\n      this.uppy.log(err);\n    }\n  }\n\n  onInputChange(event) {\n    this.uppy.log('[DragDrop] Files selected through input');\n    const files = toArray(event.target.files);\n    this.addFiles(files); // We clear the input after a file is selected, because otherwise\n    // change event is not fired in Chrome and Safari when a file\n    // with the same name is selected.\n    // ___Why not use value=\"\" on <input/> instead?\n    //    Because if we use that method of clearing the input,\n    //    Chrome will not trigger change if we drop the same file twice (Issue #768).\n    // eslint-disable-next-line no-param-reassign\n\n    event.target.value = null;\n  }\n\n  handleDrop(event) {\n    if (this.opts.onDrop) this.opts.onDrop(event);\n    event.preventDefault();\n    event.stopPropagation();\n    clearTimeout(this.removeDragOverClassTimeout); // 2. Remove dragover class\n\n    this.setPluginState({\n      isDraggingOver: false\n    }); // 3. Add all dropped files\n\n    this.uppy.log('[DragDrop] Files were dropped');\n\n    const logDropError = error => {\n      this.uppy.log(error, 'error');\n    };\n\n    getDroppedFiles(event.dataTransfer, {\n      logDropError\n    }).then(files => this.addFiles(files));\n  }\n\n  handleDragOver(event) {\n    if (this.opts.onDragOver) this.opts.onDragOver(event);\n    event.preventDefault();\n    event.stopPropagation(); // 1. Add a small (+) icon on drop\n    // (and prevent browsers from interpreting this as files being _moved_ into the browser\n    // https://github.com/transloadit/uppy/issues/1978)\n    //\n    // eslint-disable-next-line no-param-reassign\n\n    event.dataTransfer.dropEffect = 'copy';\n    clearTimeout(this.removeDragOverClassTimeout);\n    this.setPluginState({\n      isDraggingOver: true\n    });\n  }\n\n  handleDragLeave(event) {\n    if (this.opts.onDragLeave) this.opts.onDragLeave(event);\n    event.preventDefault();\n    event.stopPropagation();\n    clearTimeout(this.removeDragOverClassTimeout); // Timeout against flickering, this solution is taken from drag-drop library.\n    // Solution with 'pointer-events: none' didn't work across browsers.\n\n    this.removeDragOverClassTimeout = setTimeout(() => {\n      this.setPluginState({\n        isDraggingOver: false\n      });\n    }, 50);\n  }\n\n  renderHiddenFileInput() {\n    const {\n      restrictions\n    } = this.uppy.opts;\n    return h(\"input\", {\n      className: \"uppy-DragDrop-input\",\n      type: \"file\",\n      hidden: true,\n      ref: ref => {\n        this.fileInputRef = ref;\n      },\n      name: this.opts.inputName,\n      multiple: restrictions.maxNumberOfFiles !== 1,\n      accept: restrictions.allowedFileTypes,\n      onChange: this.onInputChange\n    });\n  }\n\n  static renderArrowSvg() {\n    return h(\"svg\", {\n      \"aria-hidden\": \"true\",\n      focusable: \"false\",\n      className: \"uppy-c-icon uppy-DragDrop-arrow\",\n      width: \"16\",\n      height: \"16\",\n      viewBox: \"0 0 16 16\"\n    }, h(\"path\", {\n      d: \"M11 10V0H5v10H2l6 6 6-6h-3zm0 0\",\n      fillRule: \"evenodd\"\n    }));\n  }\n\n  renderLabel() {\n    return h(\"div\", {\n      className: \"uppy-DragDrop-label\"\n    }, this.i18nArray('dropHereOr', {\n      browse: h(\"span\", {\n        className: \"uppy-DragDrop-browse\"\n      }, this.i18n('browse'))\n    }));\n  }\n\n  renderNote() {\n    return h(\"span\", {\n      className: \"uppy-DragDrop-note\"\n    }, this.opts.note);\n  }\n\n  render() {\n    const dragDropClass = `uppy-Root\n      uppy-u-reset\n      uppy-DragDrop-container\n      ${this.isDragDropSupported ? 'uppy-DragDrop--isDragDropSupported' : ''}\n      ${this.getPluginState().isDraggingOver ? 'uppy-DragDrop--isDraggingOver' : ''}\n    `;\n    const dragDropStyle = {\n      width: this.opts.width,\n      height: this.opts.height\n    };\n    return h(\"button\", {\n      type: \"button\",\n      className: dragDropClass,\n      style: dragDropStyle,\n      onClick: () => this.fileInputRef.click(),\n      onDragOver: this.handleDragOver,\n      onDragLeave: this.handleDragLeave,\n      onDrop: this.handleDrop\n    }, this.renderHiddenFileInput(), h(\"div\", {\n      className: \"uppy-DragDrop-inner\"\n    }, DragDrop.renderArrowSvg(), this.renderLabel(), this.renderNote()));\n  }\n\n  install() {\n    const {\n      target\n    } = this.opts;\n    this.setPluginState({\n      isDraggingOver: false\n    });\n\n    if (target) {\n      this.mount(target, this);\n    }\n  }\n\n  uninstall() {\n    this.unmount();\n  }\n\n}, _class.VERSION = \"2.0.4\", _temp);"]},"metadata":{},"sourceType":"script"}