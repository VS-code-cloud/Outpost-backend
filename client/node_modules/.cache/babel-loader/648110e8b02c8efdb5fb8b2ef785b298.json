{"ast":null,"code":"\"use strict\";\n\nvar _class, _temp;\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions  */\n\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n\n\nconst {\n  h\n} = require('preact');\n\nconst {\n  UIPlugin\n} = require('@uppy/core');\n\nconst FadeIn = require('./FadeIn');\n\nconst TransitionGroup = require('./TransitionGroup');\n/**\n * Informer\n * Shows rad message bubbles\n * used like this: `uppy.info('hello world', 'info', 5000)`\n * or for errors: `uppy.info('Error uploading img.jpg', 'error', 5000)`\n *\n */\n\n\nmodule.exports = (_temp = _class = class Informer extends UIPlugin {\n  // eslint-disable-next-line global-require\n  constructor(uppy, opts) {\n    super(uppy, opts);\n\n    this.render = state => {\n      return h(\"div\", {\n        className: \"uppy uppy-Informer\"\n      }, h(TransitionGroup, null, state.info.map(info => h(FadeIn, {\n        key: info.message\n      }, h(\"p\", {\n        role: \"alert\"\n      }, info.message, ' ', info.details && h(\"span\", {\n        \"aria-label\": info.details,\n        \"data-microtip-position\": \"top-left\",\n        \"data-microtip-size\": \"medium\",\n        role: \"tooltip\" // eslint-disable-next-line no-alert\n        ,\n        onClick: () => alert(`${info.message} \\n\\n ${info.details}`)\n      }, \"?\"))))));\n    };\n\n    this.type = 'progressindicator';\n    this.id = this.opts.id || 'Informer';\n    this.title = 'Informer'; // set default options\n\n    const defaultOptions = {}; // merge default options with the ones set by user\n\n    this.opts = { ...defaultOptions,\n      ...opts\n    };\n  }\n\n  install() {\n    const {\n      target\n    } = this.opts;\n\n    if (target) {\n      this.mount(target, this);\n    }\n  }\n\n}, _class.VERSION = \"2.0.4\", _temp);","map":{"version":3,"sources":["/Users/albertshay/Desktop/silkroad/client/node_modules/@uppy/informer/lib/index.js"],"names":["_class","_temp","h","require","UIPlugin","FadeIn","TransitionGroup","module","exports","Informer","constructor","uppy","opts","render","state","className","info","map","key","message","role","details","onClick","alert","type","id","title","defaultOptions","install","target","mount","VERSION"],"mappings":"AAAA;;AAEA,IAAIA,MAAJ,EAAYC,KAAZ;AAEA;;AAEA;;;AACA,MAAM;AACJC,EAAAA;AADI,IAEFC,OAAO,CAAC,QAAD,CAFX;;AAIA,MAAM;AACJC,EAAAA;AADI,IAEFD,OAAO,CAAC,YAAD,CAFX;;AAIA,MAAME,MAAM,GAAGF,OAAO,CAAC,UAAD,CAAtB;;AAEA,MAAMG,eAAe,GAAGH,OAAO,CAAC,mBAAD,CAA/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGAI,MAAM,CAACC,OAAP,IAAkBP,KAAK,GAAGD,MAAM,GAAG,MAAMS,QAAN,SAAuBL,QAAvB,CAAgC;AACjE;AACAM,EAAAA,WAAW,CAACC,IAAD,EAAOC,IAAP,EAAa;AACtB,UAAMD,IAAN,EAAYC,IAAZ;;AAEA,SAAKC,MAAL,GAAcC,KAAK,IAAI;AACrB,aAAOZ,CAAC,CAAC,KAAD,EAAQ;AACda,QAAAA,SAAS,EAAE;AADG,OAAR,EAELb,CAAC,CAACI,eAAD,EAAkB,IAAlB,EAAwBQ,KAAK,CAACE,IAAN,CAAWC,GAAX,CAAeD,IAAI,IAAId,CAAC,CAACG,MAAD,EAAS;AAC3Da,QAAAA,GAAG,EAAEF,IAAI,CAACG;AADiD,OAAT,EAEjDjB,CAAC,CAAC,GAAD,EAAM;AACRkB,QAAAA,IAAI,EAAE;AADE,OAAN,EAEDJ,IAAI,CAACG,OAFJ,EAEa,GAFb,EAEkBH,IAAI,CAACK,OAAL,IAAgBnB,CAAC,CAAC,MAAD,EAAS;AAC9C,sBAAcc,IAAI,CAACK,OAD2B;AAE9C,kCAA0B,UAFoB;AAG9C,8BAAsB,QAHwB;AAI9CD,QAAAA,IAAI,EAAE,SAJwC,CAI9B;AAJ8B;AAM9CE,QAAAA,OAAO,EAAE,MAAMC,KAAK,CAAE,GAAEP,IAAI,CAACG,OAAQ,SAAQH,IAAI,CAACK,OAAQ,EAAtC;AAN0B,OAAT,EAOpC,GAPoC,CAFnC,CAFgD,CAAxB,CAAxB,CAFI,CAAR;AAcD,KAfD;;AAiBA,SAAKG,IAAL,GAAY,mBAAZ;AACA,SAAKC,EAAL,GAAU,KAAKb,IAAL,CAAUa,EAAV,IAAgB,UAA1B;AACA,SAAKC,KAAL,GAAa,UAAb,CAtBsB,CAsBG;;AAEzB,UAAMC,cAAc,GAAG,EAAvB,CAxBsB,CAwBK;;AAE3B,SAAKf,IAAL,GAAY,EAAE,GAAGe,cAAL;AACV,SAAGf;AADO,KAAZ;AAGD;;AAEDgB,EAAAA,OAAO,GAAG;AACR,UAAM;AACJC,MAAAA;AADI,QAEF,KAAKjB,IAFT;;AAIA,QAAIiB,MAAJ,EAAY;AACV,WAAKC,KAAL,CAAWD,MAAX,EAAmB,IAAnB;AACD;AACF;;AAzCgE,CAAjD,EA2Cf7B,MAAM,CAAC+B,OAAP,GAAiB,OA3CF,EA2CW9B,KA3C7B","sourcesContent":["\"use strict\";\n\nvar _class, _temp;\n\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions  */\n\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nconst {\n  h\n} = require('preact');\n\nconst {\n  UIPlugin\n} = require('@uppy/core');\n\nconst FadeIn = require('./FadeIn');\n\nconst TransitionGroup = require('./TransitionGroup');\n/**\n * Informer\n * Shows rad message bubbles\n * used like this: `uppy.info('hello world', 'info', 5000)`\n * or for errors: `uppy.info('Error uploading img.jpg', 'error', 5000)`\n *\n */\n\n\nmodule.exports = (_temp = _class = class Informer extends UIPlugin {\n  // eslint-disable-next-line global-require\n  constructor(uppy, opts) {\n    super(uppy, opts);\n\n    this.render = state => {\n      return h(\"div\", {\n        className: \"uppy uppy-Informer\"\n      }, h(TransitionGroup, null, state.info.map(info => h(FadeIn, {\n        key: info.message\n      }, h(\"p\", {\n        role: \"alert\"\n      }, info.message, ' ', info.details && h(\"span\", {\n        \"aria-label\": info.details,\n        \"data-microtip-position\": \"top-left\",\n        \"data-microtip-size\": \"medium\",\n        role: \"tooltip\" // eslint-disable-next-line no-alert\n        ,\n        onClick: () => alert(`${info.message} \\n\\n ${info.details}`)\n      }, \"?\"))))));\n    };\n\n    this.type = 'progressindicator';\n    this.id = this.opts.id || 'Informer';\n    this.title = 'Informer'; // set default options\n\n    const defaultOptions = {}; // merge default options with the ones set by user\n\n    this.opts = { ...defaultOptions,\n      ...opts\n    };\n  }\n\n  install() {\n    const {\n      target\n    } = this.opts;\n\n    if (target) {\n      this.mount(target, this);\n    }\n  }\n\n}, _class.VERSION = \"2.0.4\", _temp);"]},"metadata":{},"sourceType":"script"}