{"ast":null,"code":"\"use strict\";\n\nconst {\n  useEffect,\n  useRef\n} = require('react');\n\nconst UppyCore = require('@uppy/core').Uppy;\n\nmodule.exports = function useUppy(factory) {\n  if (typeof factory !== 'function') {\n    throw new TypeError('useUppy: expected a function that returns a new Uppy instance');\n  }\n\n  const uppy = useRef(undefined);\n\n  if (uppy.current === undefined) {\n    uppy.current = factory();\n\n    if (!(uppy.current instanceof UppyCore)) {\n      throw new TypeError(`useUppy: factory function must return an Uppy instance, got ${typeof uppy.current}`);\n    }\n  }\n\n  useEffect(() => {\n    return () => {\n      uppy.current.close();\n    };\n  }, []);\n  return uppy.current;\n};","map":{"version":3,"sources":["/Users/albertshay/Desktop/silkroad/client/node_modules/@uppy/react/lib/useUppy.js"],"names":["useEffect","useRef","require","UppyCore","Uppy","module","exports","useUppy","factory","TypeError","uppy","undefined","current","close"],"mappings":"AAAA;;AAEA,MAAM;AACJA,EAAAA,SADI;AAEJC,EAAAA;AAFI,IAGFC,OAAO,CAAC,OAAD,CAHX;;AAKA,MAAMC,QAAQ,GAAGD,OAAO,CAAC,YAAD,CAAP,CAAsBE,IAAvC;;AAEAC,MAAM,CAACC,OAAP,GAAiB,SAASC,OAAT,CAAiBC,OAAjB,EAA0B;AACzC,MAAI,OAAOA,OAAP,KAAmB,UAAvB,EAAmC;AACjC,UAAM,IAAIC,SAAJ,CAAc,+DAAd,CAAN;AACD;;AAED,QAAMC,IAAI,GAAGT,MAAM,CAACU,SAAD,CAAnB;;AAEA,MAAID,IAAI,CAACE,OAAL,KAAiBD,SAArB,EAAgC;AAC9BD,IAAAA,IAAI,CAACE,OAAL,GAAeJ,OAAO,EAAtB;;AAEA,QAAI,EAAEE,IAAI,CAACE,OAAL,YAAwBT,QAA1B,CAAJ,EAAyC;AACvC,YAAM,IAAIM,SAAJ,CAAe,+DAA8D,OAAOC,IAAI,CAACE,OAAQ,EAAjG,CAAN;AACD;AACF;;AAEDZ,EAAAA,SAAS,CAAC,MAAM;AACd,WAAO,MAAM;AACXU,MAAAA,IAAI,CAACE,OAAL,CAAaC,KAAb;AACD,KAFD;AAGD,GAJQ,EAIN,EAJM,CAAT;AAKA,SAAOH,IAAI,CAACE,OAAZ;AACD,CArBD","sourcesContent":["\"use strict\";\n\nconst {\n  useEffect,\n  useRef\n} = require('react');\n\nconst UppyCore = require('@uppy/core').Uppy;\n\nmodule.exports = function useUppy(factory) {\n  if (typeof factory !== 'function') {\n    throw new TypeError('useUppy: expected a function that returns a new Uppy instance');\n  }\n\n  const uppy = useRef(undefined);\n\n  if (uppy.current === undefined) {\n    uppy.current = factory();\n\n    if (!(uppy.current instanceof UppyCore)) {\n      throw new TypeError(`useUppy: factory function must return an Uppy instance, got ${typeof uppy.current}`);\n    }\n  }\n\n  useEffect(() => {\n    return () => {\n      uppy.current.close();\n    };\n  }, []);\n  return uppy.current;\n};"]},"metadata":{},"sourceType":"script"}