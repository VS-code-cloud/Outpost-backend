{"ast":null,"code":"\"use strict\";\n\nlet _Symbol$for;\n\nconst {\n  h,\n  Component\n} = require('preact');\n\n_Symbol$for = Symbol.for('uppy test: disable unused locale key warning');\n\nclass AddFiles extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.triggerFileInputClick = () => {\n      this.fileInput.click();\n    };\n\n    this.triggerFolderInputClick = () => {\n      this.folderInput.click();\n    };\n\n    this.onFileInputChange = event => {\n      this.props.handleInputChange(event); // We clear the input after a file is selected, because otherwise\n      // change event is not fired in Chrome and Safari when a file\n      // with the same name is selected.\n      // ___Why not use value=\"\" on <input/> instead?\n      //    Because if we use that method of clearing the input,\n      //    Chrome will not trigger change if we drop the same file twice (Issue #768).\n\n      event.target.value = null;\n    };\n\n    this.renderHiddenInput = (isFolder, refCallback) => {\n      return h(\"input\", {\n        className: \"uppy-Dashboard-input\",\n        hidden: true,\n        \"aria-hidden\": \"true\",\n        tabIndex: -1,\n        webkitdirectory: isFolder,\n        type: \"file\",\n        name: \"files[]\",\n        multiple: this.props.maxNumberOfFiles !== 1,\n        onChange: this.onFileInputChange,\n        accept: this.props.allowedFileTypes,\n        ref: refCallback\n      });\n    };\n\n    this.renderMyDeviceAcquirer = () => {\n      return h(\"div\", {\n        className: \"uppy-DashboardTab\",\n        role: \"presentation\",\n        \"data-uppy-acquirer-id\": \"MyDevice\"\n      }, h(\"button\", {\n        type: \"button\",\n        className: \"uppy-u-reset uppy-c-btn uppy-DashboardTab-btn\",\n        role: \"tab\",\n        tabIndex: 0,\n        \"data-uppy-super-focusable\": true,\n        onClick: this.triggerFileInputClick\n      }, h(\"svg\", {\n        \"aria-hidden\": \"true\",\n        focusable: \"false\",\n        width: \"32\",\n        height: \"32\",\n        viewBox: \"0 0 32 32\"\n      }, h(\"g\", {\n        fill: \"none\",\n        fillRule: \"evenodd\"\n      }, h(\"rect\", {\n        className: \"uppy-ProviderIconBg\",\n        width: \"32\",\n        height: \"32\",\n        rx: \"16\",\n        fill: \"#2275D7\"\n      }), h(\"path\", {\n        d: \"M21.973 21.152H9.863l-1.108-5.087h14.464l-1.246 5.087zM9.935 11.37h3.958l.886 1.444a.673.673 0 0 0 .585.316h6.506v1.37H9.935v-3.13zm14.898 3.44a.793.793 0 0 0-.616-.31h-.978v-2.126c0-.379-.275-.613-.653-.613H15.75l-.886-1.445a.673.673 0 0 0-.585-.316H9.232c-.378 0-.667.209-.667.587V14.5h-.782a.793.793 0 0 0-.61.303.795.795 0 0 0-.155.663l1.45 6.633c.078.36.396.618.764.618h13.354c.36 0 .674-.246.76-.595l1.631-6.636a.795.795 0 0 0-.144-.675z\",\n        fill: \"#FFF\"\n      }))), h(\"div\", {\n        className: \"uppy-DashboardTab-name\"\n      }, this.props.i18n('myDevice'))));\n    };\n\n    this.renderBrowseButton = (text, onClickFn) => {\n      const numberOfAcquirers = this.props.acquirers.length;\n      return h(\"button\", {\n        type: \"button\",\n        className: \"uppy-u-reset uppy-Dashboard-browse\",\n        onClick: onClickFn,\n        \"data-uppy-super-focusable\": numberOfAcquirers === 0\n      }, text);\n    };\n\n    this.renderDropPasteBrowseTagline = () => {\n      const numberOfAcquirers = this.props.acquirers.length;\n      const browseFiles = this.renderBrowseButton(this.props.i18n('browseFiles'), this.triggerFileInputClick);\n      const browseFolders = this.renderBrowseButton(this.props.i18n('browseFolders'), this.triggerFolderInputClick); // in order to keep the i18n CamelCase and options lower (as are defaults) we will want to transform a lower\n      // to Camel\n\n      const lowerFMSelectionType = this.props.fileManagerSelectionType;\n      const camelFMSelectionType = lowerFMSelectionType.charAt(0).toUpperCase() + lowerFMSelectionType.slice(1);\n      return h(\"div\", {\n        class: \"uppy-Dashboard-AddFiles-title\"\n      }, // eslint-disable-next-line no-nested-ternary\n      this.props.disableLocalFiles ? this.props.i18n('importFiles') : numberOfAcquirers > 0 ? this.props.i18nArray(`dropPasteImport${camelFMSelectionType}`, {\n        browseFiles,\n        browseFolders,\n        browse: browseFiles\n      }) : this.props.i18nArray(`dropPaste${camelFMSelectionType}`, {\n        browseFiles,\n        browseFolders,\n        browse: browseFiles\n      }));\n    };\n\n    this.renderAcquirer = acquirer => {\n      return h(\"div\", {\n        className: \"uppy-DashboardTab\",\n        role: \"presentation\",\n        \"data-uppy-acquirer-id\": acquirer.id\n      }, h(\"button\", {\n        type: \"button\",\n        className: \"uppy-u-reset uppy-c-btn uppy-DashboardTab-btn\",\n        role: \"tab\",\n        tabIndex: 0,\n        \"aria-controls\": `uppy-DashboardContent-panel--${acquirer.id}`,\n        \"aria-selected\": this.props.activePickerPanel.id === acquirer.id,\n        \"data-uppy-super-focusable\": true,\n        onClick: () => this.props.showPanel(acquirer.id)\n      }, acquirer.icon(), h(\"div\", {\n        className: \"uppy-DashboardTab-name\"\n      }, acquirer.name)));\n    };\n\n    this.renderAcquirers = (acquirers, disableLocalFiles) => {\n      // Group last two buttons, so we donâ€™t end up with\n      // just one button on a new line\n      const acquirersWithoutLastTwo = [...acquirers];\n      const lastTwoAcquirers = acquirersWithoutLastTwo.splice(acquirers.length - 2, acquirers.length);\n      return h(\"div\", {\n        className: \"uppy-Dashboard-AddFiles-list\",\n        role: \"tablist\"\n      }, !disableLocalFiles && this.renderMyDeviceAcquirer(), acquirersWithoutLastTwo.map(acquirer => this.renderAcquirer(acquirer)), h(\"span\", {\n        role: \"presentation\",\n        style: {\n          'white-space': 'nowrap'\n        }\n      }, lastTwoAcquirers.map(acquirer => this.renderAcquirer(acquirer))));\n    };\n  }\n\n  [_Symbol$for]() {\n    // Those are actually used in `renderDropPasteBrowseTagline` method.\n    this.props.i18nArray('dropPasteBoth');\n    this.props.i18nArray('dropPasteFiles');\n    this.props.i18nArray('dropPasteFolders');\n    this.props.i18nArray('dropPasteImportBoth');\n    this.props.i18nArray('dropPasteImportFiles');\n    this.props.i18nArray('dropPasteImportFolders');\n  }\n\n  renderPoweredByUppy() {\n    const {\n      i18nArray\n    } = this.props;\n    const uppyBranding = h(\"span\", null, h(\"svg\", {\n      \"aria-hidden\": \"true\",\n      focusable: \"false\",\n      className: \"uppy-c-icon uppy-Dashboard-poweredByIcon\",\n      width: \"11\",\n      height: \"11\",\n      viewBox: \"0 0 11 11\"\n    }, h(\"path\", {\n      d: \"M7.365 10.5l-.01-4.045h2.612L5.5.806l-4.467 5.65h2.604l.01 4.044h3.718z\",\n      fillRule: \"evenodd\"\n    })), h(\"span\", {\n      className: \"uppy-Dashboard-poweredByUppy\"\n    }, \"Uppy\"));\n    const linkText = i18nArray('poweredBy', {\n      uppy: uppyBranding\n    });\n    return h(\"a\", {\n      tabIndex: \"-1\",\n      href: \"https://uppy.io\",\n      rel: \"noreferrer noopener\",\n      target: \"_blank\",\n      className: \"uppy-Dashboard-poweredBy\"\n    }, linkText);\n  }\n\n  render() {\n    return h(\"div\", {\n      className: \"uppy-Dashboard-AddFiles\"\n    }, this.renderHiddenInput(false, ref => {\n      this.fileInput = ref;\n    }), this.renderHiddenInput(true, ref => {\n      this.folderInput = ref;\n    }), this.renderDropPasteBrowseTagline(), this.props.acquirers.length > 0 && this.renderAcquirers(this.props.acquirers, this.props.disableLocalFiles), h(\"div\", {\n      className: \"uppy-Dashboard-AddFiles-info\"\n    }, this.props.note && h(\"div\", {\n      className: \"uppy-Dashboard-note\"\n    }, this.props.note), this.props.proudlyDisplayPoweredByUppy && this.renderPoweredByUppy(this.props)));\n  }\n\n}\n\nmodule.exports = AddFiles;","map":{"version":3,"sources":["/Users/albertshay/Desktop/silkroad/client/node_modules/@uppy/dashboard/lib/components/AddFiles.js"],"names":["_Symbol$for","h","Component","require","Symbol","for","AddFiles","constructor","args","triggerFileInputClick","fileInput","click","triggerFolderInputClick","folderInput","onFileInputChange","event","props","handleInputChange","target","value","renderHiddenInput","isFolder","refCallback","className","hidden","tabIndex","webkitdirectory","type","name","multiple","maxNumberOfFiles","onChange","accept","allowedFileTypes","ref","renderMyDeviceAcquirer","role","onClick","focusable","width","height","viewBox","fill","fillRule","rx","d","i18n","renderBrowseButton","text","onClickFn","numberOfAcquirers","acquirers","length","renderDropPasteBrowseTagline","browseFiles","browseFolders","lowerFMSelectionType","fileManagerSelectionType","camelFMSelectionType","charAt","toUpperCase","slice","class","disableLocalFiles","i18nArray","browse","renderAcquirer","acquirer","id","activePickerPanel","showPanel","icon","renderAcquirers","acquirersWithoutLastTwo","lastTwoAcquirers","splice","map","style","renderPoweredByUppy","uppyBranding","linkText","uppy","href","rel","render","note","proudlyDisplayPoweredByUppy","module","exports"],"mappings":"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","sourcesContent":["\"use strict\";\n\nlet _Symbol$for;\n\nconst {\n  h,\n  Component\n} = require('preact');\n\n_Symbol$for = Symbol.for('uppy test: disable unused locale key warning');\n\nclass AddFiles extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.triggerFileInputClick = () => {\n      this.fileInput.click();\n    };\n\n    this.triggerFolderInputClick = () => {\n      this.folderInput.click();\n    };\n\n    this.onFileInputChange = event => {\n      this.props.handleInputChange(event); // We clear the input after a file is selected, because otherwise\n      // change event is not fired in Chrome and Safari when a file\n      // with the same name is selected.\n      // ___Why not use value=\"\" on <input/> instead?\n      //    Because if we use that method of clearing the input,\n      //    Chrome will not trigger change if we drop the same file twice (Issue #768).\n\n      event.target.value = null;\n    };\n\n    this.renderHiddenInput = (isFolder, refCallback) => {\n      return h(\"input\", {\n        className: \"uppy-Dashboard-input\",\n        hidden: true,\n        \"aria-hidden\": \"true\",\n        tabIndex: -1,\n        webkitdirectory: isFolder,\n        type: \"file\",\n        name: \"files[]\",\n        multiple: this.props.maxNumberOfFiles !== 1,\n        onChange: this.onFileInputChange,\n        accept: this.props.allowedFileTypes,\n        ref: refCallback\n      });\n    };\n\n    this.renderMyDeviceAcquirer = () => {\n      return h(\"div\", {\n        className: \"uppy-DashboardTab\",\n        role: \"presentation\",\n        \"data-uppy-acquirer-id\": \"MyDevice\"\n      }, h(\"button\", {\n        type: \"button\",\n        className: \"uppy-u-reset uppy-c-btn uppy-DashboardTab-btn\",\n        role: \"tab\",\n        tabIndex: 0,\n        \"data-uppy-super-focusable\": true,\n        onClick: this.triggerFileInputClick\n      }, h(\"svg\", {\n        \"aria-hidden\": \"true\",\n        focusable: \"false\",\n        width: \"32\",\n        height: \"32\",\n        viewBox: \"0 0 32 32\"\n      }, h(\"g\", {\n        fill: \"none\",\n        fillRule: \"evenodd\"\n      }, h(\"rect\", {\n        className: \"uppy-ProviderIconBg\",\n        width: \"32\",\n        height: \"32\",\n        rx: \"16\",\n        fill: \"#2275D7\"\n      }), h(\"path\", {\n        d: \"M21.973 21.152H9.863l-1.108-5.087h14.464l-1.246 5.087zM9.935 11.37h3.958l.886 1.444a.673.673 0 0 0 .585.316h6.506v1.37H9.935v-3.13zm14.898 3.44a.793.793 0 0 0-.616-.31h-.978v-2.126c0-.379-.275-.613-.653-.613H15.75l-.886-1.445a.673.673 0 0 0-.585-.316H9.232c-.378 0-.667.209-.667.587V14.5h-.782a.793.793 0 0 0-.61.303.795.795 0 0 0-.155.663l1.45 6.633c.078.36.396.618.764.618h13.354c.36 0 .674-.246.76-.595l1.631-6.636a.795.795 0 0 0-.144-.675z\",\n        fill: \"#FFF\"\n      }))), h(\"div\", {\n        className: \"uppy-DashboardTab-name\"\n      }, this.props.i18n('myDevice'))));\n    };\n\n    this.renderBrowseButton = (text, onClickFn) => {\n      const numberOfAcquirers = this.props.acquirers.length;\n      return h(\"button\", {\n        type: \"button\",\n        className: \"uppy-u-reset uppy-Dashboard-browse\",\n        onClick: onClickFn,\n        \"data-uppy-super-focusable\": numberOfAcquirers === 0\n      }, text);\n    };\n\n    this.renderDropPasteBrowseTagline = () => {\n      const numberOfAcquirers = this.props.acquirers.length;\n      const browseFiles = this.renderBrowseButton(this.props.i18n('browseFiles'), this.triggerFileInputClick);\n      const browseFolders = this.renderBrowseButton(this.props.i18n('browseFolders'), this.triggerFolderInputClick); // in order to keep the i18n CamelCase and options lower (as are defaults) we will want to transform a lower\n      // to Camel\n\n      const lowerFMSelectionType = this.props.fileManagerSelectionType;\n      const camelFMSelectionType = lowerFMSelectionType.charAt(0).toUpperCase() + lowerFMSelectionType.slice(1);\n      return h(\"div\", {\n        class: \"uppy-Dashboard-AddFiles-title\"\n      }, // eslint-disable-next-line no-nested-ternary\n      this.props.disableLocalFiles ? this.props.i18n('importFiles') : numberOfAcquirers > 0 ? this.props.i18nArray(`dropPasteImport${camelFMSelectionType}`, {\n        browseFiles,\n        browseFolders,\n        browse: browseFiles\n      }) : this.props.i18nArray(`dropPaste${camelFMSelectionType}`, {\n        browseFiles,\n        browseFolders,\n        browse: browseFiles\n      }));\n    };\n\n    this.renderAcquirer = acquirer => {\n      return h(\"div\", {\n        className: \"uppy-DashboardTab\",\n        role: \"presentation\",\n        \"data-uppy-acquirer-id\": acquirer.id\n      }, h(\"button\", {\n        type: \"button\",\n        className: \"uppy-u-reset uppy-c-btn uppy-DashboardTab-btn\",\n        role: \"tab\",\n        tabIndex: 0,\n        \"aria-controls\": `uppy-DashboardContent-panel--${acquirer.id}`,\n        \"aria-selected\": this.props.activePickerPanel.id === acquirer.id,\n        \"data-uppy-super-focusable\": true,\n        onClick: () => this.props.showPanel(acquirer.id)\n      }, acquirer.icon(), h(\"div\", {\n        className: \"uppy-DashboardTab-name\"\n      }, acquirer.name)));\n    };\n\n    this.renderAcquirers = (acquirers, disableLocalFiles) => {\n      // Group last two buttons, so we donâ€™t end up with\n      // just one button on a new line\n      const acquirersWithoutLastTwo = [...acquirers];\n      const lastTwoAcquirers = acquirersWithoutLastTwo.splice(acquirers.length - 2, acquirers.length);\n      return h(\"div\", {\n        className: \"uppy-Dashboard-AddFiles-list\",\n        role: \"tablist\"\n      }, !disableLocalFiles && this.renderMyDeviceAcquirer(), acquirersWithoutLastTwo.map(acquirer => this.renderAcquirer(acquirer)), h(\"span\", {\n        role: \"presentation\",\n        style: {\n          'white-space': 'nowrap'\n        }\n      }, lastTwoAcquirers.map(acquirer => this.renderAcquirer(acquirer))));\n    };\n  }\n\n  [_Symbol$for]() {\n    // Those are actually used in `renderDropPasteBrowseTagline` method.\n    this.props.i18nArray('dropPasteBoth');\n    this.props.i18nArray('dropPasteFiles');\n    this.props.i18nArray('dropPasteFolders');\n    this.props.i18nArray('dropPasteImportBoth');\n    this.props.i18nArray('dropPasteImportFiles');\n    this.props.i18nArray('dropPasteImportFolders');\n  }\n\n  renderPoweredByUppy() {\n    const {\n      i18nArray\n    } = this.props;\n    const uppyBranding = h(\"span\", null, h(\"svg\", {\n      \"aria-hidden\": \"true\",\n      focusable: \"false\",\n      className: \"uppy-c-icon uppy-Dashboard-poweredByIcon\",\n      width: \"11\",\n      height: \"11\",\n      viewBox: \"0 0 11 11\"\n    }, h(\"path\", {\n      d: \"M7.365 10.5l-.01-4.045h2.612L5.5.806l-4.467 5.65h2.604l.01 4.044h3.718z\",\n      fillRule: \"evenodd\"\n    })), h(\"span\", {\n      className: \"uppy-Dashboard-poweredByUppy\"\n    }, \"Uppy\"));\n    const linkText = i18nArray('poweredBy', {\n      uppy: uppyBranding\n    });\n    return h(\"a\", {\n      tabIndex: \"-1\",\n      href: \"https://uppy.io\",\n      rel: \"noreferrer noopener\",\n      target: \"_blank\",\n      className: \"uppy-Dashboard-poweredBy\"\n    }, linkText);\n  }\n\n  render() {\n    return h(\"div\", {\n      className: \"uppy-Dashboard-AddFiles\"\n    }, this.renderHiddenInput(false, ref => {\n      this.fileInput = ref;\n    }), this.renderHiddenInput(true, ref => {\n      this.folderInput = ref;\n    }), this.renderDropPasteBrowseTagline(), this.props.acquirers.length > 0 && this.renderAcquirers(this.props.acquirers, this.props.disableLocalFiles), h(\"div\", {\n      className: \"uppy-Dashboard-AddFiles-info\"\n    }, this.props.note && h(\"div\", {\n      className: \"uppy-Dashboard-note\"\n    }, this.props.note), this.props.proudlyDisplayPoweredByUppy && this.renderPoweredByUppy(this.props)));\n  }\n\n}\n\nmodule.exports = AddFiles;"]},"metadata":{},"sourceType":"script"}