{"ast":null,"code":"\"use strict\";\n\nconst {\n  h\n} = require('preact');\n\nfunction onPauseResumeCancelRetry(props) {\n  if (props.isUploaded) return;\n\n  if (props.error && !props.hideRetryButton) {\n    props.uppy.retryUpload(props.file.id);\n    return;\n  }\n\n  if (props.resumableUploads && !props.hidePauseResumeButton) {\n    props.uppy.pauseResume(props.file.id);\n  } else if (props.individualCancellation && !props.hideCancelButton) {\n    props.uppy.removeFile(props.file.id);\n  }\n}\n\nfunction progressIndicatorTitle(props) {\n  if (props.isUploaded) {\n    return props.i18n('uploadComplete');\n  }\n\n  if (props.error) {\n    return props.i18n('retryUpload');\n  }\n\n  if (props.resumableUploads) {\n    if (props.file.isPaused) {\n      return props.i18n('resumeUpload');\n    }\n\n    return props.i18n('pauseUpload');\n  }\n\n  if (props.individualCancellation) {\n    return props.i18n('cancelUpload');\n  }\n\n  return '';\n}\n\nfunction ProgressIndicatorButton(props) {\n  return h(\"div\", {\n    className: \"uppy-Dashboard-Item-progress\"\n  }, h(\"button\", {\n    className: \"uppy-u-reset uppy-Dashboard-Item-progressIndicator\",\n    type: \"button\",\n    \"aria-label\": progressIndicatorTitle(props),\n    title: progressIndicatorTitle(props),\n    onClick: () => onPauseResumeCancelRetry(props)\n  }, props.children));\n}\n\nfunction ProgressCircleContainer({\n  children\n}) {\n  return h(\"svg\", {\n    \"aria-hidden\": \"true\",\n    focusable: \"false\",\n    width: \"70\",\n    height: \"70\",\n    viewBox: \"0 0 36 36\",\n    className: \"uppy-c-icon uppy-Dashboard-Item-progressIcon--circle\"\n  }, children);\n}\n\nfunction ProgressCircle({\n  progress\n}) {\n  // circle length equals 2 * PI * R\n  const circleLength = 2 * Math.PI * 15;\n  return h(\"g\", null, h(\"circle\", {\n    className: \"uppy-Dashboard-Item-progressIcon--bg\",\n    r: \"15\",\n    cx: \"18\",\n    cy: \"18\",\n    \"stroke-width\": \"2\",\n    fill: \"none\"\n  }), h(\"circle\", {\n    className: \"uppy-Dashboard-Item-progressIcon--progress\",\n    r: \"15\",\n    cx: \"18\",\n    cy: \"18\",\n    transform: \"rotate(-90, 18, 18)\",\n    fill: \"none\",\n    \"stroke-width\": \"2\",\n    \"stroke-dasharray\": circleLength,\n    \"stroke-dashoffset\": circleLength - circleLength / 100 * progress\n  }));\n}\n\nmodule.exports = function FileProgress(props) {\n  // Nothing if upload has not started\n  if (!props.file.progress.uploadStarted) {\n    return null;\n  } // Green checkmark when complete\n\n\n  if (props.isUploaded) {\n    return h(\"div\", {\n      className: \"uppy-Dashboard-Item-progress\"\n    }, h(\"div\", {\n      className: \"uppy-Dashboard-Item-progressIndicator\"\n    }, h(ProgressCircleContainer, null, h(\"circle\", {\n      r: \"15\",\n      cx: \"18\",\n      cy: \"18\",\n      fill: \"#1bb240\"\n    }), h(\"polygon\", {\n      className: \"uppy-Dashboard-Item-progressIcon--check\",\n      transform: \"translate(2, 3)\",\n      points: \"14 22.5 7 15.2457065 8.99985857 13.1732815 14 18.3547104 22.9729883 9 25 11.1005634\"\n    }))));\n  }\n\n  if (props.recoveredState) {\n    return;\n  } // Retry button for error\n\n\n  if (props.error && !props.hideRetryButton) {\n    return h(ProgressIndicatorButton, props, h(\"svg\", {\n      \"aria-hidden\": \"true\",\n      focusable: \"false\",\n      className: \"uppy-c-icon uppy-Dashboard-Item-progressIcon--retry\",\n      width: \"28\",\n      height: \"31\",\n      viewBox: \"0 0 16 19\"\n    }, h(\"path\", {\n      d: \"M16 11a8 8 0 1 1-8-8v2a6 6 0 1 0 6 6h2z\"\n    }), h(\"path\", {\n      d: \"M7.9 3H10v2H7.9z\"\n    }), h(\"path\", {\n      d: \"M8.536.5l3.535 3.536-1.414 1.414L7.12 1.914z\"\n    }), h(\"path\", {\n      d: \"M10.657 2.621l1.414 1.415L8.536 7.57 7.12 6.157z\"\n    })));\n  } // Pause/resume button for resumable uploads\n\n\n  if (props.resumableUploads && !props.hidePauseResumeButton) {\n    return h(ProgressIndicatorButton, props, h(ProgressCircleContainer, null, h(ProgressCircle, {\n      progress: props.file.progress.percentage\n    }), props.file.isPaused ? h(\"polygon\", {\n      className: \"uppy-Dashboard-Item-progressIcon--play\",\n      transform: \"translate(3, 3)\",\n      points: \"12 20 12 10 20 15\"\n    }) : h(\"g\", {\n      className: \"uppy-Dashboard-Item-progressIcon--pause\",\n      transform: \"translate(14.5, 13)\"\n    }, h(\"rect\", {\n      x: \"0\",\n      y: \"0\",\n      width: \"2\",\n      height: \"10\",\n      rx: \"0\"\n    }), h(\"rect\", {\n      x: \"5\",\n      y: \"0\",\n      width: \"2\",\n      height: \"10\",\n      rx: \"0\"\n    }))));\n  } // Cancel button for non-resumable uploads if individualCancellation is supported (not bundled)\n\n\n  if (!props.resumableUploads && props.individualCancellation && !props.hideCancelButton) {\n    return h(ProgressIndicatorButton, props, h(ProgressCircleContainer, null, h(ProgressCircle, {\n      progress: props.file.progress.percentage\n    }), h(\"polygon\", {\n      className: \"cancel\",\n      transform: \"translate(2, 2)\",\n      points: \"19.8856516 11.0625 16 14.9481516 12.1019737 11.0625 11.0625 12.1143484 14.9481516 16 11.0625 19.8980263 12.1019737 20.9375 16 17.0518484 19.8856516 20.9375 20.9375 19.8980263 17.0518484 16 20.9375 12\"\n    })));\n  } // Just progress when buttons are disabled\n\n\n  return h(\"div\", {\n    className: \"uppy-Dashboard-Item-progress\"\n  }, h(\"div\", {\n    className: \"uppy-Dashboard-Item-progressIndicator\"\n  }, h(ProgressCircleContainer, null, h(ProgressCircle, {\n    progress: props.file.progress.percentage\n  }))));\n};","map":{"version":3,"sources":["/Users/albertshay/Desktop/silkroad/client/node_modules/@uppy/dashboard/lib/components/FileItem/FileProgress/index.js"],"names":["h","require","onPauseResumeCancelRetry","props","isUploaded","error","hideRetryButton","uppy","retryUpload","file","id","resumableUploads","hidePauseResumeButton","pauseResume","individualCancellation","hideCancelButton","removeFile","progressIndicatorTitle","i18n","isPaused","ProgressIndicatorButton","className","type","title","onClick","children","ProgressCircleContainer","focusable","width","height","viewBox","ProgressCircle","progress","circleLength","Math","PI","r","cx","cy","fill","transform","module","exports","FileProgress","uploadStarted","points","recoveredState","d","percentage","x","y","rx"],"mappings":"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","sourcesContent":["\"use strict\";\n\nconst {\n  h\n} = require('preact');\n\nfunction onPauseResumeCancelRetry(props) {\n  if (props.isUploaded) return;\n\n  if (props.error && !props.hideRetryButton) {\n    props.uppy.retryUpload(props.file.id);\n    return;\n  }\n\n  if (props.resumableUploads && !props.hidePauseResumeButton) {\n    props.uppy.pauseResume(props.file.id);\n  } else if (props.individualCancellation && !props.hideCancelButton) {\n    props.uppy.removeFile(props.file.id);\n  }\n}\n\nfunction progressIndicatorTitle(props) {\n  if (props.isUploaded) {\n    return props.i18n('uploadComplete');\n  }\n\n  if (props.error) {\n    return props.i18n('retryUpload');\n  }\n\n  if (props.resumableUploads) {\n    if (props.file.isPaused) {\n      return props.i18n('resumeUpload');\n    }\n\n    return props.i18n('pauseUpload');\n  }\n\n  if (props.individualCancellation) {\n    return props.i18n('cancelUpload');\n  }\n\n  return '';\n}\n\nfunction ProgressIndicatorButton(props) {\n  return h(\"div\", {\n    className: \"uppy-Dashboard-Item-progress\"\n  }, h(\"button\", {\n    className: \"uppy-u-reset uppy-Dashboard-Item-progressIndicator\",\n    type: \"button\",\n    \"aria-label\": progressIndicatorTitle(props),\n    title: progressIndicatorTitle(props),\n    onClick: () => onPauseResumeCancelRetry(props)\n  }, props.children));\n}\n\nfunction ProgressCircleContainer({\n  children\n}) {\n  return h(\"svg\", {\n    \"aria-hidden\": \"true\",\n    focusable: \"false\",\n    width: \"70\",\n    height: \"70\",\n    viewBox: \"0 0 36 36\",\n    className: \"uppy-c-icon uppy-Dashboard-Item-progressIcon--circle\"\n  }, children);\n}\n\nfunction ProgressCircle({\n  progress\n}) {\n  // circle length equals 2 * PI * R\n  const circleLength = 2 * Math.PI * 15;\n  return h(\"g\", null, h(\"circle\", {\n    className: \"uppy-Dashboard-Item-progressIcon--bg\",\n    r: \"15\",\n    cx: \"18\",\n    cy: \"18\",\n    \"stroke-width\": \"2\",\n    fill: \"none\"\n  }), h(\"circle\", {\n    className: \"uppy-Dashboard-Item-progressIcon--progress\",\n    r: \"15\",\n    cx: \"18\",\n    cy: \"18\",\n    transform: \"rotate(-90, 18, 18)\",\n    fill: \"none\",\n    \"stroke-width\": \"2\",\n    \"stroke-dasharray\": circleLength,\n    \"stroke-dashoffset\": circleLength - circleLength / 100 * progress\n  }));\n}\n\nmodule.exports = function FileProgress(props) {\n  // Nothing if upload has not started\n  if (!props.file.progress.uploadStarted) {\n    return null;\n  } // Green checkmark when complete\n\n\n  if (props.isUploaded) {\n    return h(\"div\", {\n      className: \"uppy-Dashboard-Item-progress\"\n    }, h(\"div\", {\n      className: \"uppy-Dashboard-Item-progressIndicator\"\n    }, h(ProgressCircleContainer, null, h(\"circle\", {\n      r: \"15\",\n      cx: \"18\",\n      cy: \"18\",\n      fill: \"#1bb240\"\n    }), h(\"polygon\", {\n      className: \"uppy-Dashboard-Item-progressIcon--check\",\n      transform: \"translate(2, 3)\",\n      points: \"14 22.5 7 15.2457065 8.99985857 13.1732815 14 18.3547104 22.9729883 9 25 11.1005634\"\n    }))));\n  }\n\n  if (props.recoveredState) {\n    return;\n  } // Retry button for error\n\n\n  if (props.error && !props.hideRetryButton) {\n    return h(ProgressIndicatorButton, props, h(\"svg\", {\n      \"aria-hidden\": \"true\",\n      focusable: \"false\",\n      className: \"uppy-c-icon uppy-Dashboard-Item-progressIcon--retry\",\n      width: \"28\",\n      height: \"31\",\n      viewBox: \"0 0 16 19\"\n    }, h(\"path\", {\n      d: \"M16 11a8 8 0 1 1-8-8v2a6 6 0 1 0 6 6h2z\"\n    }), h(\"path\", {\n      d: \"M7.9 3H10v2H7.9z\"\n    }), h(\"path\", {\n      d: \"M8.536.5l3.535 3.536-1.414 1.414L7.12 1.914z\"\n    }), h(\"path\", {\n      d: \"M10.657 2.621l1.414 1.415L8.536 7.57 7.12 6.157z\"\n    })));\n  } // Pause/resume button for resumable uploads\n\n\n  if (props.resumableUploads && !props.hidePauseResumeButton) {\n    return h(ProgressIndicatorButton, props, h(ProgressCircleContainer, null, h(ProgressCircle, {\n      progress: props.file.progress.percentage\n    }), props.file.isPaused ? h(\"polygon\", {\n      className: \"uppy-Dashboard-Item-progressIcon--play\",\n      transform: \"translate(3, 3)\",\n      points: \"12 20 12 10 20 15\"\n    }) : h(\"g\", {\n      className: \"uppy-Dashboard-Item-progressIcon--pause\",\n      transform: \"translate(14.5, 13)\"\n    }, h(\"rect\", {\n      x: \"0\",\n      y: \"0\",\n      width: \"2\",\n      height: \"10\",\n      rx: \"0\"\n    }), h(\"rect\", {\n      x: \"5\",\n      y: \"0\",\n      width: \"2\",\n      height: \"10\",\n      rx: \"0\"\n    }))));\n  } // Cancel button for non-resumable uploads if individualCancellation is supported (not bundled)\n\n\n  if (!props.resumableUploads && props.individualCancellation && !props.hideCancelButton) {\n    return h(ProgressIndicatorButton, props, h(ProgressCircleContainer, null, h(ProgressCircle, {\n      progress: props.file.progress.percentage\n    }), h(\"polygon\", {\n      className: \"cancel\",\n      transform: \"translate(2, 2)\",\n      points: \"19.8856516 11.0625 16 14.9481516 12.1019737 11.0625 11.0625 12.1143484 14.9481516 16 11.0625 19.8980263 12.1019737 20.9375 16 17.0518484 19.8856516 20.9375 20.9375 19.8980263 17.0518484 16 20.9375 12\"\n    })));\n  } // Just progress when buttons are disabled\n\n\n  return h(\"div\", {\n    className: \"uppy-Dashboard-Item-progress\"\n  }, h(\"div\", {\n    className: \"uppy-Dashboard-Item-progressIndicator\"\n  }, h(ProgressCircleContainer, null, h(ProgressCircle, {\n    progress: props.file.progress.percentage\n  }))));\n};"]},"metadata":{},"sourceType":"script"}