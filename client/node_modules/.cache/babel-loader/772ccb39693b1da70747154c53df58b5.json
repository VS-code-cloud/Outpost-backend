{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/albertshay/Desktop/silkroad/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/albertshay/Desktop/silkroad/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _assertThisInitialized = require(\"/Users/albertshay/Desktop/silkroad/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/assertThisInitialized\");\n\nvar _inherits = require(\"/Users/albertshay/Desktop/silkroad/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/albertshay/Desktop/silkroad/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar _toConsumableArray = require(\"/Users/albertshay/Desktop/silkroad/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nfunction _classPrivateFieldLooseBase(receiver, privateKey) {\n  if (!Object.prototype.hasOwnProperty.call(receiver, privateKey)) {\n    throw new TypeError(\"attempted to use private field on non-instance\");\n  }\n\n  return receiver;\n}\n\nvar id = 0;\n\nfunction _classPrivateFieldLooseKey(name) {\n  return \"__private_\" + id++ + \"_\" + name;\n}\n\nvar _require = require('preact'),\n    render = _require.render;\n\nvar findDOMElement = require('@uppy/utils/lib/findDOMElement');\n\nvar BasePlugin = require('./BasePlugin');\n/**\n * Defer a frequent call to the microtask queue.\n *\n * @param {() => T} fn\n * @returns {Promise<T>}\n */\n\n\nfunction debounce(fn) {\n  var calling = null;\n  var latestArgs = null;\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    latestArgs = args;\n\n    if (!calling) {\n      calling = Promise.resolve().then(function () {\n        calling = null; // At this point `args` may be different from the most\n        // recent state, if multiple calls happened since this task\n        // was queued. So we use the `latestArgs`, which definitely\n        // is the most recent call.\n\n        return fn.apply(void 0, _toConsumableArray(latestArgs));\n      });\n    }\n\n    return calling;\n  };\n}\n/**\n * UIPlugin is the extended version of BasePlugin to incorporate rendering with Preact.\n * Use this for plugins that need a user interface.\n *\n * For plugins without an user interface, see BasePlugin.\n */\n\n\nvar _updateUI = /*#__PURE__*/_classPrivateFieldLooseKey(\"updateUI\");\n\nvar UIPlugin = /*#__PURE__*/function (_BasePlugin) {\n  _inherits(UIPlugin, _BasePlugin);\n\n  var _super = _createSuper(UIPlugin);\n\n  function UIPlugin() {\n    var _this;\n\n    _classCallCheck(this, UIPlugin);\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    Object.defineProperty(_assertThisInitialized(_this), _updateUI, {\n      writable: true,\n      value: void 0\n    });\n    return _this;\n  }\n  /**\n   * Check if supplied `target` is a DOM element or an `object`.\n   * If it’s an object — target is a plugin, and we search `plugins`\n   * for a plugin with same name and return its target.\n   */\n\n\n  _createClass(UIPlugin, [{\n    key: \"mount\",\n    value: function mount(target, plugin) {\n      var _this2 = this;\n\n      var callerPluginName = plugin.id;\n      var targetElement = findDOMElement(target);\n\n      if (targetElement) {\n        this.isTargetDOMEl = true; // When target is <body> with a single <div> element,\n        // Preact thinks it’s the Uppy root element in there when doing a diff,\n        // and destroys it. So we are creating a fragment (could be empty div)\n\n        var uppyRootElement = document.createDocumentFragment(); // API for plugins that require a synchronous rerender.\n\n        _classPrivateFieldLooseBase(this, _updateUI)[_updateUI] = debounce(function (state) {\n          // plugin could be removed, but this.rerender is debounced below,\n          // so it could still be called even after uppy.removePlugin or uppy.close\n          // hence the check\n          if (!_this2.uppy.getPlugin(_this2.id)) return;\n          render(_this2.render(state), uppyRootElement);\n\n          _this2.afterUpdate();\n        });\n        this.uppy.log(\"Installing \".concat(callerPluginName, \" to a DOM element '\").concat(target, \"'\"));\n\n        if (this.opts.replaceTargetContent) {\n          // Doing render(h(null), targetElement), which should have been\n          // a better way, since because the component might need to do additional cleanup when it is removed,\n          // stopped working — Preact just adds null into target, not replacing\n          targetElement.innerHTML = '';\n        }\n\n        render(this.render(this.uppy.getState()), uppyRootElement);\n        this.el = uppyRootElement.firstElementChild;\n        targetElement.appendChild(uppyRootElement);\n        this.onMount();\n        return this.el;\n      }\n\n      var targetPlugin;\n\n      if (typeof target === 'object' && target instanceof UIPlugin) {\n        // Targeting a plugin *instance*\n        targetPlugin = target;\n      } else if (typeof target === 'function') {\n        // Targeting a plugin type\n        var Target = target; // Find the target plugin instance.\n\n        this.uppy.iteratePlugins(function (p) {\n          if (p instanceof Target) {\n            targetPlugin = p;\n            return false;\n          }\n        });\n      }\n\n      if (targetPlugin) {\n        this.uppy.log(\"Installing \".concat(callerPluginName, \" to \").concat(targetPlugin.id));\n        this.parent = targetPlugin;\n        this.el = targetPlugin.addTarget(plugin);\n        this.onMount();\n        return this.el;\n      }\n\n      this.uppy.log(\"Not installing \".concat(callerPluginName));\n      var message = \"Invalid target option given to \".concat(callerPluginName, \".\");\n\n      if (typeof target === 'function') {\n        message += ' The given target is not a Plugin class. ' + 'Please check that you\\'re not specifying a React Component instead of a plugin. ' + 'If you are using @uppy/* packages directly, make sure you have only 1 version of @uppy/core installed: ' + 'run `npm ls @uppy/core` on the command line and verify that all the versions match and are deduped correctly.';\n      } else {\n        message += 'If you meant to target an HTML element, please make sure that the element exists. ' + 'Check that the <script> tag initializing Uppy is right before the closing </body> tag at the end of the page. ' + '(see https://github.com/transloadit/uppy/issues/1042)\\n\\n' + 'If you meant to target a plugin, please confirm that your `import` statements or `require` calls are correct.';\n      }\n\n      throw new Error(message);\n    }\n  }, {\n    key: \"update\",\n    value: function update(state) {\n      if (this.el != null) {\n        var _classPrivateFieldLoo, _classPrivateFieldLoo2;\n\n        (_classPrivateFieldLoo = (_classPrivateFieldLoo2 = _classPrivateFieldLooseBase(this, _updateUI))[_updateUI]) == null ? void 0 : _classPrivateFieldLoo.call(_classPrivateFieldLoo2, state);\n      }\n    }\n  }, {\n    key: \"unmount\",\n    value: function unmount() {\n      if (this.isTargetDOMEl) {\n        var _this$el;\n\n        (_this$el = this.el) == null ? void 0 : _this$el.remove();\n      }\n\n      this.onUnmount();\n    } // eslint-disable-next-line class-methods-use-this\n\n  }, {\n    key: \"onMount\",\n    value: function onMount() {} // eslint-disable-next-line class-methods-use-this\n\n  }, {\n    key: \"onUnmount\",\n    value: function onUnmount() {}\n  }]);\n\n  return UIPlugin;\n}(BasePlugin);\n\nmodule.exports = UIPlugin;","map":{"version":3,"sources":["/Users/albertshay/Desktop/silkroad/client/node_modules/@uppy/core/lib/UIPlugin.js"],"names":["_classPrivateFieldLooseBase","receiver","privateKey","Object","prototype","hasOwnProperty","call","TypeError","id","_classPrivateFieldLooseKey","name","require","render","findDOMElement","BasePlugin","debounce","fn","calling","latestArgs","args","Promise","resolve","then","_updateUI","UIPlugin","defineProperty","writable","value","target","plugin","callerPluginName","targetElement","isTargetDOMEl","uppyRootElement","document","createDocumentFragment","state","uppy","getPlugin","afterUpdate","log","opts","replaceTargetContent","innerHTML","getState","el","firstElementChild","appendChild","onMount","targetPlugin","Target","iteratePlugins","p","parent","addTarget","message","Error","_classPrivateFieldLoo","_classPrivateFieldLoo2","_this$el","remove","onUnmount","module","exports"],"mappings":"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","sourcesContent":["\"use strict\";\n\nfunction _classPrivateFieldLooseBase(receiver, privateKey) { if (!Object.prototype.hasOwnProperty.call(receiver, privateKey)) { throw new TypeError(\"attempted to use private field on non-instance\"); } return receiver; }\n\nvar id = 0;\n\nfunction _classPrivateFieldLooseKey(name) { return \"__private_\" + id++ + \"_\" + name; }\n\nconst {\n  render\n} = require('preact');\n\nconst findDOMElement = require('@uppy/utils/lib/findDOMElement');\n\nconst BasePlugin = require('./BasePlugin');\n/**\n * Defer a frequent call to the microtask queue.\n *\n * @param {() => T} fn\n * @returns {Promise<T>}\n */\n\n\nfunction debounce(fn) {\n  let calling = null;\n  let latestArgs = null;\n  return (...args) => {\n    latestArgs = args;\n\n    if (!calling) {\n      calling = Promise.resolve().then(() => {\n        calling = null; // At this point `args` may be different from the most\n        // recent state, if multiple calls happened since this task\n        // was queued. So we use the `latestArgs`, which definitely\n        // is the most recent call.\n\n        return fn(...latestArgs);\n      });\n    }\n\n    return calling;\n  };\n}\n/**\n * UIPlugin is the extended version of BasePlugin to incorporate rendering with Preact.\n * Use this for plugins that need a user interface.\n *\n * For plugins without an user interface, see BasePlugin.\n */\n\n\nvar _updateUI = /*#__PURE__*/_classPrivateFieldLooseKey(\"updateUI\");\n\nclass UIPlugin extends BasePlugin {\n  constructor(...args) {\n    super(...args);\n    Object.defineProperty(this, _updateUI, {\n      writable: true,\n      value: void 0\n    });\n  }\n\n  /**\n   * Check if supplied `target` is a DOM element or an `object`.\n   * If it’s an object — target is a plugin, and we search `plugins`\n   * for a plugin with same name and return its target.\n   */\n  mount(target, plugin) {\n    const callerPluginName = plugin.id;\n    const targetElement = findDOMElement(target);\n\n    if (targetElement) {\n      this.isTargetDOMEl = true; // When target is <body> with a single <div> element,\n      // Preact thinks it’s the Uppy root element in there when doing a diff,\n      // and destroys it. So we are creating a fragment (could be empty div)\n\n      const uppyRootElement = document.createDocumentFragment(); // API for plugins that require a synchronous rerender.\n\n      _classPrivateFieldLooseBase(this, _updateUI)[_updateUI] = debounce(state => {\n        // plugin could be removed, but this.rerender is debounced below,\n        // so it could still be called even after uppy.removePlugin or uppy.close\n        // hence the check\n        if (!this.uppy.getPlugin(this.id)) return;\n        render(this.render(state), uppyRootElement);\n        this.afterUpdate();\n      });\n      this.uppy.log(`Installing ${callerPluginName} to a DOM element '${target}'`);\n\n      if (this.opts.replaceTargetContent) {\n        // Doing render(h(null), targetElement), which should have been\n        // a better way, since because the component might need to do additional cleanup when it is removed,\n        // stopped working — Preact just adds null into target, not replacing\n        targetElement.innerHTML = '';\n      }\n\n      render(this.render(this.uppy.getState()), uppyRootElement);\n      this.el = uppyRootElement.firstElementChild;\n      targetElement.appendChild(uppyRootElement);\n      this.onMount();\n      return this.el;\n    }\n\n    let targetPlugin;\n\n    if (typeof target === 'object' && target instanceof UIPlugin) {\n      // Targeting a plugin *instance*\n      targetPlugin = target;\n    } else if (typeof target === 'function') {\n      // Targeting a plugin type\n      const Target = target; // Find the target plugin instance.\n\n      this.uppy.iteratePlugins(p => {\n        if (p instanceof Target) {\n          targetPlugin = p;\n          return false;\n        }\n      });\n    }\n\n    if (targetPlugin) {\n      this.uppy.log(`Installing ${callerPluginName} to ${targetPlugin.id}`);\n      this.parent = targetPlugin;\n      this.el = targetPlugin.addTarget(plugin);\n      this.onMount();\n      return this.el;\n    }\n\n    this.uppy.log(`Not installing ${callerPluginName}`);\n    let message = `Invalid target option given to ${callerPluginName}.`;\n\n    if (typeof target === 'function') {\n      message += ' The given target is not a Plugin class. ' + 'Please check that you\\'re not specifying a React Component instead of a plugin. ' + 'If you are using @uppy/* packages directly, make sure you have only 1 version of @uppy/core installed: ' + 'run `npm ls @uppy/core` on the command line and verify that all the versions match and are deduped correctly.';\n    } else {\n      message += 'If you meant to target an HTML element, please make sure that the element exists. ' + 'Check that the <script> tag initializing Uppy is right before the closing </body> tag at the end of the page. ' + '(see https://github.com/transloadit/uppy/issues/1042)\\n\\n' + 'If you meant to target a plugin, please confirm that your `import` statements or `require` calls are correct.';\n    }\n\n    throw new Error(message);\n  }\n\n  update(state) {\n    if (this.el != null) {\n      var _classPrivateFieldLoo, _classPrivateFieldLoo2;\n\n      (_classPrivateFieldLoo = (_classPrivateFieldLoo2 = _classPrivateFieldLooseBase(this, _updateUI))[_updateUI]) == null ? void 0 : _classPrivateFieldLoo.call(_classPrivateFieldLoo2, state);\n    }\n  }\n\n  unmount() {\n    if (this.isTargetDOMEl) {\n      var _this$el;\n\n      (_this$el = this.el) == null ? void 0 : _this$el.remove();\n    }\n\n    this.onUnmount();\n  } // eslint-disable-next-line class-methods-use-this\n\n\n  onMount() {} // eslint-disable-next-line class-methods-use-this\n\n\n  onUnmount() {}\n\n}\n\nmodule.exports = UIPlugin;"]},"metadata":{},"sourceType":"script"}