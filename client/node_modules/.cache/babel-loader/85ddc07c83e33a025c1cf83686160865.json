{"ast":null,"code":"var _jsxFileName = \"/Users/albertshay/Desktop/silkroad/client/src/components/Auth/Auth.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Avatar, Button, Paper, Grid, Typography, Container } from '@material-ui/core';\nimport { useHistory, Link } from 'react-router-dom';\nimport { GoogleLogin } from 'react-google-login';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Icon from './icon';\nimport { signin, signup } from '../../actions/auth';\nimport { AUTH } from '../../constants/actionTypes';\nimport useStyles from './styles';\nimport Input from './Input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  firstName: '',\n  lastName: '',\n  email: '',\n  password: '',\n  confirmPassword: ''\n};\n\nconst SignUp = () => {\n  _s();\n\n  const [form, setForm] = useState(initialState);\n  const [isSignup, setIsSignup] = useState(false);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const classes = useStyles();\n  const [showPassword, setShowPassword] = useState(false);\n\n  const handleShowPassword = () => setShowPassword(!showPassword);\n\n  const switchMode = () => {\n    setForm(initialState);\n    setIsSignup(prevIsSignup => !prevIsSignup);\n    setShowPassword(false);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (isSignup) {\n      dispatch(signup(form, history));\n    } else {\n      dispatch(signin(form, history));\n    }\n  };\n\n  const googleSuccess = async res => {\n    const result = res === null || res === void 0 ? void 0 : res.profileObj;\n    const token = res === null || res === void 0 ? void 0 : res.tokenId;\n\n    try {\n      dispatch({\n        type: AUTH,\n        data: {\n          result,\n          token\n        }\n      });\n      history.push('/');\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const googleError = () => alert('Google Sign In was unsuccessful. Try again later');\n\n  const handleChange = e => setForm({ ...form,\n    [e.target.name]: e.target.value\n  });\n\n  const MouseOver = event => {\n    event.target.style.color = 'blue';\n  };\n\n  const MouseOut = event => {\n    event.target.style.color = '';\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paper,\n      elevation: 3,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.header,\n        component: \"h1\",\n        variant: \"h5\",\n        children: isSignup ? 'Sign up' : 'Sign in'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.form,\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [isSignup && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              name: \"firstName\",\n              label: \"First Name\",\n              handleChange: handleChange,\n              autoFocus: true,\n              half: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              name: \"lastName\",\n              label: \"Last Name\",\n              handleChange: handleChange,\n              half: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"email\",\n            label: \"Email Address\",\n            handleChange: handleChange,\n            type: \"email\",\n            InputProps: {\n              style: {\n                fontSize: 12,\n                fontFamily: 'Montserrat'\n              }\n            },\n            InputLabelProps: {\n              style: {\n                fontSize: 12\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"password\",\n            label: \"Password\",\n            handleChange: handleChange,\n            type: showPassword ? 'text' : 'password',\n            handleShowPassword: handleShowPassword,\n            InputProps: {\n              style: {\n                fontSize: 12\n              }\n            },\n            InputLabelProps: {\n              style: {\n                fontSize: 12\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), isSignup && /*#__PURE__*/_jsxDEV(Input, {\n            name: \"confirmPassword\",\n            label: \"Repeat Password\",\n            handleChange: handleChange,\n            type: \"password\",\n            InputProps: {\n              style: {\n                fontSize: 12\n              }\n            },\n            InputLabelProps: {\n              style: {\n                fontSize: 12\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          fullWidth: true,\n          color: \"primary\",\n          variant: \"contained\",\n          className: classes.submit,\n          children: isSignup ? 'Sign Up' : 'Sign In'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n          clientId: process.env.REACT_APP_GOOGLE_CLIENT_ID,\n          render: renderProps => /*#__PURE__*/_jsxDEV(Button, {\n            className: classes.googleButton,\n            fullWidth: true,\n            color: \"primary\",\n            onClick: renderProps.onClick,\n            disabled: renderProps.disabled,\n            startIcon: /*#__PURE__*/_jsxDEV(Icon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 28\n            }, this),\n            variant: \"contained\",\n            children: \"Google Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this),\n          onSuccess: googleSuccess,\n          onFailure: googleError,\n          cookiePolicy: \"single_host_origin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          justify: \"flex-end\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: switchMode,\n              className: classes.button,\n              children: isSignup ? /*#__PURE__*/_jsxDEV(Typography, {\n                className: classes.signup,\n                onMouseOver: MouseOver,\n                onMouseOut: MouseOut,\n                component: Link,\n                to: \"/auth\",\n                children: \"Already have an account? Sign in\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n                className: classes.signup,\n                onMouseOver: MouseOver,\n                onMouseOut: MouseOut,\n                component: Link,\n                to: \"/auth\",\n                children: [' ', \"Don't have an account? Sign Up\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignUp, \"2WEILANOHdyqkPi/fxX0K43rHJ0=\", false, function () {\n  return [useDispatch, useHistory, useStyles];\n});\n\n_c = SignUp;\nexport default SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["/Users/albertshay/Desktop/silkroad/client/src/components/Auth/Auth.js"],"names":["React","useState","useDispatch","Avatar","Button","Paper","Grid","Typography","Container","useHistory","Link","GoogleLogin","LockOutlinedIcon","Icon","signin","signup","AUTH","useStyles","Input","initialState","firstName","lastName","email","password","confirmPassword","SignUp","form","setForm","isSignup","setIsSignup","dispatch","history","classes","showPassword","setShowPassword","handleShowPassword","switchMode","prevIsSignup","handleSubmit","e","preventDefault","googleSuccess","res","result","profileObj","token","tokenId","type","data","push","error","console","log","googleError","alert","handleChange","target","name","value","MouseOver","event","style","color","MouseOut","paper","header","fontSize","fontFamily","submit","process","env","REACT_APP_GOOGLE_CLIENT_ID","renderProps","googleButton","onClick","disabled","button"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport {\n  Avatar,\n  Button,\n  Paper,\n  Grid,\n  Typography,\n  Container,\n} from '@material-ui/core';\nimport { useHistory, Link } from 'react-router-dom';\nimport { GoogleLogin } from 'react-google-login';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\n\nimport Icon from './icon';\nimport { signin, signup } from '../../actions/auth';\nimport { AUTH } from '../../constants/actionTypes';\nimport useStyles from './styles';\nimport Input from './Input';\n\nconst initialState = {\n  firstName: '',\n  lastName: '',\n  email: '',\n  password: '',\n  confirmPassword: '',\n};\n\nconst SignUp = () => {\n  const [form, setForm] = useState(initialState);\n  const [isSignup, setIsSignup] = useState(false);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const classes = useStyles();\n\n  const [showPassword, setShowPassword] = useState(false);\n  const handleShowPassword = () => setShowPassword(!showPassword);\n\n  const switchMode = () => {\n    setForm(initialState);\n    setIsSignup((prevIsSignup) => !prevIsSignup);\n    setShowPassword(false);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (isSignup) {\n      dispatch(signup(form, history));\n    } else {\n      dispatch(signin(form, history));\n    }\n  };\n\n  const googleSuccess = async (res) => {\n    const result = res?.profileObj;\n    const token = res?.tokenId;\n\n    try {\n      dispatch({ type: AUTH, data: { result, token } });\n\n      history.push('/');\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const googleError = () =>\n    alert('Google Sign In was unsuccessful. Try again later');\n\n  const handleChange = (e) =>\n    setForm({ ...form, [e.target.name]: e.target.value });\n  const MouseOver = (event) => {\n    event.target.style.color = 'blue';\n  };\n  const MouseOut = (event) => {\n    event.target.style.color = '';\n  };\n  return (\n    <Container component='main' maxWidth='xs'>\n      <Paper className={classes.paper} elevation={3}>\n        <Typography className={classes.header} component='h1' variant='h5'>\n          {isSignup ? 'Sign up' : 'Sign in'}\n        </Typography>\n        <form className={classes.form} onSubmit={handleSubmit}>\n          <Grid container spacing={2}>\n            {isSignup && (\n              <>\n                <Input\n                  name='firstName'\n                  label='First Name'\n                  handleChange={handleChange}\n                  autoFocus\n                  half\n                />\n                <Input\n                  name='lastName'\n                  label='Last Name'\n                  handleChange={handleChange}\n                  half\n                />\n              </>\n            )}\n            <Input\n              name='email'\n              label='Email Address'\n              handleChange={handleChange}\n              type='email'\n              InputProps={{\n                style: { fontSize: 12, fontFamily: 'Montserrat' },\n              }}\n              InputLabelProps={{\n                style: { fontSize: 12 },\n              }}\n            />\n            <Input\n              name='password'\n              label='Password'\n              handleChange={handleChange}\n              type={showPassword ? 'text' : 'password'}\n              handleShowPassword={handleShowPassword}\n              InputProps={{\n                style: { fontSize: 12 },\n              }}\n              InputLabelProps={{\n                style: { fontSize: 12 },\n              }}\n            />\n            {isSignup && (\n              <Input\n                name='confirmPassword'\n                label='Repeat Password'\n                handleChange={handleChange}\n                type='password'\n                InputProps={{\n                  style: { fontSize: 12 },\n                }}\n                InputLabelProps={{\n                  style: { fontSize: 12 },\n                }}\n              />\n            )}\n          </Grid>\n          <Button\n            type='submit'\n            fullWidth\n            color='primary'\n            variant='contained'\n            className={classes.submit}\n          >\n            {isSignup ? 'Sign Up' : 'Sign In'}\n          </Button>\n          <GoogleLogin\n            clientId={process.env.REACT_APP_GOOGLE_CLIENT_ID}\n            render={(renderProps) => (\n              <Button\n                className={classes.googleButton}\n                fullWidth\n                color='primary'\n                onClick={renderProps.onClick}\n                disabled={renderProps.disabled}\n                startIcon={<Icon />}\n                variant='contained'\n              >\n                Google Sign In\n              </Button>\n            )}\n            onSuccess={googleSuccess}\n            onFailure={googleError}\n            cookiePolicy='single_host_origin'\n          />\n          <Grid container justify='flex-end'>\n            <Grid item>\n              <Button onClick={switchMode} className={classes.button}>\n                {isSignup ? (\n                  <Typography\n                    className={classes.signup}\n                    onMouseOver={MouseOver}\n                    onMouseOut={MouseOut}\n                    component={Link}\n                    to='/auth'\n                  >\n                    Already have an account? Sign in\n                  </Typography>\n                ) : (\n                  <Typography\n                    className={classes.signup}\n                    onMouseOver={MouseOver}\n                    onMouseOut={MouseOut}\n                    component={Link}\n                    to='/auth'\n                  >\n                    {' '}\n                    Don't have an account? Sign Up\n                  </Typography>\n                )}\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n      </Paper>\n    </Container>\n  );\n};\n\nexport default SignUp;\n"]},"metadata":{},"sourceType":"module"}