{"ast":null,"code":"import _defineProperty from\"/Users/albertshay/Desktop/silkroad/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";// import React, { useEffect } from 'react';\n// import {\n//   Paper,\n//   Typography,\n//   CircularProgress,\n//   Divider,\n// } from '@material-ui/core/';\n// import { useDispatch, useSelector } from 'react-redux';\n// import moment from 'moment';\n// import { useParams, useHistory } from 'react-router-dom';\n// import CommentSection from './CommentSection';\n// import { getPost, getPostsBySearch } from '../../actions/posts';\n// import useStyles from './styles';\n// const Post = () => {\n//   const { post, posts, isLoading } = useSelector((state) => state.posts);\n//   const dispatch = useDispatch();\n//   const history = useHistory();\n//   const classes = useStyles();\n//   const { id } = useParams();\n//   // const recommendedPosts = posts.filter(({ _id }) => _id !== post._id);\n//   useEffect(() => {\n//     dispatch(getPost(id));\n//   }, [id]);\n//   useEffect(() => {\n//     if (post) {\n//       dispatch(\n//         getPostsBySearch({ search: 'none', tags: post?.tags.join(',') })\n//       );\n//     }\n//   }, [post]);\n//   if (!post) return null;\n//   const openPost = (_id) => history.push(`/posts/${_id}`);\n//   if (isLoading) {\n//     return (\n//       <Paper elevation={6} className={classes.loadingPaper}>\n//         <CircularProgress size='7em' />\n//       </Paper>\n//     );\n//   }\n//   const recommendedPosts = posts.filter(({ _id }) => _id !== post._id);\n//   return (\n//     <Paper style={{ padding: '20px', borderRadius: '15px' }} elevation={6}>\n//       <div className={classes.card}>\n//         <div className={classes.section}>\n//           <Typography variant='h3' component='h2'>\n//             {post.title}\n//           </Typography>\n//           <Typography\n//             gutterBottom\n//             variant='h6'\n//             color='textSecondary'\n//             component='h2'\n//           >\n//             {post.tags.map((tag) => `#${tag} `)}\n//           </Typography>\n//           <Typography gutterBottom variant='body1' component='p'>\n//             {post.message}\n//           </Typography>\n//           <Typography variant='h6'>Created by: {post.name}</Typography>\n//           <Typography variant='body1'>\n//             {moment(post.createdAt).fromNow()}\n//           </Typography>\n//           <Divider style={{ margin: '20px 0' }} />\n//           <CommentSection post={post} />\n//           <Divider style={{ margin: '20px 0' }} />\n//         </div>\n//         <div className={classes.imageSection}>\n//           <img\n//             className={classes.media}\n//             src={\n//               post.selectedFile ||\n//               'https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png'\n//             }\n//             alt={post.title}\n//           />\n//         </div>\n//       </div>\n//       {!!recommendedPosts.length && (\n//         <div className={classes.section}>\n//           <Typography gutterBottom variant='h5'>\n//             You might also like:\n//           </Typography>\n//           <Divider />\n//           <div className={classes.recommendedPosts}>\n//             {recommendedPosts.map(\n//               ({ title, name, message, likes, selectedFile, _id }) => (\n//                 <div\n//                   style={{ margin: '20px', cursor: 'pointer' }}\n//                   onClick={() => openPost(_id)}\n//                   key={_id}\n//                 >\n//                   <Typography gutterBottom variant='h6'>\n//                     {title}\n//                   </Typography>\n//                   <Typography gutterBottom variant='subtitle2'>\n//                     {name}\n//                   </Typography>\n//                   <Typography gutterBottom variant='subtitle2'>\n//                     {message}\n//                   </Typography>\n//                   <Typography gutterBottom variant='subtitle1'>\n//                     Likes: {likes.length}\n//                   </Typography>\n//                   <img src={selectedFile} width='200px' alt='placeholder' />\n//                 </div>\n//               )\n//             )}\n//           </div>\n//         </div>\n//       )}\n//     </Paper>\n//   );\n// };\n// export default Post;\nimport React,{useEffect}from'react';import{Paper,Typography,CircularProgress,Divider,Button}from'@material-ui/core/';import{useDispatch,useSelector}from'react-redux';import moment from'moment';import{useParams,useHistory}from'react-router-dom';import FavoriteBorderIcon from'@material-ui/icons/FavoriteBorder';import{getPost,getPostsBySearch}from'../../actions/posts';import CommentSection from'./CommentSection';import useStyles from'./styles';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Post=function Post(){var _post$tags2,_jsx2;var _useSelector=useSelector(function(state){return state.posts;}),post=_useSelector.post,posts=_useSelector.posts,isLoading=_useSelector.isLoading;var dispatch=useDispatch();var history=useHistory();var classes=useStyles();var _useParams=useParams(),id=_useParams.id;var user=JSON.parse(localStorage.getItem('profile'));useEffect(function(){dispatch(getPost(id));},[id]);useEffect(function(){if(post){var _post$tags;dispatch(getPostsBySearch({search:'none',tags:post===null||post===void 0?void 0:(_post$tags=post.tags)===null||_post$tags===void 0?void 0:_post$tags.join(',')}));}},[post]);if(!post)return null;var openPost=function openPost(_id){return history.push(\"/posts/\".concat(_id));};if(isLoading){return/*#__PURE__*/_jsx(Paper,{elevation:6,className:classes.loadingPaper,children:/*#__PURE__*/_jsx(CircularProgress,{size:\"7em\"})});}var recommendedPosts=posts.filter(function(_ref){var _id=_ref._id;return _id!==post._id;});return/*#__PURE__*/_jsxs(Paper,{style:{padding:'20px',borderRadius:'15px'},elevation:6,children:[/*#__PURE__*/_jsx(\"div\",{className:classes.card,children:/*#__PURE__*/_jsxs(\"div\",{className:classes.section,children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",component:\"h5\",className:classes.nameLabel,children:post.title}),/*#__PURE__*/_jsx(Typography,{gutterBottom:true,variant:\"h7\",className:classes.price// color='textSecondary'\n,component:\"h3\",fontFamily:\"Montserrat\",children:post===null||post===void 0?void 0:(_post$tags2=post.tags)===null||_post$tags2===void 0?void 0:_post$tags2.map(function(tag){return\"$\".concat(tag,\" \");})}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",className:classes.timeCreated,children:moment(post.createdAt).fromNow()}),/*#__PURE__*/_jsx(\"div\",{className:classes.imageSection,children:/*#__PURE__*/_jsx(\"img\",{className:classes.media,src:post.selectedFile||'https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png',alt:post.title})}),/*#__PURE__*/_jsx(Divider,{style:{margin:'10px 0'}}),/*#__PURE__*/_jsx(Typography,{gutterBottom:true,variant:\"body1\",component:\"p\",className:classes.postDetails,children:post.message}),/*#__PURE__*/_jsx(Typography,{gutterBottom:true,variant:\"body1\",component:\"p\",className:classes.postDetails,children:post.location}),/*#__PURE__*/_jsxs(Typography,{className:classes.hostedBy,children:[\"Hosted by: \",post.name]}),/*#__PURE__*/_jsx(Divider,{style:{margin:'20px 0'}}),/*#__PURE__*/_jsx(CommentSection,{post:post,className:classes.nameLabel}),/*#__PURE__*/_jsx(Divider,{style:{margin:'20px 0'}})]})}),!!recommendedPosts.length&&/*#__PURE__*/_jsxs(\"div\",{className:classes.section,children:[/*#__PURE__*/_jsx(Typography,(_jsx2={className:classes.alsoLike,gutterBottom:true,variant:\"h5\"},_defineProperty(_jsx2,\"className\",classes.nameLabel),_defineProperty(_jsx2,\"children\",\"You might also like:\"),_jsx2)),/*#__PURE__*/_jsx(Divider,{}),/*#__PURE__*/_jsx(\"div\",{className:classes.recommendedPosts,children:recommendedPosts.map(function(_ref2){var title=_ref2.title,name=_ref2.name,message=_ref2.message,likes=_ref2.likes,selectedFile=_ref2.selectedFile,_id=_ref2._id;return/*#__PURE__*/_jsxs(\"div\",{style:{margin:'20px',cursor:'pointer'},onClick:function onClick(){return openPost(_id);},children:[/*#__PURE__*/_jsx(Typography,{gutterBottom:true,variant:\"h6\",className:classes.alsoLike,children:title}),/*#__PURE__*/_jsx(Typography,{gutterBottom:true,variant:\"subtitle2\",className:classes.alsoLike,children:name}),/*#__PURE__*/_jsx(Typography,{gutterBottom:true,variant:\"subtitle2\",className:classes.alsoLike,children:message}),/*#__PURE__*/_jsxs(Typography,{className:classes.alsoLike,gutterBottom:true,variant:\"subtitle1\",children:[/*#__PURE__*/_jsx(FavoriteBorderIcon,{className:classes.likeIcon,alt:\": \".concat(likes===null||likes===void 0?void 0:likes.length)}),\"Likes: \",likes===null||likes===void 0?void 0:likes.length]}),/*#__PURE__*/_jsx(\"img\",{src:selectedFile,width:\"200px\",alt:\"placeholder\"})]},_id);})})]})]});};export default Post;","map":{"version":3,"sources":["/Users/albertshay/Desktop/silkroad/client/src/components/PostDetails/PostDetails.jsx"],"names":["React","useEffect","Paper","Typography","CircularProgress","Divider","Button","useDispatch","useSelector","moment","useParams","useHistory","FavoriteBorderIcon","getPost","getPostsBySearch","CommentSection","useStyles","Post","state","posts","post","isLoading","dispatch","history","classes","id","user","JSON","parse","localStorage","getItem","search","tags","join","openPost","_id","push","loadingPaper","recommendedPosts","filter","padding","borderRadius","card","section","nameLabel","title","price","map","tag","timeCreated","createdAt","fromNow","imageSection","media","selectedFile","margin","postDetails","message","location","hostedBy","name","length","alsoLike","likes","cursor","likeIcon"],"mappings":"kKAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OACEC,KADF,CAEEC,UAFF,CAGEC,gBAHF,CAIEC,OAJF,CAKEC,MALF,KAMO,oBANP,CAQA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,MAAOC,CAAAA,MAAP,KAAmB,QAAnB,CACA,OAASC,SAAT,CAAoBC,UAApB,KAAsC,kBAAtC,CACA,MAAOC,CAAAA,kBAAP,KAA+B,mCAA/B,CACA,OAASC,OAAT,CAAkBC,gBAAlB,KAA0C,qBAA1C,CACA,MAAOC,CAAAA,cAAP,KAA2B,kBAA3B,CACA,MAAOC,CAAAA,SAAP,KAAsB,UAAtB,C,wFAEA,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,EAAM,uBACjB,iBAAmCT,WAAW,CAAC,SAACU,KAAD,QAAWA,CAAAA,KAAK,CAACC,KAAjB,EAAD,CAA9C,CAAQC,IAAR,cAAQA,IAAR,CAAcD,KAAd,cAAcA,KAAd,CAAqBE,SAArB,cAAqBA,SAArB,CACA,GAAMC,CAAAA,QAAQ,CAAGf,WAAW,EAA5B,CACA,GAAMgB,CAAAA,OAAO,CAAGZ,UAAU,EAA1B,CACA,GAAMa,CAAAA,OAAO,CAAGR,SAAS,EAAzB,CACA,eAAeN,SAAS,EAAxB,CAAQe,EAAR,YAAQA,EAAR,CACA,GAAMC,CAAAA,IAAI,CAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,CAAb,CACA7B,SAAS,CAAC,UAAM,CACdqB,QAAQ,CAACT,OAAO,CAACY,EAAD,CAAR,CAAR,CACD,CAFQ,CAEN,CAACA,EAAD,CAFM,CAAT,CAIAxB,SAAS,CAAC,UAAM,CACd,GAAImB,IAAJ,CAAU,gBACRE,QAAQ,CACNR,gBAAgB,CAAC,CAAEiB,MAAM,CAAE,MAAV,CAAkBC,IAAI,CAAEZ,IAAF,SAAEA,IAAF,6BAAEA,IAAI,CAAEY,IAAR,qCAAE,WAAYC,IAAZ,CAAiB,GAAjB,CAAxB,CAAD,CADV,CAAR,CAGD,CACF,CANQ,CAMN,CAACb,IAAD,CANM,CAAT,CAQA,GAAI,CAACA,IAAL,CAAW,MAAO,KAAP,CAEX,GAAMc,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,GAAD,QAASZ,CAAAA,OAAO,CAACa,IAAR,kBAAuBD,GAAvB,EAAT,EAAjB,CAEA,GAAId,SAAJ,CAAe,CACb,mBACE,KAAC,KAAD,EAAO,SAAS,CAAE,CAAlB,CAAqB,SAAS,CAAEG,OAAO,CAACa,YAAxC,uBACE,KAAC,gBAAD,EAAkB,IAAI,CAAC,KAAvB,EADF,EADF,CAKD,CAED,GAAMC,CAAAA,gBAAgB,CAAGnB,KAAK,CAACoB,MAAN,CAAa,kBAAGJ,CAAAA,GAAH,MAAGA,GAAH,OAAaA,CAAAA,GAAG,GAAKf,IAAI,CAACe,GAA1B,EAAb,CAAzB,CAEA,mBACE,MAAC,KAAD,EAAO,KAAK,CAAE,CAAEK,OAAO,CAAE,MAAX,CAAmBC,YAAY,CAAE,MAAjC,CAAd,CAAyD,SAAS,CAAE,CAApE,wBACE,YAAK,SAAS,CAAEjB,OAAO,CAACkB,IAAxB,uBACE,aAAK,SAAS,CAAElB,OAAO,CAACmB,OAAxB,wBACE,KAAC,UAAD,EAAY,OAAO,CAAC,IAApB,CAAyB,SAAS,CAAC,IAAnC,CAAwC,SAAS,CAAEnB,OAAO,CAACoB,SAA3D,UACGxB,IAAI,CAACyB,KADR,EADF,cAIE,KAAC,UAAD,EACE,YAAY,KADd,CAEE,OAAO,CAAC,IAFV,CAGE,SAAS,CAAErB,OAAO,CAACsB,KACnB;AAJF,CAKE,SAAS,CAAC,IALZ,CAME,UAAU,CAAC,YANb,UAQG1B,IARH,SAQGA,IARH,8BAQGA,IAAI,CAAEY,IART,sCAQG,YAAYe,GAAZ,CAAgB,SAACC,GAAD,mBAAaA,GAAb,OAAhB,CARH,EAJF,cAeE,KAAC,UAAD,EAAY,OAAO,CAAC,OAApB,CAA4B,SAAS,CAAExB,OAAO,CAACyB,WAA/C,UACGxC,MAAM,CAACW,IAAI,CAAC8B,SAAN,CAAN,CAAuBC,OAAvB,EADH,EAfF,cAkBE,YAAK,SAAS,CAAE3B,OAAO,CAAC4B,YAAxB,uBACE,YACE,SAAS,CAAE5B,OAAO,CAAC6B,KADrB,CAEE,GAAG,CACDjC,IAAI,CAACkC,YAAL,EACA,oGAJJ,CAME,GAAG,CAAElC,IAAI,CAACyB,KANZ,EADF,EAlBF,cA4BE,KAAC,OAAD,EAAS,KAAK,CAAE,CAAEU,MAAM,CAAE,QAAV,CAAhB,EA5BF,cA6BE,KAAC,UAAD,EACE,YAAY,KADd,CAEE,OAAO,CAAC,OAFV,CAGE,SAAS,CAAC,GAHZ,CAIE,SAAS,CAAE/B,OAAO,CAACgC,WAJrB,UAMGpC,IAAI,CAACqC,OANR,EA7BF,cAqCE,KAAC,UAAD,EACE,YAAY,KADd,CAEE,OAAO,CAAC,OAFV,CAGE,SAAS,CAAC,GAHZ,CAIE,SAAS,CAAEjC,OAAO,CAACgC,WAJrB,UAMGpC,IAAI,CAACsC,QANR,EArCF,cA6CE,MAAC,UAAD,EAAY,SAAS,CAAElC,OAAO,CAACmC,QAA/B,yBACcvC,IAAI,CAACwC,IADnB,GA7CF,cAgDE,KAAC,OAAD,EAAS,KAAK,CAAE,CAAEL,MAAM,CAAE,QAAV,CAAhB,EAhDF,cAqDE,KAAC,cAAD,EAAgB,IAAI,CAAEnC,IAAtB,CAA4B,SAAS,CAAEI,OAAO,CAACoB,SAA/C,EArDF,cAsDE,KAAC,OAAD,EAAS,KAAK,CAAE,CAAEW,MAAM,CAAE,QAAV,CAAhB,EAtDF,GADF,EADF,CA2DG,CAAC,CAACjB,gBAAgB,CAACuB,MAAnB,eACC,aAAK,SAAS,CAAErC,OAAO,CAACmB,OAAxB,wBACE,KAAC,UAAD,SACE,SAAS,CAAEnB,OAAO,CAACsC,QADrB,CAEE,YAAY,KAFd,CAGE,OAAO,CAAC,IAHV,oCAIatC,OAAO,CAACoB,SAJrB,kEADF,cASE,KAAC,OAAD,IATF,cAUE,YAAK,SAAS,CAAEpB,OAAO,CAACc,gBAAxB,UACGA,gBAAgB,CAACS,GAAjB,CACC,mBAAGF,CAAAA,KAAH,OAAGA,KAAH,CAAUe,IAAV,OAAUA,IAAV,CAAgBH,OAAhB,OAAgBA,OAAhB,CAAyBM,KAAzB,OAAyBA,KAAzB,CAAgCT,YAAhC,OAAgCA,YAAhC,CAA8CnB,GAA9C,OAA8CA,GAA9C,oBACE,aACE,KAAK,CAAE,CAAEoB,MAAM,CAAE,MAAV,CAAkBS,MAAM,CAAE,SAA1B,CADT,CAEE,OAAO,CAAE,yBAAM9B,CAAAA,QAAQ,CAACC,GAAD,CAAd,EAFX,wBAKE,KAAC,UAAD,EACE,YAAY,KADd,CAEE,OAAO,CAAC,IAFV,CAGE,SAAS,CAAEX,OAAO,CAACsC,QAHrB,UAKGjB,KALH,EALF,cAYE,KAAC,UAAD,EACE,YAAY,KADd,CAEE,OAAO,CAAC,WAFV,CAGE,SAAS,CAAErB,OAAO,CAACsC,QAHrB,UAKGF,IALH,EAZF,cAmBE,KAAC,UAAD,EACE,YAAY,KADd,CAEE,OAAO,CAAC,WAFV,CAGE,SAAS,CAAEpC,OAAO,CAACsC,QAHrB,UAKGL,OALH,EAnBF,cA0BE,MAAC,UAAD,EACE,SAAS,CAAEjC,OAAO,CAACsC,QADrB,CAEE,YAAY,KAFd,CAGE,OAAO,CAAC,WAHV,wBAKE,KAAC,kBAAD,EACE,SAAS,CAAEtC,OAAO,CAACyC,QADrB,CAEE,GAAG,aAAOF,KAAP,SAAOA,KAAP,iBAAOA,KAAK,CAAEF,MAAd,CAFL,EALF,WASUE,KATV,SASUA,KATV,iBASUA,KAAK,CAAEF,MATjB,GA1BF,cAqCE,YAAK,GAAG,CAAEP,YAAV,CAAwB,KAAK,CAAC,OAA9B,CAAsC,GAAG,CAAC,aAA1C,EArCF,GAGOnB,GAHP,CADF,EADD,CADH,EAVF,GA5DJ,GADF,CAwHD,CAzJD,CA2JA,cAAelB,CAAAA,IAAf","sourcesContent":["// import React, { useEffect } from 'react';\n// import {\n//   Paper,\n//   Typography,\n//   CircularProgress,\n//   Divider,\n// } from '@material-ui/core/';\n// import { useDispatch, useSelector } from 'react-redux';\n// import moment from 'moment';\n// import { useParams, useHistory } from 'react-router-dom';\n// import CommentSection from './CommentSection';\n// import { getPost, getPostsBySearch } from '../../actions/posts';\n// import useStyles from './styles';\n\n// const Post = () => {\n//   const { post, posts, isLoading } = useSelector((state) => state.posts);\n//   const dispatch = useDispatch();\n//   const history = useHistory();\n//   const classes = useStyles();\n//   const { id } = useParams();\n//   // const recommendedPosts = posts.filter(({ _id }) => _id !== post._id);\n//   useEffect(() => {\n//     dispatch(getPost(id));\n//   }, [id]);\n\n//   useEffect(() => {\n//     if (post) {\n//       dispatch(\n//         getPostsBySearch({ search: 'none', tags: post?.tags.join(',') })\n//       );\n//     }\n//   }, [post]);\n\n//   if (!post) return null;\n\n//   const openPost = (_id) => history.push(`/posts/${_id}`);\n\n//   if (isLoading) {\n//     return (\n//       <Paper elevation={6} className={classes.loadingPaper}>\n//         <CircularProgress size='7em' />\n//       </Paper>\n//     );\n//   }\n//   const recommendedPosts = posts.filter(({ _id }) => _id !== post._id);\n//   return (\n//     <Paper style={{ padding: '20px', borderRadius: '15px' }} elevation={6}>\n//       <div className={classes.card}>\n//         <div className={classes.section}>\n//           <Typography variant='h3' component='h2'>\n//             {post.title}\n//           </Typography>\n//           <Typography\n//             gutterBottom\n//             variant='h6'\n//             color='textSecondary'\n//             component='h2'\n//           >\n//             {post.tags.map((tag) => `#${tag} `)}\n//           </Typography>\n//           <Typography gutterBottom variant='body1' component='p'>\n//             {post.message}\n//           </Typography>\n//           <Typography variant='h6'>Created by: {post.name}</Typography>\n//           <Typography variant='body1'>\n//             {moment(post.createdAt).fromNow()}\n//           </Typography>\n\n//           <Divider style={{ margin: '20px 0' }} />\n//           <CommentSection post={post} />\n//           <Divider style={{ margin: '20px 0' }} />\n//         </div>\n//         <div className={classes.imageSection}>\n//           <img\n//             className={classes.media}\n//             src={\n//               post.selectedFile ||\n//               'https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png'\n//             }\n//             alt={post.title}\n//           />\n//         </div>\n//       </div>\n//       {!!recommendedPosts.length && (\n//         <div className={classes.section}>\n//           <Typography gutterBottom variant='h5'>\n//             You might also like:\n//           </Typography>\n//           <Divider />\n//           <div className={classes.recommendedPosts}>\n//             {recommendedPosts.map(\n//               ({ title, name, message, likes, selectedFile, _id }) => (\n//                 <div\n//                   style={{ margin: '20px', cursor: 'pointer' }}\n//                   onClick={() => openPost(_id)}\n//                   key={_id}\n//                 >\n//                   <Typography gutterBottom variant='h6'>\n//                     {title}\n//                   </Typography>\n//                   <Typography gutterBottom variant='subtitle2'>\n//                     {name}\n//                   </Typography>\n//                   <Typography gutterBottom variant='subtitle2'>\n//                     {message}\n//                   </Typography>\n//                   <Typography gutterBottom variant='subtitle1'>\n//                     Likes: {likes.length}\n//                   </Typography>\n//                   <img src={selectedFile} width='200px' alt='placeholder' />\n//                 </div>\n//               )\n//             )}\n//           </div>\n//         </div>\n//       )}\n//     </Paper>\n//   );\n// };\n\n// export default Post;\n\nimport React, { useEffect } from 'react';\nimport {\n  Paper,\n  Typography,\n  CircularProgress,\n  Divider,\n  Button,\n} from '@material-ui/core/';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport moment from 'moment';\nimport { useParams, useHistory } from 'react-router-dom';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport { getPost, getPostsBySearch } from '../../actions/posts';\nimport CommentSection from './CommentSection';\nimport useStyles from './styles';\n\nconst Post = () => {\n  const { post, posts, isLoading } = useSelector((state) => state.posts);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const classes = useStyles();\n  const { id } = useParams();\n  const user = JSON.parse(localStorage.getItem('profile'));\n  useEffect(() => {\n    dispatch(getPost(id));\n  }, [id]);\n\n  useEffect(() => {\n    if (post) {\n      dispatch(\n        getPostsBySearch({ search: 'none', tags: post?.tags?.join(',') })\n      );\n    }\n  }, [post]);\n\n  if (!post) return null;\n\n  const openPost = (_id) => history.push(`/posts/${_id}`);\n\n  if (isLoading) {\n    return (\n      <Paper elevation={6} className={classes.loadingPaper}>\n        <CircularProgress size='7em' />\n      </Paper>\n    );\n  }\n\n  const recommendedPosts = posts.filter(({ _id }) => _id !== post._id);\n\n  return (\n    <Paper style={{ padding: '20px', borderRadius: '15px' }} elevation={6}>\n      <div className={classes.card}>\n        <div className={classes.section}>\n          <Typography variant='h6' component='h5' className={classes.nameLabel}>\n            {post.title}\n          </Typography>\n          <Typography\n            gutterBottom\n            variant='h7'\n            className={classes.price}\n            // color='textSecondary'\n            component='h3'\n            fontFamily='Montserrat'\n          >\n            {post?.tags?.map((tag) => `$${tag} `)}\n          </Typography>\n\n          <Typography variant='body1' className={classes.timeCreated}>\n            {moment(post.createdAt).fromNow()}\n          </Typography>\n          <div className={classes.imageSection}>\n            <img\n              className={classes.media}\n              src={\n                post.selectedFile ||\n                'https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png'\n              }\n              alt={post.title}\n            />\n          </div>\n          <Divider style={{ margin: '10px 0' }} />\n          <Typography\n            gutterBottom\n            variant='body1'\n            component='p'\n            className={classes.postDetails}\n          >\n            {post.message}\n          </Typography>\n          <Typography\n            gutterBottom\n            variant='body1'\n            component='p'\n            className={classes.postDetails}\n          >\n            {post.location}\n          </Typography>\n          <Typography className={classes.hostedBy}>\n            Hosted by: {post.name}\n          </Typography>\n          <Divider style={{ margin: '20px 0' }} />\n          {/* {(user?.result?.googleId === post?.creator ||\n            user?.result?._id === post?.creator) && (\n            <CommentSection post={post} className={classes.nameLabel} />\n            )}*/}\n          <CommentSection post={post} className={classes.nameLabel} />\n          <Divider style={{ margin: '20px 0' }} />\n        </div>\n      </div>\n      {!!recommendedPosts.length && (\n        <div className={classes.section}>\n          <Typography\n            className={classes.alsoLike}\n            gutterBottom\n            variant='h5'\n            className={classes.nameLabel}\n          >\n            You might also like:\n          </Typography>\n          <Divider />\n          <div className={classes.recommendedPosts}>\n            {recommendedPosts.map(\n              ({ title, name, message, likes, selectedFile, _id }) => (\n                <div\n                  style={{ margin: '20px', cursor: 'pointer' }}\n                  onClick={() => openPost(_id)}\n                  key={_id}\n                >\n                  <Typography\n                    gutterBottom\n                    variant='h6'\n                    className={classes.alsoLike}\n                  >\n                    {title}\n                  </Typography>\n                  <Typography\n                    gutterBottom\n                    variant='subtitle2'\n                    className={classes.alsoLike}\n                  >\n                    {name}\n                  </Typography>\n                  <Typography\n                    gutterBottom\n                    variant='subtitle2'\n                    className={classes.alsoLike}\n                  >\n                    {message}\n                  </Typography>\n                  <Typography\n                    className={classes.alsoLike}\n                    gutterBottom\n                    variant='subtitle1'\n                  >\n                    <FavoriteBorderIcon\n                      className={classes.likeIcon}\n                      alt={`: ${likes?.length}`}\n                    ></FavoriteBorderIcon>\n                    Likes: {likes?.length}\n                  </Typography>\n                  <img src={selectedFile} width='200px' alt='placeholder' />\n                </div>\n              )\n            )}\n          </div>\n        </div>\n      )}\n    </Paper>\n  );\n};\n\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}