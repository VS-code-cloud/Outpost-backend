{"ast":null,"code":"\"use strict\";\n\nconst {\n  h,\n  Component\n} = require('preact');\n\nconst classNames = require('classnames');\n\nconst {\n  nanoid\n} = require('nanoid');\n\nconst getFileTypeIcon = require('../../utils/getFileTypeIcon');\n\nconst ignoreEvent = require('../../utils/ignoreEvent.js');\n\nconst FilePreview = require('../FilePreview');\n\nclass FileCard extends Component {\n  constructor(props) {\n    super(props);\n    this.form = document.createElement('form');\n\n    this.updateMeta = (newVal, name) => {\n      this.setState(({\n        formState\n      }) => ({\n        formState: { ...formState,\n          [name]: newVal\n        }\n      }));\n    };\n\n    this.handleSave = e => {\n      e.preventDefault();\n      const fileID = this.props.fileCardFor;\n      this.props.saveFileCard(this.state.formState, fileID);\n    };\n\n    this.handleCancel = () => {\n      this.props.toggleFileCard(false);\n    };\n\n    this.saveOnEnter = ev => {\n      if (ev.keyCode === 13) {\n        ev.stopPropagation();\n        ev.preventDefault();\n        const file = this.props.files[this.props.fileCardFor];\n        this.props.saveFileCard(this.state.formState, file.id);\n      }\n    };\n\n    this.renderMetaFields = () => {\n      const metaFields = this.getMetaFields() || [];\n      const fieldCSSClasses = {\n        text: 'uppy-u-reset uppy-c-textInput uppy-Dashboard-FileCard-input'\n      };\n      return metaFields.map(field => {\n        const id = `uppy-Dashboard-FileCard-input-${field.id}`;\n        const required = this.props.requiredMetaFields.includes(field.id);\n        return h(\"fieldset\", {\n          key: field.id,\n          className: \"uppy-Dashboard-FileCard-fieldset\"\n        }, h(\"label\", {\n          className: \"uppy-Dashboard-FileCard-label\",\n          htmlFor: id\n        }, field.name), field.render !== undefined ? field.render({\n          value: this.state.formState[field.id],\n          onChange: newVal => this.updateMeta(newVal, field.id),\n          fieldCSSClasses,\n          required,\n          form: this.form.id\n        }, h) : h(\"input\", {\n          className: fieldCSSClasses.text,\n          id: id,\n          form: this.form.id,\n          type: field.type || 'text',\n          required: required,\n          value: this.state.formState[field.id],\n          placeholder: field.placeholder // If `form` attribute is not supported, we need to capture pressing Enter to avoid bubbling in case Uppy is\n          // embedded inside a <form>.\n          ,\n          onKeyUp: 'form' in HTMLInputElement.prototype ? undefined : this.saveOnEnter,\n          onKeyDown: 'form' in HTMLInputElement.prototype ? undefined : this.saveOnEnter,\n          onKeyPress: 'form' in HTMLInputElement.prototype ? undefined : this.saveOnEnter,\n          onInput: ev => this.updateMeta(ev.target.value, field.id),\n          \"data-uppy-super-focusable\": true\n        }));\n      });\n    };\n\n    const _file = this.props.files[this.props.fileCardFor];\n\n    const _metaFields = this.getMetaFields() || [];\n\n    const storedMetaData = {};\n\n    _metaFields.forEach(field => {\n      storedMetaData[field.id] = _file.meta[field.id] || '';\n    });\n\n    this.state = {\n      formState: storedMetaData\n    };\n    this.form.id = nanoid();\n  } // TODO(aduh95): move this to `UNSAFE_componentWillMount` when updating to Preact X+.\n\n\n  componentWillMount() {\n    // eslint-disable-line react/no-deprecated\n    this.form.addEventListener('submit', this.handleSave);\n    document.body.appendChild(this.form);\n  }\n\n  componentWillUnmount() {\n    this.form.removeEventListener('submit', this.handleSave);\n    document.body.removeChild(this.form);\n  }\n\n  getMetaFields() {\n    return typeof this.props.metaFields === 'function' ? this.props.metaFields(this.props.files[this.props.fileCardFor]) : this.props.metaFields;\n  }\n\n  render() {\n    const file = this.props.files[this.props.fileCardFor];\n    const showEditButton = this.props.canEditFile(file);\n    return h(\"div\", {\n      className: classNames('uppy-Dashboard-FileCard', this.props.className),\n      \"data-uppy-panelType\": \"FileCard\",\n      onDragOver: ignoreEvent,\n      onDragLeave: ignoreEvent,\n      onDrop: ignoreEvent,\n      onPaste: ignoreEvent\n    }, h(\"div\", {\n      className: \"uppy-DashboardContent-bar\"\n    }, h(\"div\", {\n      className: \"uppy-DashboardContent-title\",\n      role: \"heading\",\n      \"aria-level\": \"1\"\n    }, this.props.i18nArray('editing', {\n      file: h(\"span\", {\n        className: \"uppy-DashboardContent-titleFile\"\n      }, file.meta ? file.meta.name : file.name)\n    })), h(\"button\", {\n      className: \"uppy-DashboardContent-back\",\n      type: \"button\",\n      form: this.form.id,\n      title: this.props.i18n('finishEditingFile'),\n      onClick: this.handleCancel\n    }, this.props.i18n('cancel'))), h(\"div\", {\n      className: \"uppy-Dashboard-FileCard-inner\"\n    }, h(\"div\", {\n      className: \"uppy-Dashboard-FileCard-preview\",\n      style: {\n        backgroundColor: getFileTypeIcon(file.type).color\n      }\n    }, h(FilePreview, {\n      file: file\n    }), showEditButton && h(\"button\", {\n      type: \"button\",\n      className: \"uppy-u-reset uppy-c-btn uppy-Dashboard-FileCard-edit\",\n      onClick: () => this.props.openFileEditor(file),\n      form: this.form.id\n    }, this.props.i18n('editFile'))), h(\"div\", {\n      className: \"uppy-Dashboard-FileCard-info\"\n    }, this.renderMetaFields()), h(\"div\", {\n      className: \"uppy-Dashboard-FileCard-actions\"\n    }, h(\"button\", {\n      className: \"uppy-u-reset uppy-c-btn uppy-c-btn-primary uppy-Dashboard-FileCard-actionsBtn\" // If `form` attribute is supported, we want a submit button to trigger the form validation.\n      // Otherwise, fallback to a classic button with a onClick event handler.\n      ,\n      type: 'form' in HTMLButtonElement.prototype ? 'submit' : 'button',\n      onClick: 'form' in HTMLButtonElement.prototype ? undefined : this.handleSave,\n      form: this.form.id\n    }, this.props.i18n('saveChanges')), h(\"button\", {\n      className: \"uppy-u-reset uppy-c-btn uppy-c-btn-link uppy-Dashboard-FileCard-actionsBtn\",\n      type: \"button\",\n      onClick: this.handleCancel,\n      form: this.form.id\n    }, this.props.i18n('cancel')))));\n  }\n\n}\n\nmodule.exports = FileCard;","map":{"version":3,"sources":["/Users/albertshay/Desktop/silkroad/client/node_modules/@uppy/dashboard/lib/components/FileCard/index.js"],"names":["h","Component","require","classNames","nanoid","getFileTypeIcon","ignoreEvent","FilePreview","FileCard","constructor","props","form","document","createElement","updateMeta","newVal","name","setState","formState","handleSave","e","preventDefault","fileID","fileCardFor","saveFileCard","state","handleCancel","toggleFileCard","saveOnEnter","ev","keyCode","stopPropagation","file","files","id","renderMetaFields","metaFields","getMetaFields","fieldCSSClasses","text","map","field","required","requiredMetaFields","includes","key","className","htmlFor","render","undefined","value","onChange","type","placeholder","onKeyUp","HTMLInputElement","prototype","onKeyDown","onKeyPress","onInput","target","_file","_metaFields","storedMetaData","forEach","meta","componentWillMount","addEventListener","body","appendChild","componentWillUnmount","removeEventListener","removeChild","showEditButton","canEditFile","onDragOver","onDragLeave","onDrop","onPaste","role","i18nArray","title","i18n","onClick","style","backgroundColor","color","openFileEditor","HTMLButtonElement","module","exports"],"mappings":"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","sourcesContent":["\"use strict\";\n\nconst {\n  h,\n  Component\n} = require('preact');\n\nconst classNames = require('classnames');\n\nconst {\n  nanoid\n} = require('nanoid');\n\nconst getFileTypeIcon = require('../../utils/getFileTypeIcon');\n\nconst ignoreEvent = require('../../utils/ignoreEvent.js');\n\nconst FilePreview = require('../FilePreview');\n\nclass FileCard extends Component {\n  constructor(props) {\n    super(props);\n    this.form = document.createElement('form');\n\n    this.updateMeta = (newVal, name) => {\n      this.setState(({\n        formState\n      }) => ({\n        formState: { ...formState,\n          [name]: newVal\n        }\n      }));\n    };\n\n    this.handleSave = e => {\n      e.preventDefault();\n      const fileID = this.props.fileCardFor;\n      this.props.saveFileCard(this.state.formState, fileID);\n    };\n\n    this.handleCancel = () => {\n      this.props.toggleFileCard(false);\n    };\n\n    this.saveOnEnter = ev => {\n      if (ev.keyCode === 13) {\n        ev.stopPropagation();\n        ev.preventDefault();\n        const file = this.props.files[this.props.fileCardFor];\n        this.props.saveFileCard(this.state.formState, file.id);\n      }\n    };\n\n    this.renderMetaFields = () => {\n      const metaFields = this.getMetaFields() || [];\n      const fieldCSSClasses = {\n        text: 'uppy-u-reset uppy-c-textInput uppy-Dashboard-FileCard-input'\n      };\n      return metaFields.map(field => {\n        const id = `uppy-Dashboard-FileCard-input-${field.id}`;\n        const required = this.props.requiredMetaFields.includes(field.id);\n        return h(\"fieldset\", {\n          key: field.id,\n          className: \"uppy-Dashboard-FileCard-fieldset\"\n        }, h(\"label\", {\n          className: \"uppy-Dashboard-FileCard-label\",\n          htmlFor: id\n        }, field.name), field.render !== undefined ? field.render({\n          value: this.state.formState[field.id],\n          onChange: newVal => this.updateMeta(newVal, field.id),\n          fieldCSSClasses,\n          required,\n          form: this.form.id\n        }, h) : h(\"input\", {\n          className: fieldCSSClasses.text,\n          id: id,\n          form: this.form.id,\n          type: field.type || 'text',\n          required: required,\n          value: this.state.formState[field.id],\n          placeholder: field.placeholder // If `form` attribute is not supported, we need to capture pressing Enter to avoid bubbling in case Uppy is\n          // embedded inside a <form>.\n          ,\n          onKeyUp: 'form' in HTMLInputElement.prototype ? undefined : this.saveOnEnter,\n          onKeyDown: 'form' in HTMLInputElement.prototype ? undefined : this.saveOnEnter,\n          onKeyPress: 'form' in HTMLInputElement.prototype ? undefined : this.saveOnEnter,\n          onInput: ev => this.updateMeta(ev.target.value, field.id),\n          \"data-uppy-super-focusable\": true\n        }));\n      });\n    };\n\n    const _file = this.props.files[this.props.fileCardFor];\n\n    const _metaFields = this.getMetaFields() || [];\n\n    const storedMetaData = {};\n\n    _metaFields.forEach(field => {\n      storedMetaData[field.id] = _file.meta[field.id] || '';\n    });\n\n    this.state = {\n      formState: storedMetaData\n    };\n    this.form.id = nanoid();\n  } // TODO(aduh95): move this to `UNSAFE_componentWillMount` when updating to Preact X+.\n\n\n  componentWillMount() {\n    // eslint-disable-line react/no-deprecated\n    this.form.addEventListener('submit', this.handleSave);\n    document.body.appendChild(this.form);\n  }\n\n  componentWillUnmount() {\n    this.form.removeEventListener('submit', this.handleSave);\n    document.body.removeChild(this.form);\n  }\n\n  getMetaFields() {\n    return typeof this.props.metaFields === 'function' ? this.props.metaFields(this.props.files[this.props.fileCardFor]) : this.props.metaFields;\n  }\n\n  render() {\n    const file = this.props.files[this.props.fileCardFor];\n    const showEditButton = this.props.canEditFile(file);\n    return h(\"div\", {\n      className: classNames('uppy-Dashboard-FileCard', this.props.className),\n      \"data-uppy-panelType\": \"FileCard\",\n      onDragOver: ignoreEvent,\n      onDragLeave: ignoreEvent,\n      onDrop: ignoreEvent,\n      onPaste: ignoreEvent\n    }, h(\"div\", {\n      className: \"uppy-DashboardContent-bar\"\n    }, h(\"div\", {\n      className: \"uppy-DashboardContent-title\",\n      role: \"heading\",\n      \"aria-level\": \"1\"\n    }, this.props.i18nArray('editing', {\n      file: h(\"span\", {\n        className: \"uppy-DashboardContent-titleFile\"\n      }, file.meta ? file.meta.name : file.name)\n    })), h(\"button\", {\n      className: \"uppy-DashboardContent-back\",\n      type: \"button\",\n      form: this.form.id,\n      title: this.props.i18n('finishEditingFile'),\n      onClick: this.handleCancel\n    }, this.props.i18n('cancel'))), h(\"div\", {\n      className: \"uppy-Dashboard-FileCard-inner\"\n    }, h(\"div\", {\n      className: \"uppy-Dashboard-FileCard-preview\",\n      style: {\n        backgroundColor: getFileTypeIcon(file.type).color\n      }\n    }, h(FilePreview, {\n      file: file\n    }), showEditButton && h(\"button\", {\n      type: \"button\",\n      className: \"uppy-u-reset uppy-c-btn uppy-Dashboard-FileCard-edit\",\n      onClick: () => this.props.openFileEditor(file),\n      form: this.form.id\n    }, this.props.i18n('editFile'))), h(\"div\", {\n      className: \"uppy-Dashboard-FileCard-info\"\n    }, this.renderMetaFields()), h(\"div\", {\n      className: \"uppy-Dashboard-FileCard-actions\"\n    }, h(\"button\", {\n      className: \"uppy-u-reset uppy-c-btn uppy-c-btn-primary uppy-Dashboard-FileCard-actionsBtn\" // If `form` attribute is supported, we want a submit button to trigger the form validation.\n      // Otherwise, fallback to a classic button with a onClick event handler.\n      ,\n      type: 'form' in HTMLButtonElement.prototype ? 'submit' : 'button',\n      onClick: 'form' in HTMLButtonElement.prototype ? undefined : this.handleSave,\n      form: this.form.id\n    }, this.props.i18n('saveChanges')), h(\"button\", {\n      className: \"uppy-u-reset uppy-c-btn uppy-c-btn-link uppy-Dashboard-FileCard-actionsBtn\",\n      type: \"button\",\n      onClick: this.handleCancel,\n      form: this.form.id\n    }, this.props.i18n('cancel')))));\n  }\n\n}\n\nmodule.exports = FileCard;"]},"metadata":{},"sourceType":"script"}