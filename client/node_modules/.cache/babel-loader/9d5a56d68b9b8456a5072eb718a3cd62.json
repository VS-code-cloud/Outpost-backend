{"ast":null,"code":"\"use strict\";\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n/* eslint-disable jsx-a11y/media-has-caption */\n\n\nconst {\n  h,\n  Component\n} = require('preact');\n\nconst SnapshotButton = require('./SnapshotButton');\n\nconst RecordButton = require('./RecordButton');\n\nconst RecordingLength = require('./RecordingLength');\n\nconst VideoSourceSelect = require('./VideoSourceSelect');\n\nconst SubmitButton = require('./SubmitButton');\n\nconst DiscardButton = require('./DiscardButton');\n\nfunction isModeAvailable(modes, mode) {\n  return modes.indexOf(mode) !== -1;\n}\n\nclass CameraScreen extends Component {\n  componentDidMount() {\n    const {\n      onFocus\n    } = this.props;\n    onFocus();\n  }\n\n  componentWillUnmount() {\n    const {\n      onStop\n    } = this.props;\n    onStop();\n  }\n\n  render() {\n    const {\n      src,\n      recordedVideo,\n      recording,\n      modes,\n      supportsRecording,\n      videoSources,\n      showVideoSourceDropdown,\n      showRecordingLength,\n      onSubmit,\n      i18n,\n      mirror,\n      onSnapshot,\n      onStartRecording,\n      onStopRecording,\n      onDiscardRecordedVideo,\n      recordingLengthSeconds\n    } = this.props;\n    const hasRecordedVideo = !!recordedVideo;\n    const shouldShowRecordButton = !hasRecordedVideo && supportsRecording && (isModeAvailable(modes, 'video-only') || isModeAvailable(modes, 'audio-only') || isModeAvailable(modes, 'video-audio'));\n    const shouldShowSnapshotButton = !hasRecordedVideo && isModeAvailable(modes, 'picture');\n    const shouldShowRecordingLength = supportsRecording && showRecordingLength;\n    const shouldShowVideoSourceDropdown = showVideoSourceDropdown && videoSources && videoSources.length > 1;\n    const videoProps = {\n      playsinline: true\n    };\n\n    if (recordedVideo) {\n      videoProps.muted = false;\n      videoProps.controls = true;\n      videoProps.src = recordedVideo; // reset srcObject in dom. If not resetted, stream sticks in element\n\n      if (this.videoElement) {\n        this.videoElement.srcObject = undefined;\n      }\n    } else {\n      videoProps.muted = true;\n      videoProps.autoplay = true;\n      videoProps.srcObject = src;\n    }\n\n    return h(\"div\", {\n      className: \"uppy uppy-Webcam-container\"\n    }, h(\"div\", {\n      className: \"uppy-Webcam-videoContainer\"\n    }, h(\"video\", _extends({\n      /* eslint-disable-next-line no-return-assign */\n      ref: videoElement => this.videoElement = videoElement,\n      className: `uppy-Webcam-video  ${mirror ? 'uppy-Webcam-video--mirrored' : ''}`\n      /* eslint-disable-next-line react/jsx-props-no-spreading */\n\n    }, videoProps))), h(\"div\", {\n      className: \"uppy-Webcam-footer\"\n    }, h(\"div\", {\n      className: \"uppy-Webcam-videoSourceContainer\"\n    }, shouldShowVideoSourceDropdown ? VideoSourceSelect(this.props) : null), h(\"div\", {\n      className: \"uppy-Webcam-buttonContainer\"\n    }, shouldShowSnapshotButton && h(SnapshotButton, {\n      onSnapshot: onSnapshot,\n      i18n: i18n\n    }), shouldShowRecordButton && h(RecordButton, {\n      recording: recording,\n      onStartRecording: onStartRecording,\n      onStopRecording: onStopRecording,\n      i18n: i18n\n    }), hasRecordedVideo && h(SubmitButton, {\n      onSubmit: onSubmit,\n      i18n: i18n\n    }), hasRecordedVideo && h(DiscardButton, {\n      onDiscard: onDiscardRecordedVideo,\n      i18n: i18n\n    })), shouldShowRecordingLength && h(\"div\", {\n      className: \"uppy-Webcam-recordingLength\"\n    }, h(RecordingLength, {\n      recordingLengthSeconds: recordingLengthSeconds,\n      i18n: i18n\n    }))));\n  }\n\n}\n\nmodule.exports = CameraScreen;","map":{"version":3,"sources":["/Users/albertshay/Desktop/silkroad/client/node_modules/@uppy/webcam/lib/CameraScreen.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","h","Component","require","SnapshotButton","RecordButton","RecordingLength","VideoSourceSelect","SubmitButton","DiscardButton","isModeAvailable","modes","mode","indexOf","CameraScreen","componentDidMount","onFocus","props","componentWillUnmount","onStop","render","src","recordedVideo","recording","supportsRecording","videoSources","showVideoSourceDropdown","showRecordingLength","onSubmit","i18n","mirror","onSnapshot","onStartRecording","onStopRecording","onDiscardRecordedVideo","recordingLengthSeconds","hasRecordedVideo","shouldShowRecordButton","shouldShowSnapshotButton","shouldShowRecordingLength","shouldShowVideoSourceDropdown","videoProps","playsinline","muted","controls","videoElement","srcObject","undefined","autoplay","className","ref","onDiscard","module","exports"],"mappings":"AAAA;;AAEA,SAASA,QAAT,GAAoB;AAAEA,EAAAA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAAUC,MAAV,EAAkB;AAAE,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,UAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAtB;;AAA2B,WAAK,IAAII,GAAT,IAAgBD,MAAhB,EAAwB;AAAE,YAAIN,MAAM,CAACQ,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCJ,MAArC,EAA6CC,GAA7C,CAAJ,EAAuD;AAAEL,UAAAA,MAAM,CAACK,GAAD,CAAN,GAAcD,MAAM,CAACC,GAAD,CAApB;AAA4B;AAAE;AAAE;;AAAC,WAAOL,MAAP;AAAgB,GAA5P;;AAA8P,SAAOH,QAAQ,CAACY,KAAT,CAAe,IAAf,EAAqBP,SAArB,CAAP;AAAyC;AAE7T;;;AACA,MAAM;AACJQ,EAAAA,CADI;AAEJC,EAAAA;AAFI,IAGFC,OAAO,CAAC,QAAD,CAHX;;AAKA,MAAMC,cAAc,GAAGD,OAAO,CAAC,kBAAD,CAA9B;;AAEA,MAAME,YAAY,GAAGF,OAAO,CAAC,gBAAD,CAA5B;;AAEA,MAAMG,eAAe,GAAGH,OAAO,CAAC,mBAAD,CAA/B;;AAEA,MAAMI,iBAAiB,GAAGJ,OAAO,CAAC,qBAAD,CAAjC;;AAEA,MAAMK,YAAY,GAAGL,OAAO,CAAC,gBAAD,CAA5B;;AAEA,MAAMM,aAAa,GAAGN,OAAO,CAAC,iBAAD,CAA7B;;AAEA,SAASO,eAAT,CAAyBC,KAAzB,EAAgCC,IAAhC,EAAsC;AACpC,SAAOD,KAAK,CAACE,OAAN,CAAcD,IAAd,MAAwB,CAAC,CAAhC;AACD;;AAED,MAAME,YAAN,SAA2BZ,SAA3B,CAAqC;AACnCa,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AACJC,MAAAA;AADI,QAEF,KAAKC,KAFT;AAGAD,IAAAA,OAAO;AACR;;AAEDE,EAAAA,oBAAoB,GAAG;AACrB,UAAM;AACJC,MAAAA;AADI,QAEF,KAAKF,KAFT;AAGAE,IAAAA,MAAM;AACP;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AACJC,MAAAA,GADI;AAEJC,MAAAA,aAFI;AAGJC,MAAAA,SAHI;AAIJZ,MAAAA,KAJI;AAKJa,MAAAA,iBALI;AAMJC,MAAAA,YANI;AAOJC,MAAAA,uBAPI;AAQJC,MAAAA,mBARI;AASJC,MAAAA,QATI;AAUJC,MAAAA,IAVI;AAWJC,MAAAA,MAXI;AAYJC,MAAAA,UAZI;AAaJC,MAAAA,gBAbI;AAcJC,MAAAA,eAdI;AAeJC,MAAAA,sBAfI;AAgBJC,MAAAA;AAhBI,QAiBF,KAAKlB,KAjBT;AAkBA,UAAMmB,gBAAgB,GAAG,CAAC,CAACd,aAA3B;AACA,UAAMe,sBAAsB,GAAG,CAACD,gBAAD,IAAqBZ,iBAArB,KAA2Cd,eAAe,CAACC,KAAD,EAAQ,YAAR,CAAf,IAAwCD,eAAe,CAACC,KAAD,EAAQ,YAAR,CAAvD,IAAgFD,eAAe,CAACC,KAAD,EAAQ,aAAR,CAA1I,CAA/B;AACA,UAAM2B,wBAAwB,GAAG,CAACF,gBAAD,IAAqB1B,eAAe,CAACC,KAAD,EAAQ,SAAR,CAArE;AACA,UAAM4B,yBAAyB,GAAGf,iBAAiB,IAAIG,mBAAvD;AACA,UAAMa,6BAA6B,GAAGd,uBAAuB,IAAID,YAA3B,IAA2CA,YAAY,CAAC/B,MAAb,GAAsB,CAAvG;AACA,UAAM+C,UAAU,GAAG;AACjBC,MAAAA,WAAW,EAAE;AADI,KAAnB;;AAIA,QAAIpB,aAAJ,EAAmB;AACjBmB,MAAAA,UAAU,CAACE,KAAX,GAAmB,KAAnB;AACAF,MAAAA,UAAU,CAACG,QAAX,GAAsB,IAAtB;AACAH,MAAAA,UAAU,CAACpB,GAAX,GAAiBC,aAAjB,CAHiB,CAGe;;AAEhC,UAAI,KAAKuB,YAAT,EAAuB;AACrB,aAAKA,YAAL,CAAkBC,SAAlB,GAA8BC,SAA9B;AACD;AACF,KARD,MAQO;AACLN,MAAAA,UAAU,CAACE,KAAX,GAAmB,IAAnB;AACAF,MAAAA,UAAU,CAACO,QAAX,GAAsB,IAAtB;AACAP,MAAAA,UAAU,CAACK,SAAX,GAAuBzB,GAAvB;AACD;;AAED,WAAOpB,CAAC,CAAC,KAAD,EAAQ;AACdgD,MAAAA,SAAS,EAAE;AADG,KAAR,EAELhD,CAAC,CAAC,KAAD,EAAQ;AACVgD,MAAAA,SAAS,EAAE;AADD,KAAR,EAEDhD,CAAC,CAAC,OAAD,EAAUb,QAAQ,CAAC;AACrB;AACA8D,MAAAA,GAAG,EAAEL,YAAY,IAAI,KAAKA,YAAL,GAAoBA,YAFpB;AAGrBI,MAAAA,SAAS,EAAG,sBAAqBnB,MAAM,GAAG,6BAAH,GAAmC,EAAG;AAC7E;;AAJqB,KAAD,EAMnBW,UANmB,CAAlB,CAFA,CAFI,EAUUxC,CAAC,CAAC,KAAD,EAAQ;AACzBgD,MAAAA,SAAS,EAAE;AADc,KAAR,EAEhBhD,CAAC,CAAC,KAAD,EAAQ;AACVgD,MAAAA,SAAS,EAAE;AADD,KAAR,EAEDT,6BAA6B,GAAGjC,iBAAiB,CAAC,KAAKU,KAAN,CAApB,GAAmC,IAF/D,CAFe,EAIuDhB,CAAC,CAAC,KAAD,EAAQ;AACjFgD,MAAAA,SAAS,EAAE;AADsE,KAAR,EAExEX,wBAAwB,IAAIrC,CAAC,CAACG,cAAD,EAAiB;AAC/C2B,MAAAA,UAAU,EAAEA,UADmC;AAE/CF,MAAAA,IAAI,EAAEA;AAFyC,KAAjB,CAF2C,EAKvEQ,sBAAsB,IAAIpC,CAAC,CAACI,YAAD,EAAe;AAC5CkB,MAAAA,SAAS,EAAEA,SADiC;AAE5CS,MAAAA,gBAAgB,EAAEA,gBAF0B;AAG5CC,MAAAA,eAAe,EAAEA,eAH2B;AAI5CJ,MAAAA,IAAI,EAAEA;AAJsC,KAAf,CAL4C,EAUvEO,gBAAgB,IAAInC,CAAC,CAACO,YAAD,EAAe;AACtCoB,MAAAA,QAAQ,EAAEA,QAD4B;AAEtCC,MAAAA,IAAI,EAAEA;AAFgC,KAAf,CAVkD,EAavEO,gBAAgB,IAAInC,CAAC,CAACQ,aAAD,EAAgB;AACvC0C,MAAAA,SAAS,EAAEjB,sBAD4B;AAEvCL,MAAAA,IAAI,EAAEA;AAFiC,KAAhB,CAbkD,CAJxD,EAoBdU,yBAAyB,IAAItC,CAAC,CAAC,KAAD,EAAQ;AACzCgD,MAAAA,SAAS,EAAE;AAD8B,KAAR,EAEhChD,CAAC,CAACK,eAAD,EAAkB;AACpB6B,MAAAA,sBAAsB,EAAEA,sBADJ;AAEpBN,MAAAA,IAAI,EAAEA;AAFc,KAAlB,CAF+B,CApBhB,CAVX,CAAR;AAoCD;;AA7FkC;;AAiGrCuB,MAAM,CAACC,OAAP,GAAiBvC,YAAjB","sourcesContent":["\"use strict\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n/* eslint-disable jsx-a11y/media-has-caption */\nconst {\n  h,\n  Component\n} = require('preact');\n\nconst SnapshotButton = require('./SnapshotButton');\n\nconst RecordButton = require('./RecordButton');\n\nconst RecordingLength = require('./RecordingLength');\n\nconst VideoSourceSelect = require('./VideoSourceSelect');\n\nconst SubmitButton = require('./SubmitButton');\n\nconst DiscardButton = require('./DiscardButton');\n\nfunction isModeAvailable(modes, mode) {\n  return modes.indexOf(mode) !== -1;\n}\n\nclass CameraScreen extends Component {\n  componentDidMount() {\n    const {\n      onFocus\n    } = this.props;\n    onFocus();\n  }\n\n  componentWillUnmount() {\n    const {\n      onStop\n    } = this.props;\n    onStop();\n  }\n\n  render() {\n    const {\n      src,\n      recordedVideo,\n      recording,\n      modes,\n      supportsRecording,\n      videoSources,\n      showVideoSourceDropdown,\n      showRecordingLength,\n      onSubmit,\n      i18n,\n      mirror,\n      onSnapshot,\n      onStartRecording,\n      onStopRecording,\n      onDiscardRecordedVideo,\n      recordingLengthSeconds\n    } = this.props;\n    const hasRecordedVideo = !!recordedVideo;\n    const shouldShowRecordButton = !hasRecordedVideo && supportsRecording && (isModeAvailable(modes, 'video-only') || isModeAvailable(modes, 'audio-only') || isModeAvailable(modes, 'video-audio'));\n    const shouldShowSnapshotButton = !hasRecordedVideo && isModeAvailable(modes, 'picture');\n    const shouldShowRecordingLength = supportsRecording && showRecordingLength;\n    const shouldShowVideoSourceDropdown = showVideoSourceDropdown && videoSources && videoSources.length > 1;\n    const videoProps = {\n      playsinline: true\n    };\n\n    if (recordedVideo) {\n      videoProps.muted = false;\n      videoProps.controls = true;\n      videoProps.src = recordedVideo; // reset srcObject in dom. If not resetted, stream sticks in element\n\n      if (this.videoElement) {\n        this.videoElement.srcObject = undefined;\n      }\n    } else {\n      videoProps.muted = true;\n      videoProps.autoplay = true;\n      videoProps.srcObject = src;\n    }\n\n    return h(\"div\", {\n      className: \"uppy uppy-Webcam-container\"\n    }, h(\"div\", {\n      className: \"uppy-Webcam-videoContainer\"\n    }, h(\"video\", _extends({\n      /* eslint-disable-next-line no-return-assign */\n      ref: videoElement => this.videoElement = videoElement,\n      className: `uppy-Webcam-video  ${mirror ? 'uppy-Webcam-video--mirrored' : ''}`\n      /* eslint-disable-next-line react/jsx-props-no-spreading */\n\n    }, videoProps))), h(\"div\", {\n      className: \"uppy-Webcam-footer\"\n    }, h(\"div\", {\n      className: \"uppy-Webcam-videoSourceContainer\"\n    }, shouldShowVideoSourceDropdown ? VideoSourceSelect(this.props) : null), h(\"div\", {\n      className: \"uppy-Webcam-buttonContainer\"\n    }, shouldShowSnapshotButton && h(SnapshotButton, {\n      onSnapshot: onSnapshot,\n      i18n: i18n\n    }), shouldShowRecordButton && h(RecordButton, {\n      recording: recording,\n      onStartRecording: onStartRecording,\n      onStopRecording: onStopRecording,\n      i18n: i18n\n    }), hasRecordedVideo && h(SubmitButton, {\n      onSubmit: onSubmit,\n      i18n: i18n\n    }), hasRecordedVideo && h(DiscardButton, {\n      onDiscard: onDiscardRecordedVideo,\n      i18n: i18n\n    })), shouldShowRecordingLength && h(\"div\", {\n      className: \"uppy-Webcam-recordingLength\"\n    }, h(RecordingLength, {\n      recordingLengthSeconds: recordingLengthSeconds,\n      i18n: i18n\n    }))));\n  }\n\n}\n\nmodule.exports = CameraScreen;"]},"metadata":{},"sourceType":"script"}