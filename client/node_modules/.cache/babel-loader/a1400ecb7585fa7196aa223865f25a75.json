{"ast":null,"code":"\"use strict\";\n\nconst {\n  h\n} = require('preact');\n\nconst uploadStates = {\n  STATE_ERROR: 'error',\n  STATE_WAITING: 'waiting',\n  STATE_PREPROCESSING: 'preprocessing',\n  STATE_UPLOADING: 'uploading',\n  STATE_POSTPROCESSING: 'postprocessing',\n  STATE_COMPLETE: 'complete',\n  STATE_PAUSED: 'paused'\n};\n\nfunction getUploadingState(isAllErrored, isAllComplete, isAllPaused, files = {}) {\n  if (isAllErrored) {\n    return uploadStates.STATE_ERROR;\n  }\n\n  if (isAllComplete) {\n    return uploadStates.STATE_COMPLETE;\n  }\n\n  if (isAllPaused) {\n    return uploadStates.STATE_PAUSED;\n  }\n\n  let state = uploadStates.STATE_WAITING;\n  const fileIDs = Object.keys(files);\n\n  for (let i = 0; i < fileIDs.length; i++) {\n    const {\n      progress\n    } = files[fileIDs[i]]; // If ANY files are being uploaded right now, show the uploading state.\n\n    if (progress.uploadStarted && !progress.uploadComplete) {\n      return uploadStates.STATE_UPLOADING;\n    } // If files are being preprocessed AND postprocessed at this time, we show the\n    // preprocess state. If any files are being uploaded we show uploading.\n\n\n    if (progress.preprocess && state !== uploadStates.STATE_UPLOADING) {\n      state = uploadStates.STATE_PREPROCESSING;\n    } // If NO files are being preprocessed or uploaded right now, but some files are\n    // being postprocessed, show the postprocess state.\n\n\n    if (progress.postprocess && state !== uploadStates.STATE_UPLOADING && state !== uploadStates.STATE_PREPROCESSING) {\n      state = uploadStates.STATE_POSTPROCESSING;\n    }\n  }\n\n  return state;\n}\n\nfunction UploadStatus(props) {\n  const uploadingState = getUploadingState(props.isAllErrored, props.isAllComplete, props.isAllPaused, props.files);\n\n  switch (uploadingState) {\n    case 'uploading':\n      return props.i18n('uploadingXFiles', {\n        smart_count: props.inProgressNotPausedFiles.length\n      });\n\n    case 'preprocessing':\n    case 'postprocessing':\n      return props.i18n('processingXFiles', {\n        smart_count: props.processingFiles.length\n      });\n\n    case 'paused':\n      return props.i18n('uploadPaused');\n\n    case 'waiting':\n      return props.i18n('xFilesSelected', {\n        smart_count: props.newFiles.length\n      });\n\n    case 'complete':\n      return props.i18n('uploadComplete');\n  }\n}\n\nfunction PanelTopBar(props) {\n  let {\n    allowNewUpload\n  } = props; // TODO maybe this should be done in ../index.js, then just pass that down as `allowNewUpload`\n\n  if (allowNewUpload && props.maxNumberOfFiles) {\n    allowNewUpload = props.totalFileCount < props.maxNumberOfFiles;\n  }\n\n  return h(\"div\", {\n    className: \"uppy-DashboardContent-bar\"\n  }, !props.isAllComplete && !props.hideCancelButton ? h(\"button\", {\n    className: \"uppy-DashboardContent-back\",\n    type: \"button\",\n    onClick: () => props.uppy.cancelAll()\n  }, props.i18n('cancel')) : h(\"div\", null), h(\"div\", {\n    className: \"uppy-DashboardContent-title\",\n    role: \"heading\",\n    \"aria-level\": \"1\"\n  }, h(UploadStatus, props)), allowNewUpload ? h(\"button\", {\n    className: \"uppy-DashboardContent-addMore\",\n    type: \"button\",\n    \"aria-label\": props.i18n('addMoreFiles'),\n    title: props.i18n('addMoreFiles'),\n    onClick: () => props.toggleAddFilesPanel(true)\n  }, h(\"svg\", {\n    \"aria-hidden\": \"true\",\n    focusable: \"false\",\n    className: \"uppy-c-icon\",\n    width: \"15\",\n    height: \"15\",\n    viewBox: \"0 0 15 15\"\n  }, h(\"path\", {\n    d: \"M8 6.5h6a.5.5 0 0 1 .5.5v.5a.5.5 0 0 1-.5.5H8v6a.5.5 0 0 1-.5.5H7a.5.5 0 0 1-.5-.5V8h-6a.5.5 0 0 1-.5-.5V7a.5.5 0 0 1 .5-.5h6v-6A.5.5 0 0 1 7 0h.5a.5.5 0 0 1 .5.5v6z\"\n  })), h(\"span\", {\n    className: \"uppy-DashboardContent-addMoreCaption\"\n  }, props.i18n('addMore'))) : h(\"div\", null));\n}\n\nmodule.exports = PanelTopBar;","map":{"version":3,"sources":["/Users/albertshay/Desktop/silkroad/client/node_modules/@uppy/dashboard/lib/components/PickerPanelTopBar.js"],"names":["h","require","uploadStates","STATE_ERROR","STATE_WAITING","STATE_PREPROCESSING","STATE_UPLOADING","STATE_POSTPROCESSING","STATE_COMPLETE","STATE_PAUSED","getUploadingState","isAllErrored","isAllComplete","isAllPaused","files","state","fileIDs","Object","keys","i","length","progress","uploadStarted","uploadComplete","preprocess","postprocess","UploadStatus","props","uploadingState","i18n","smart_count","inProgressNotPausedFiles","processingFiles","newFiles","PanelTopBar","allowNewUpload","maxNumberOfFiles","totalFileCount","className","hideCancelButton","type","onClick","uppy","cancelAll","role","title","toggleAddFilesPanel","focusable","width","height","viewBox","d","module","exports"],"mappings":"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","sourcesContent":["\"use strict\";\n\nconst {\n  h\n} = require('preact');\n\nconst uploadStates = {\n  STATE_ERROR: 'error',\n  STATE_WAITING: 'waiting',\n  STATE_PREPROCESSING: 'preprocessing',\n  STATE_UPLOADING: 'uploading',\n  STATE_POSTPROCESSING: 'postprocessing',\n  STATE_COMPLETE: 'complete',\n  STATE_PAUSED: 'paused'\n};\n\nfunction getUploadingState(isAllErrored, isAllComplete, isAllPaused, files = {}) {\n  if (isAllErrored) {\n    return uploadStates.STATE_ERROR;\n  }\n\n  if (isAllComplete) {\n    return uploadStates.STATE_COMPLETE;\n  }\n\n  if (isAllPaused) {\n    return uploadStates.STATE_PAUSED;\n  }\n\n  let state = uploadStates.STATE_WAITING;\n  const fileIDs = Object.keys(files);\n\n  for (let i = 0; i < fileIDs.length; i++) {\n    const {\n      progress\n    } = files[fileIDs[i]]; // If ANY files are being uploaded right now, show the uploading state.\n\n    if (progress.uploadStarted && !progress.uploadComplete) {\n      return uploadStates.STATE_UPLOADING;\n    } // If files are being preprocessed AND postprocessed at this time, we show the\n    // preprocess state. If any files are being uploaded we show uploading.\n\n\n    if (progress.preprocess && state !== uploadStates.STATE_UPLOADING) {\n      state = uploadStates.STATE_PREPROCESSING;\n    } // If NO files are being preprocessed or uploaded right now, but some files are\n    // being postprocessed, show the postprocess state.\n\n\n    if (progress.postprocess && state !== uploadStates.STATE_UPLOADING && state !== uploadStates.STATE_PREPROCESSING) {\n      state = uploadStates.STATE_POSTPROCESSING;\n    }\n  }\n\n  return state;\n}\n\nfunction UploadStatus(props) {\n  const uploadingState = getUploadingState(props.isAllErrored, props.isAllComplete, props.isAllPaused, props.files);\n\n  switch (uploadingState) {\n    case 'uploading':\n      return props.i18n('uploadingXFiles', {\n        smart_count: props.inProgressNotPausedFiles.length\n      });\n\n    case 'preprocessing':\n    case 'postprocessing':\n      return props.i18n('processingXFiles', {\n        smart_count: props.processingFiles.length\n      });\n\n    case 'paused':\n      return props.i18n('uploadPaused');\n\n    case 'waiting':\n      return props.i18n('xFilesSelected', {\n        smart_count: props.newFiles.length\n      });\n\n    case 'complete':\n      return props.i18n('uploadComplete');\n  }\n}\n\nfunction PanelTopBar(props) {\n  let {\n    allowNewUpload\n  } = props; // TODO maybe this should be done in ../index.js, then just pass that down as `allowNewUpload`\n\n  if (allowNewUpload && props.maxNumberOfFiles) {\n    allowNewUpload = props.totalFileCount < props.maxNumberOfFiles;\n  }\n\n  return h(\"div\", {\n    className: \"uppy-DashboardContent-bar\"\n  }, !props.isAllComplete && !props.hideCancelButton ? h(\"button\", {\n    className: \"uppy-DashboardContent-back\",\n    type: \"button\",\n    onClick: () => props.uppy.cancelAll()\n  }, props.i18n('cancel')) : h(\"div\", null), h(\"div\", {\n    className: \"uppy-DashboardContent-title\",\n    role: \"heading\",\n    \"aria-level\": \"1\"\n  }, h(UploadStatus, props)), allowNewUpload ? h(\"button\", {\n    className: \"uppy-DashboardContent-addMore\",\n    type: \"button\",\n    \"aria-label\": props.i18n('addMoreFiles'),\n    title: props.i18n('addMoreFiles'),\n    onClick: () => props.toggleAddFilesPanel(true)\n  }, h(\"svg\", {\n    \"aria-hidden\": \"true\",\n    focusable: \"false\",\n    className: \"uppy-c-icon\",\n    width: \"15\",\n    height: \"15\",\n    viewBox: \"0 0 15 15\"\n  }, h(\"path\", {\n    d: \"M8 6.5h6a.5.5 0 0 1 .5.5v.5a.5.5 0 0 1-.5.5H8v6a.5.5 0 0 1-.5.5H7a.5.5 0 0 1-.5-.5V8h-6a.5.5 0 0 1-.5-.5V7a.5.5 0 0 1 .5-.5h6v-6A.5.5 0 0 1 7 0h.5a.5.5 0 0 1 .5.5v6z\"\n  })), h(\"span\", {\n    className: \"uppy-DashboardContent-addMoreCaption\"\n  }, props.i18n('addMore'))) : h(\"div\", null));\n}\n\nmodule.exports = PanelTopBar;"]},"metadata":{},"sourceType":"script"}