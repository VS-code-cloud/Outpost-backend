{"ast":null,"code":"\"use strict\";\n\nvar _objectSpread = require(\"/Users/albertshay/Desktop/silkroad/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread2\");\n\nvar _classCallCheck = require(\"/Users/albertshay/Desktop/silkroad/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/albertshay/Desktop/silkroad/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _assertThisInitialized = require(\"/Users/albertshay/Desktop/silkroad/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/assertThisInitialized\");\n\nvar _inherits = require(\"/Users/albertshay/Desktop/silkroad/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/albertshay/Desktop/silkroad/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar _class, _temp;\n\nvar _require = require('@uppy/core'),\n    UIPlugin = _require.UIPlugin;\n\nvar _require2 = require('preact'),\n    h = _require2.h;\n/**\n * Progress bar\n *\n */\n\n\nmodule.exports = (_temp = _class = /*#__PURE__*/function (_UIPlugin) {\n  _inherits(ProgressBar, _UIPlugin);\n\n  var _super = _createSuper(ProgressBar);\n\n  function ProgressBar(uppy, opts) {\n    var _this;\n\n    _classCallCheck(this, ProgressBar);\n\n    _this = _super.call(this, uppy, opts);\n    _this.id = _this.opts.id || 'ProgressBar';\n    _this.title = 'Progress Bar';\n    _this.type = 'progressindicator'; // set default options\n\n    var defaultOptions = {\n      target: 'body',\n      fixed: false,\n      hideAfterFinish: true\n    }; // merge default options with the ones set by user\n\n    _this.opts = _objectSpread(_objectSpread({}, defaultOptions), opts);\n    _this.render = _this.render.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ProgressBar, [{\n    key: \"render\",\n    value: function render(state) {\n      var progress = state.totalProgress || 0; // before starting and after finish should be hidden if specified in the options\n\n      var isHidden = (progress === 0 || progress === 100) && this.opts.hideAfterFinish;\n      return h(\"div\", {\n        className: \"uppy uppy-ProgressBar\",\n        style: {\n          position: this.opts.fixed ? 'fixed' : 'initial'\n        },\n        \"aria-hidden\": isHidden\n      }, h(\"div\", {\n        className: \"uppy-ProgressBar-inner\",\n        style: {\n          width: \"\".concat(progress, \"%\")\n        }\n      }), h(\"div\", {\n        className: \"uppy-ProgressBar-percentage\"\n      }, progress));\n    }\n  }, {\n    key: \"install\",\n    value: function install() {\n      var target = this.opts.target;\n\n      if (target) {\n        this.mount(target, this);\n      }\n    }\n  }, {\n    key: \"uninstall\",\n    value: function uninstall() {\n      this.unmount();\n    }\n  }]);\n\n  return ProgressBar;\n}(UIPlugin), _class.VERSION = \"2.0.4\", _temp);","map":{"version":3,"sources":["/Users/albertshay/Desktop/silkroad/client/node_modules/@uppy/progress-bar/lib/index.js"],"names":["_class","_temp","require","UIPlugin","h","module","exports","uppy","opts","id","title","type","defaultOptions","target","fixed","hideAfterFinish","render","bind","state","progress","totalProgress","isHidden","className","style","position","width","mount","unmount","VERSION"],"mappings":"AAAA;;;;;;;;;;;;;;AAEA,IAAIA,MAAJ,EAAYC,KAAZ;;AAEA,eAEIC,OAAO,CAAC,YAAD,CAFX;AAAA,IACEC,QADF,YACEA,QADF;;AAIA,gBAEID,OAAO,CAAC,QAAD,CAFX;AAAA,IACEE,CADF,aACEA,CADF;AAGA;AACA;AACA;AACA;;;AAGAC,MAAM,CAACC,OAAP,IAAkBL,KAAK,GAAGD,MAAM;AAAA;;AAAA;;AAC9B,uBAAYO,IAAZ,EAAkBC,IAAlB,EAAwB;AAAA;;AAAA;;AACtB,8BAAMD,IAAN,EAAYC,IAAZ;AACA,UAAKC,EAAL,GAAU,MAAKD,IAAL,CAAUC,EAAV,IAAgB,aAA1B;AACA,UAAKC,KAAL,GAAa,cAAb;AACA,UAAKC,IAAL,GAAY,mBAAZ,CAJsB,CAIW;;AAEjC,QAAMC,cAAc,GAAG;AACrBC,MAAAA,MAAM,EAAE,MADa;AAErBC,MAAAA,KAAK,EAAE,KAFc;AAGrBC,MAAAA,eAAe,EAAE;AAHI,KAAvB,CANsB,CAUnB;;AAEH,UAAKP,IAAL,mCAAiBI,cAAjB,GACKJ,IADL;AAGA,UAAKQ,MAAL,GAAc,MAAKA,MAAL,CAAYC,IAAZ,+BAAd;AAfsB;AAgBvB;;AAjB6B;AAAA;AAAA,WAmB9B,gBAAOC,KAAP,EAAc;AACZ,UAAMC,QAAQ,GAAGD,KAAK,CAACE,aAAN,IAAuB,CAAxC,CADY,CAC+B;;AAE3C,UAAMC,QAAQ,GAAG,CAACF,QAAQ,KAAK,CAAb,IAAkBA,QAAQ,KAAK,GAAhC,KAAwC,KAAKX,IAAL,CAAUO,eAAnE;AACA,aAAOX,CAAC,CAAC,KAAD,EAAQ;AACdkB,QAAAA,SAAS,EAAE,uBADG;AAEdC,QAAAA,KAAK,EAAE;AACLC,UAAAA,QAAQ,EAAE,KAAKhB,IAAL,CAAUM,KAAV,GAAkB,OAAlB,GAA4B;AADjC,SAFO;AAKd,uBAAeO;AALD,OAAR,EAMLjB,CAAC,CAAC,KAAD,EAAQ;AACVkB,QAAAA,SAAS,EAAE,wBADD;AAEVC,QAAAA,KAAK,EAAE;AACLE,UAAAA,KAAK,YAAKN,QAAL;AADA;AAFG,OAAR,CANI,EAWJf,CAAC,CAAC,KAAD,EAAQ;AACXkB,QAAAA,SAAS,EAAE;AADA,OAAR,EAEFH,QAFE,CAXG,CAAR;AAcD;AArC6B;AAAA;AAAA,WAuC9B,mBAAU;AACR,UACEN,MADF,GAEI,KAAKL,IAFT,CACEK,MADF;;AAIA,UAAIA,MAAJ,EAAY;AACV,aAAKa,KAAL,CAAWb,MAAX,EAAmB,IAAnB;AACD;AACF;AA/C6B;AAAA;AAAA,WAiD9B,qBAAY;AACV,WAAKc,OAAL;AACD;AAnD6B;;AAAA;AAAA,EAA6BxB,QAA7B,CAAd,EAqDfH,MAAM,CAAC4B,OAAP,GAAiB,OArDF,EAqDW3B,KArD7B","sourcesContent":["\"use strict\";\n\nvar _class, _temp;\n\nconst {\n  UIPlugin\n} = require('@uppy/core');\n\nconst {\n  h\n} = require('preact');\n/**\n * Progress bar\n *\n */\n\n\nmodule.exports = (_temp = _class = class ProgressBar extends UIPlugin {\n  constructor(uppy, opts) {\n    super(uppy, opts);\n    this.id = this.opts.id || 'ProgressBar';\n    this.title = 'Progress Bar';\n    this.type = 'progressindicator'; // set default options\n\n    const defaultOptions = {\n      target: 'body',\n      fixed: false,\n      hideAfterFinish: true\n    }; // merge default options with the ones set by user\n\n    this.opts = { ...defaultOptions,\n      ...opts\n    };\n    this.render = this.render.bind(this);\n  }\n\n  render(state) {\n    const progress = state.totalProgress || 0; // before starting and after finish should be hidden if specified in the options\n\n    const isHidden = (progress === 0 || progress === 100) && this.opts.hideAfterFinish;\n    return h(\"div\", {\n      className: \"uppy uppy-ProgressBar\",\n      style: {\n        position: this.opts.fixed ? 'fixed' : 'initial'\n      },\n      \"aria-hidden\": isHidden\n    }, h(\"div\", {\n      className: \"uppy-ProgressBar-inner\",\n      style: {\n        width: `${progress}%`\n      }\n    }), h(\"div\", {\n      className: \"uppy-ProgressBar-percentage\"\n    }, progress));\n  }\n\n  install() {\n    const {\n      target\n    } = this.opts;\n\n    if (target) {\n      this.mount(target, this);\n    }\n  }\n\n  uninstall() {\n    this.unmount();\n  }\n\n}, _class.VERSION = \"2.0.4\", _temp);"]},"metadata":{},"sourceType":"script"}