{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"/Users/albertshay/Desktop/silkroad/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/defineProperty\");\n\nvar _objectSpread = require(\"/Users/albertshay/Desktop/silkroad/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread2\");\n\nvar _classCallCheck = require(\"/Users/albertshay/Desktop/silkroad/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/albertshay/Desktop/silkroad/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _assertThisInitialized = require(\"/Users/albertshay/Desktop/silkroad/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/assertThisInitialized\");\n\nvar _inherits = require(\"/Users/albertshay/Desktop/silkroad/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/albertshay/Desktop/silkroad/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar _class, _openFileEditorWhenFilesAdded, _attachRenderFunctionToTarget, _isTargetSupported, _getAcquirers, _getProgressIndicators, _getEditors, _temp;\n\nfunction _classPrivateFieldLooseBase(receiver, privateKey) {\n  if (!Object.prototype.hasOwnProperty.call(receiver, privateKey)) {\n    throw new TypeError(\"attempted to use private field on non-instance\");\n  }\n\n  return receiver;\n}\n\nvar id = 0;\n\nfunction _classPrivateFieldLooseKey(name) {\n  return \"__private_\" + id++ + \"_\" + name;\n}\n\nvar _require = require('preact'),\n    h = _require.h;\n\nvar _require2 = require('@uppy/core'),\n    UIPlugin = _require2.UIPlugin;\n\nvar StatusBar = require('@uppy/status-bar');\n\nvar Informer = require('@uppy/informer');\n\nvar ThumbnailGenerator = require('@uppy/thumbnail-generator');\n\nvar findAllDOMElements = require('@uppy/utils/lib/findAllDOMElements');\n\nvar toArray = require('@uppy/utils/lib/toArray');\n\nvar getDroppedFiles = require('@uppy/utils/lib/getDroppedFiles');\n\nvar getTextDirection = require('@uppy/utils/lib/getTextDirection');\n\nvar _require3 = require('nanoid'),\n    nanoid = _require3.nanoid;\n\nvar trapFocus = require('./utils/trapFocus');\n\nvar createSuperFocus = require('./utils/createSuperFocus');\n\nvar memoize = require('memoize-one').default || require('memoize-one');\n\nvar FOCUSABLE_ELEMENTS = require('@uppy/utils/lib/FOCUSABLE_ELEMENTS');\n\nvar DashboardUI = require('./components/Dashboard');\n\nvar TAB_KEY = 9;\nvar ESC_KEY = 27;\n\nfunction createPromise() {\n  var o = {};\n  o.promise = new Promise(function (resolve, reject) {\n    o.resolve = resolve;\n    o.reject = reject;\n  });\n  return o;\n}\n\nfunction defaultPickerIcon() {\n  return h(\"svg\", {\n    \"aria-hidden\": \"true\",\n    focusable: \"false\",\n    width: \"30\",\n    height: \"30\",\n    viewBox: \"0 0 30 30\"\n  }, h(\"path\", {\n    d: \"M15 30c8.284 0 15-6.716 15-15 0-8.284-6.716-15-15-15C6.716 0 0 6.716 0 15c0 8.284 6.716 15 15 15zm4.258-12.676v6.846h-8.426v-6.846H5.204l9.82-12.364 9.82 12.364H19.26z\"\n  }));\n}\n/**\n * Dashboard UI with previews, metadata editing, tabs for various services and more\n */\n\n\nmodule.exports = (_temp = (_openFileEditorWhenFilesAdded = /*#__PURE__*/_classPrivateFieldLooseKey(\"openFileEditorWhenFilesAdded\"), _attachRenderFunctionToTarget = /*#__PURE__*/_classPrivateFieldLooseKey(\"attachRenderFunctionToTarget\"), _isTargetSupported = /*#__PURE__*/_classPrivateFieldLooseKey(\"isTargetSupported\"), _getAcquirers = /*#__PURE__*/_classPrivateFieldLooseKey(\"getAcquirers\"), _getProgressIndicators = /*#__PURE__*/_classPrivateFieldLooseKey(\"getProgressIndicators\"), _getEditors = /*#__PURE__*/_classPrivateFieldLooseKey(\"getEditors\"), _class = /*#__PURE__*/function (_UIPlugin) {\n  _inherits(Dashboard, _UIPlugin);\n\n  var _super = _createSuper(Dashboard);\n\n  function Dashboard(uppy, _opts) {\n    var _this;\n\n    _classCallCheck(this, Dashboard);\n\n    _this = _super.call(this, uppy, _opts);\n\n    _this.removeTarget = function (plugin) {\n      var pluginState = _this.getPluginState(); // filter out the one we want to remove\n\n\n      var newTargets = pluginState.targets.filter(function (target) {\n        return target.id !== plugin.id;\n      });\n\n      _this.setPluginState({\n        targets: newTargets\n      });\n    };\n\n    _this.addTarget = function (plugin) {\n      var callerPluginId = plugin.id || plugin.constructor.name;\n      var callerPluginName = plugin.title || callerPluginId;\n      var callerPluginType = plugin.type;\n\n      if (callerPluginType !== 'acquirer' && callerPluginType !== 'progressindicator' && callerPluginType !== 'editor') {\n        var msg = 'Dashboard: can only be targeted by plugins of types: acquirer, progressindicator, editor';\n\n        _this.uppy.log(msg, 'error');\n\n        return;\n      }\n\n      var target = {\n        id: callerPluginId,\n        name: callerPluginName,\n        type: callerPluginType\n      };\n\n      var state = _this.getPluginState();\n\n      var newTargets = state.targets.slice();\n      newTargets.push(target);\n\n      _this.setPluginState({\n        targets: newTargets\n      });\n\n      return _this.el;\n    };\n\n    _this.hideAllPanels = function () {\n      var state = _this.getPluginState();\n\n      var update = {\n        activePickerPanel: false,\n        showAddFilesPanel: false,\n        activeOverlayType: null,\n        fileCardFor: null,\n        showFileEditor: false\n      };\n\n      if (state.activePickerPanel === update.activePickerPanel && state.showAddFilesPanel === update.showAddFilesPanel && state.showFileEditor === update.showFileEditor && state.activeOverlayType === update.activeOverlayType) {\n        // avoid doing a state update if nothing changed\n        return;\n      }\n\n      _this.setPluginState(update);\n    };\n\n    _this.showPanel = function (id) {\n      var _this$getPluginState = _this.getPluginState(),\n          targets = _this$getPluginState.targets;\n\n      var activePickerPanel = targets.filter(function (target) {\n        return target.type === 'acquirer' && target.id === id;\n      })[0];\n\n      _this.setPluginState({\n        activePickerPanel: activePickerPanel,\n        activeOverlayType: 'PickerPanel'\n      });\n    };\n\n    _this.canEditFile = function (file) {\n      var _this$getPluginState2 = _this.getPluginState(),\n          targets = _this$getPluginState2.targets;\n\n      var editors = _classPrivateFieldLooseBase(_assertThisInitialized(_this), _getEditors)[_getEditors](targets);\n\n      return editors.some(function (target) {\n        return _this.uppy.getPlugin(target.id).canEditFile(file);\n      });\n    };\n\n    _this.openFileEditor = function (file) {\n      var _this$getPluginState3 = _this.getPluginState(),\n          targets = _this$getPluginState3.targets;\n\n      var editors = _classPrivateFieldLooseBase(_assertThisInitialized(_this), _getEditors)[_getEditors](targets);\n\n      _this.setPluginState({\n        showFileEditor: true,\n        fileCardFor: file.id || null,\n        activeOverlayType: 'FileEditor'\n      });\n\n      editors.forEach(function (editor) {\n        _this.uppy.getPlugin(editor.id).selectFile(file);\n      });\n    };\n\n    _this.saveFileEditor = function () {\n      var _this$getPluginState4 = _this.getPluginState(),\n          targets = _this$getPluginState4.targets;\n\n      var editors = _classPrivateFieldLooseBase(_assertThisInitialized(_this), _getEditors)[_getEditors](targets);\n\n      editors.forEach(function (editor) {\n        _this.uppy.getPlugin(editor.id).save();\n      });\n\n      _this.hideAllPanels();\n    };\n\n    _this.openModal = function () {\n      var _createPromise = createPromise(),\n          promise = _createPromise.promise,\n          resolve = _createPromise.resolve; // save scroll position\n\n\n      _this.savedScrollPosition = window.pageYOffset; // save active element, so we can restore focus when modal is closed\n\n      _this.savedActiveElement = document.activeElement;\n\n      if (_this.opts.disablePageScrollWhenModalOpen) {\n        document.body.classList.add('uppy-Dashboard-isFixed');\n      }\n\n      if (_this.opts.animateOpenClose && _this.getPluginState().isClosing) {\n        var handler = function handler() {\n          _this.setPluginState({\n            isHidden: false\n          });\n\n          _this.el.removeEventListener('animationend', handler, false);\n\n          resolve();\n        };\n\n        _this.el.addEventListener('animationend', handler, false);\n      } else {\n        _this.setPluginState({\n          isHidden: false\n        });\n\n        resolve();\n      }\n\n      if (_this.opts.browserBackButtonClose) {\n        _this.updateBrowserHistory();\n      } // handle ESC and TAB keys in modal dialog\n\n\n      document.addEventListener('keydown', _this.handleKeyDownInModal);\n\n      _this.uppy.emit('dashboard:modal-open');\n\n      return promise;\n    };\n\n    _this.closeModal = function () {\n      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var _opts$manualClose = opts.manualClose,\n          manualClose = _opts$manualClose === void 0 ? true : _opts$manualClose;\n\n      var _this$getPluginState5 = _this.getPluginState(),\n          isHidden = _this$getPluginState5.isHidden,\n          isClosing = _this$getPluginState5.isClosing;\n\n      if (isHidden || isClosing) {\n        // short-circuit if animation is ongoing\n        return;\n      }\n\n      var _createPromise2 = createPromise(),\n          promise = _createPromise2.promise,\n          resolve = _createPromise2.resolve;\n\n      if (_this.opts.disablePageScrollWhenModalOpen) {\n        document.body.classList.remove('uppy-Dashboard-isFixed');\n      }\n\n      if (_this.opts.animateOpenClose) {\n        _this.setPluginState({\n          isClosing: true\n        });\n\n        var handler = function handler() {\n          _this.setPluginState({\n            isHidden: true,\n            isClosing: false\n          });\n\n          _this.superFocus.cancel();\n\n          _this.savedActiveElement.focus();\n\n          _this.el.removeEventListener('animationend', handler, false);\n\n          resolve();\n        };\n\n        _this.el.addEventListener('animationend', handler, false);\n      } else {\n        _this.setPluginState({\n          isHidden: true\n        });\n\n        _this.superFocus.cancel();\n\n        _this.savedActiveElement.focus();\n\n        resolve();\n      } // handle ESC and TAB keys in modal dialog\n\n\n      document.removeEventListener('keydown', _this.handleKeyDownInModal);\n\n      if (manualClose) {\n        if (_this.opts.browserBackButtonClose) {\n          var _history$state; // Make sure that the latest entry in the history state is our modal name\n          // eslint-disable-next-line no-restricted-globals\n\n\n          if ((_history$state = history.state) != null && _history$state[_this.modalName]) {\n            // Go back in history to clear out the entry we created (ultimately closing the modal)\n            // eslint-disable-next-line no-restricted-globals\n            history.back();\n          }\n        }\n      }\n\n      _this.uppy.emit('dashboard:modal-closed');\n\n      return promise;\n    };\n\n    _this.isModalOpen = function () {\n      return !_this.getPluginState().isHidden || false;\n    };\n\n    _this.requestCloseModal = function () {\n      if (_this.opts.onRequestCloseModal) {\n        return _this.opts.onRequestCloseModal();\n      }\n\n      return _this.closeModal();\n    };\n\n    _this.setDarkModeCapability = function (isDarkModeOn) {\n      var _this$uppy$getState = _this.uppy.getState(),\n          capabilities = _this$uppy$getState.capabilities;\n\n      _this.uppy.setState({\n        capabilities: _objectSpread(_objectSpread({}, capabilities), {}, {\n          darkMode: isDarkModeOn\n        })\n      });\n    };\n\n    _this.handleSystemDarkModeChange = function (event) {\n      var isDarkModeOnNow = event.matches;\n\n      _this.uppy.log(\"[Dashboard] Dark mode is \".concat(isDarkModeOnNow ? 'on' : 'off'));\n\n      _this.setDarkModeCapability(isDarkModeOnNow);\n    };\n\n    _this.toggleFileCard = function (show, fileID) {\n      var file = _this.uppy.getFile(fileID);\n\n      if (show) {\n        _this.uppy.emit('dashboard:file-edit-start', file);\n      } else {\n        _this.uppy.emit('dashboard:file-edit-complete', file);\n      }\n\n      _this.setPluginState({\n        fileCardFor: show ? fileID : null,\n        activeOverlayType: show ? 'FileCard' : null\n      });\n    };\n\n    _this.toggleAddFilesPanel = function (show) {\n      _this.setPluginState({\n        showAddFilesPanel: show,\n        activeOverlayType: show ? 'AddFiles' : null\n      });\n    };\n\n    _this.addFiles = function (files) {\n      var descriptors = files.map(function (file) {\n        return {\n          source: _this.id,\n          name: file.name,\n          type: file.type,\n          data: file,\n          meta: {\n            // path of the file relative to the ancestor directory the user selected.\n            // e.g. 'docs/Old Prague/airbnb.pdf'\n            relativePath: file.relativePath || null\n          }\n        };\n      });\n\n      try {\n        _this.uppy.addFiles(descriptors);\n      } catch (err) {\n        _this.uppy.log(err);\n      }\n    };\n\n    _this.startListeningToResize = function () {\n      // Watch for Dashboard container (`.uppy-Dashboard-inner`) resize\n      // and update containerWidth/containerHeight in plugin state accordingly.\n      // Emits first event on initialization.\n      _this.resizeObserver = new ResizeObserver(function (entries) {\n        var uppyDashboardInnerEl = entries[0];\n        var _uppyDashboardInnerEl = uppyDashboardInnerEl.contentRect,\n            width = _uppyDashboardInnerEl.width,\n            height = _uppyDashboardInnerEl.height;\n\n        _this.uppy.log(\"[Dashboard] resized: \".concat(width, \" / \").concat(height), 'debug');\n\n        _this.setPluginState({\n          containerWidth: width,\n          containerHeight: height,\n          areInsidesReadyToBeVisible: true\n        });\n      });\n\n      _this.resizeObserver.observe(_this.el.querySelector('.uppy-Dashboard-inner')); // If ResizeObserver fails to emit an event telling us what size to use - default to the mobile view\n\n\n      _this.makeDashboardInsidesVisibleAnywayTimeout = setTimeout(function () {\n        var pluginState = _this.getPluginState();\n\n        var isModalAndClosed = !_this.opts.inline && pluginState.isHidden;\n\n        if ( // if ResizeObserver hasn't yet fired,\n        !pluginState.areInsidesReadyToBeVisible // and it's not due to the modal being closed\n        && !isModalAndClosed) {\n          _this.uppy.log(\"[Dashboard] resize event didn't fire on time: defaulted to mobile layout\", 'debug');\n\n          _this.setPluginState({\n            areInsidesReadyToBeVisible: true\n          });\n        }\n      }, 1000);\n    };\n\n    _this.stopListeningToResize = function () {\n      _this.resizeObserver.disconnect();\n\n      clearTimeout(_this.makeDashboardInsidesVisibleAnywayTimeout);\n    };\n\n    _this.recordIfFocusedOnUppyRecently = function (event) {\n      if (_this.el.contains(event.target)) {\n        _this.ifFocusedOnUppyRecently = true;\n      } else {\n        _this.ifFocusedOnUppyRecently = false; // ___Why run this.superFocus.cancel here when it already runs in superFocusOnEachUpdate?\n        //    Because superFocus is debounced, when we move from Uppy to some other element on the page,\n        //    previously run superFocus sometimes hits and moves focus back to Uppy.\n\n        _this.superFocus.cancel();\n      }\n    };\n\n    _this.disableAllFocusableElements = function (disable) {\n      var focusableNodes = toArray(_this.el.querySelectorAll(FOCUSABLE_ELEMENTS));\n\n      if (disable) {\n        focusableNodes.forEach(function (node) {\n          // save previous tabindex in a data-attribute, to restore when enabling\n          var currentTabIndex = node.getAttribute('tabindex');\n\n          if (currentTabIndex) {\n            node.dataset.inertTabindex = currentTabIndex;\n          }\n\n          node.setAttribute('tabindex', '-1');\n        });\n      } else {\n        focusableNodes.forEach(function (node) {\n          if ('inertTabindex' in node.dataset) {\n            node.setAttribute('tabindex', node.dataset.inertTabindex);\n          } else {\n            node.removeAttribute('tabindex');\n          }\n        });\n      }\n\n      _this.dashboardIsDisabled = disable;\n    };\n\n    _this.updateBrowserHistory = function () {\n      var _history$state2; // Ensure history state does not already contain our modal name to avoid double-pushing\n      // eslint-disable-next-line no-restricted-globals\n\n\n      if (!((_history$state2 = history.state) != null && _history$state2[_this.modalName])) {\n        // Push to history so that the page is not lost on browser back button press\n        // eslint-disable-next-line no-restricted-globals\n        history.pushState(_objectSpread(_objectSpread({}, history.state), {}, _defineProperty({}, _this.modalName, true)), '');\n      } // Listen for back button presses\n\n\n      window.addEventListener('popstate', _this.handlePopState, false);\n    };\n\n    _this.handlePopState = function (event) {\n      var _event$state; // Close the modal if the history state no longer contains our modal name\n\n\n      if (_this.isModalOpen() && (!event.state || !event.state[_this.modalName])) {\n        _this.closeModal({\n          manualClose: false\n        });\n      } // When the browser back button is pressed and uppy is now the latest entry\n      // in the history but the modal is closed, fix the history by removing the\n      // uppy history entry.\n      // This occurs when another entry is added into the history state while the\n      // modal is open, and then the modal gets manually closed.\n      // Solves PR #575 (https://github.com/transloadit/uppy/pull/575)\n\n\n      if (!_this.isModalOpen() && (_event$state = event.state) != null && _event$state[_this.modalName]) {\n        // eslint-disable-next-line no-restricted-globals\n        history.back();\n      }\n    };\n\n    _this.handleKeyDownInModal = function (event) {\n      // close modal on esc key press\n      if (event.keyCode === ESC_KEY) _this.requestCloseModal(event); // trap focus on tab key press\n\n      if (event.keyCode === TAB_KEY) trapFocus.forModal(event, _this.getPluginState().activeOverlayType, _this.el);\n    };\n\n    _this.handleClickOutside = function () {\n      if (_this.opts.closeModalOnClickOutside) _this.requestCloseModal();\n    };\n\n    _this.handlePaste = function (event) {\n      // 1. Let any acquirer plugin (Url/Webcam/etc.) handle pastes to the root\n      _this.uppy.iteratePlugins(function (plugin) {\n        if (plugin.type === 'acquirer') {\n          // Every Plugin with .type acquirer can define handleRootPaste(event)\n          plugin.handleRootPaste == null ? void 0 : plugin.handleRootPaste(event);\n        }\n      }); // 2. Add all dropped files\n\n\n      var files = toArray(event.clipboardData.files);\n\n      _this.addFiles(files);\n    };\n\n    _this.handleInputChange = function (event) {\n      event.preventDefault();\n      var files = toArray(event.target.files);\n\n      _this.addFiles(files);\n    };\n\n    _this.handleDragOver = function (event) {\n      event.preventDefault();\n      event.stopPropagation();\n\n      if (_this.opts.disabled || _this.opts.disableLocalFiles || !_this.uppy.getState().allowNewUpload) {\n        return;\n      } // 1. Add a small (+) icon on drop\n      // (and prevent browsers from interpreting this as files being _moved_ into the\n      // browser, https://github.com/transloadit/uppy/issues/1978).\n\n\n      event.dataTransfer.dropEffect = 'copy';\n      clearTimeout(_this.removeDragOverClassTimeout);\n\n      _this.setPluginState({\n        isDraggingOver: true\n      });\n    };\n\n    _this.handleDragLeave = function (event) {\n      event.preventDefault();\n      event.stopPropagation();\n\n      if (_this.opts.disabled || _this.opts.disableLocalFiles || !_this.uppy.getState().allowNewUpload) {\n        return;\n      }\n\n      clearTimeout(_this.removeDragOverClassTimeout); // Timeout against flickering, this solution is taken from drag-drop library.\n      // Solution with 'pointer-events: none' didn't work across browsers.\n\n      _this.removeDragOverClassTimeout = setTimeout(function () {\n        _this.setPluginState({\n          isDraggingOver: false\n        });\n      }, 50);\n    };\n\n    _this.handleDrop = function (event) {\n      event.preventDefault();\n      event.stopPropagation();\n\n      if (_this.opts.disabled || _this.opts.disableLocalFiles || !_this.uppy.getState().allowNewUpload) {\n        return;\n      }\n\n      clearTimeout(_this.removeDragOverClassTimeout); // 2. Remove dragover class\n\n      _this.setPluginState({\n        isDraggingOver: false\n      }); // 3. Let any acquirer plugin (Url/Webcam/etc.) handle drops to the root\n\n\n      _this.uppy.iteratePlugins(function (plugin) {\n        if (plugin.type === 'acquirer') {\n          // Every Plugin with .type acquirer can define handleRootDrop(event)\n          plugin.handleRootDrop == null ? void 0 : plugin.handleRootDrop(event);\n        }\n      }); // 4. Add all dropped files\n\n\n      var executedDropErrorOnce = false;\n\n      var logDropError = function logDropError(error) {\n        _this.uppy.log(error, 'error'); // In practice all drop errors are most likely the same, so let's just show one to avoid overwhelming the user\n\n\n        if (!executedDropErrorOnce) {\n          _this.uppy.info(error.message, 'error');\n\n          executedDropErrorOnce = true;\n        }\n      };\n\n      getDroppedFiles(event.dataTransfer, {\n        logDropError: logDropError\n      }).then(function (files) {\n        if (files.length > 0) {\n          _this.uppy.log('[Dashboard] Files were dropped');\n\n          _this.addFiles(files);\n        }\n      });\n    };\n\n    _this.handleRequestThumbnail = function (file) {\n      if (!_this.opts.waitForThumbnailsBeforeUpload) {\n        _this.uppy.emit('thumbnail:request', file);\n      }\n    };\n\n    _this.handleCancelThumbnail = function (file) {\n      if (!_this.opts.waitForThumbnailsBeforeUpload) {\n        _this.uppy.emit('thumbnail:cancel', file);\n      }\n    };\n\n    _this.handleKeyDownInInline = function (event) {\n      // Trap focus on tab key press.\n      if (event.keyCode === TAB_KEY) trapFocus.forInline(event, _this.getPluginState().activeOverlayType, _this.el);\n    };\n\n    _this.handlePasteOnBody = function (event) {\n      var isFocusInOverlay = _this.el.contains(document.activeElement);\n\n      if (isFocusInOverlay) {\n        _this.handlePaste(event);\n      }\n    };\n\n    _this.handleComplete = function (_ref) {\n      var failed = _ref.failed;\n\n      if (_this.opts.closeAfterFinish && failed.length === 0) {\n        // All uploads are done\n        _this.requestCloseModal();\n      }\n    };\n\n    _this.handleCancelRestore = function () {\n      _this.uppy.emit('restore-canceled');\n    };\n\n    Object.defineProperty(_assertThisInitialized(_this), _openFileEditorWhenFilesAdded, {\n      writable: true,\n      value: function value(files) {\n        var firstFile = files[0];\n\n        if (_this.canEditFile(firstFile)) {\n          _this.openFileEditor(firstFile);\n        }\n      }\n    });\n\n    _this.initEvents = function () {\n      // Modal open button\n      if (_this.opts.trigger && !_this.opts.inline) {\n        var showModalTrigger = findAllDOMElements(_this.opts.trigger);\n\n        if (showModalTrigger) {\n          showModalTrigger.forEach(function (trigger) {\n            return trigger.addEventListener('click', _this.openModal);\n          });\n        } else {\n          _this.uppy.log('Dashboard modal trigger not found. Make sure `trigger` is set in Dashboard options, unless you are planning to call `dashboard.openModal()` method yourself', 'warning');\n        }\n      }\n\n      _this.startListeningToResize();\n\n      document.addEventListener('paste', _this.handlePasteOnBody);\n\n      _this.uppy.on('plugin-remove', _this.removeTarget);\n\n      _this.uppy.on('file-added', _this.hideAllPanels);\n\n      _this.uppy.on('dashboard:modal-closed', _this.hideAllPanels);\n\n      _this.uppy.on('file-editor:complete', _this.hideAllPanels);\n\n      _this.uppy.on('complete', _this.handleComplete); // ___Why fire on capture?\n      //    Because this.ifFocusedOnUppyRecently needs to change before onUpdate() fires.\n\n\n      document.addEventListener('focus', _this.recordIfFocusedOnUppyRecently, true);\n      document.addEventListener('click', _this.recordIfFocusedOnUppyRecently, true);\n\n      if (_this.opts.inline) {\n        _this.el.addEventListener('keydown', _this.handleKeyDownInInline);\n      }\n\n      if (_this.opts.autoOpenFileEditor) {\n        _this.uppy.on('files-added', _classPrivateFieldLooseBase(_assertThisInitialized(_this), _openFileEditorWhenFilesAdded)[_openFileEditorWhenFilesAdded]);\n      }\n    };\n\n    _this.removeEvents = function () {\n      var showModalTrigger = findAllDOMElements(_this.opts.trigger);\n\n      if (!_this.opts.inline && showModalTrigger) {\n        showModalTrigger.forEach(function (trigger) {\n          return trigger.removeEventListener('click', _this.openModal);\n        });\n      }\n\n      _this.stopListeningToResize();\n\n      document.removeEventListener('paste', _this.handlePasteOnBody);\n      window.removeEventListener('popstate', _this.handlePopState, false);\n\n      _this.uppy.off('plugin-remove', _this.removeTarget);\n\n      _this.uppy.off('file-added', _this.hideAllPanels);\n\n      _this.uppy.off('dashboard:modal-closed', _this.hideAllPanels);\n\n      _this.uppy.off('file-editor:complete', _this.hideAllPanels);\n\n      _this.uppy.off('complete', _this.handleComplete);\n\n      document.removeEventListener('focus', _this.recordIfFocusedOnUppyRecently);\n      document.removeEventListener('click', _this.recordIfFocusedOnUppyRecently);\n\n      if (_this.opts.inline) {\n        _this.el.removeEventListener('keydown', _this.handleKeyDownInInline);\n      }\n\n      if (_this.opts.autoOpenFileEditor) {\n        _this.uppy.off('files-added', _classPrivateFieldLooseBase(_assertThisInitialized(_this), _openFileEditorWhenFilesAdded)[_openFileEditorWhenFilesAdded]);\n      }\n    };\n\n    _this.superFocusOnEachUpdate = function () {\n      var isFocusInUppy = _this.el.contains(document.activeElement); // When focus is lost on the page (== focus is on body for most browsers, or focus is null for IE11)\n\n\n      var isFocusNowhere = document.activeElement === document.body || document.activeElement === null;\n\n      var isInformerHidden = _this.uppy.getState().info.isHidden;\n\n      var isModal = !_this.opts.inline;\n\n      if ( // If update is connected to showing the Informer - let the screen reader calmly read it.\n      isInformerHidden && ( // If we are in a modal - always superfocus without concern for other elements\n      // on the page (user is unlikely to want to interact with the rest of the page)\n      isModal // If we are already inside of Uppy, or\n      || isFocusInUppy // If we are not focused on anything BUT we have already, at least once, focused on uppy\n      //   1. We focus when isFocusNowhere, because when the element we were focused\n      //      on disappears (e.g. an overlay), - focus gets lost. If user is typing\n      //      something somewhere else on the page, - focus won't be 'nowhere'.\n      //   2. We only focus when focus is nowhere AND this.ifFocusedOnUppyRecently,\n      //      to avoid focus jumps if we do something else on the page.\n      //   [Practical check] Without '&& this.ifFocusedOnUppyRecently', in Safari, in inline mode,\n      //                     when file is uploading, - navigate via tab to the checkbox,\n      //                     try to press space multiple times. Focus will jump to Uppy.\n      || isFocusNowhere && _this.ifFocusedOnUppyRecently)) {\n        _this.superFocus(_this.el, _this.getPluginState().activeOverlayType);\n      } else {\n        _this.superFocus.cancel();\n      }\n    };\n\n    _this.afterUpdate = function () {\n      if (_this.opts.disabled && !_this.dashboardIsDisabled) {\n        _this.disableAllFocusableElements(true);\n\n        return;\n      }\n\n      if (!_this.opts.disabled && _this.dashboardIsDisabled) {\n        _this.disableAllFocusableElements(false);\n      }\n\n      _this.superFocusOnEachUpdate();\n    };\n\n    _this.saveFileCard = function (meta, fileID) {\n      _this.uppy.setFileMeta(fileID, meta);\n\n      _this.toggleFileCard(false, fileID);\n    };\n\n    Object.defineProperty(_assertThisInitialized(_this), _attachRenderFunctionToTarget, {\n      writable: true,\n      value: function value(target) {\n        var plugin = _this.uppy.getPlugin(target.id);\n\n        return _objectSpread(_objectSpread({}, target), {}, {\n          icon: plugin.icon || _this.opts.defaultPickerIcon,\n          render: plugin.render\n        });\n      }\n    });\n    Object.defineProperty(_assertThisInitialized(_this), _isTargetSupported, {\n      writable: true,\n      value: function value(target) {\n        var plugin = _this.uppy.getPlugin(target.id); // If the plugin does not provide a `supported` check, assume the plugin works everywhere.\n\n\n        if (typeof plugin.isSupported !== 'function') {\n          return true;\n        }\n\n        return plugin.isSupported();\n      }\n    });\n    Object.defineProperty(_assertThisInitialized(_this), _getAcquirers, {\n      writable: true,\n      value: memoize(function (targets) {\n        return targets.filter(function (target) {\n          return target.type === 'acquirer' && _classPrivateFieldLooseBase(_assertThisInitialized(_this), _isTargetSupported)[_isTargetSupported](target);\n        }).map(_classPrivateFieldLooseBase(_assertThisInitialized(_this), _attachRenderFunctionToTarget)[_attachRenderFunctionToTarget]);\n      })\n    });\n    Object.defineProperty(_assertThisInitialized(_this), _getProgressIndicators, {\n      writable: true,\n      value: memoize(function (targets) {\n        return targets.filter(function (target) {\n          return target.type === 'progressindicator';\n        }).map(_classPrivateFieldLooseBase(_assertThisInitialized(_this), _attachRenderFunctionToTarget)[_attachRenderFunctionToTarget]);\n      })\n    });\n    Object.defineProperty(_assertThisInitialized(_this), _getEditors, {\n      writable: true,\n      value: memoize(function (targets) {\n        return targets.filter(function (target) {\n          return target.type === 'editor';\n        }).map(_classPrivateFieldLooseBase(_assertThisInitialized(_this), _attachRenderFunctionToTarget)[_attachRenderFunctionToTarget]);\n      })\n    });\n\n    _this.render = function (state) {\n      var pluginState = _this.getPluginState();\n\n      var files = state.files,\n          capabilities = state.capabilities,\n          allowNewUpload = state.allowNewUpload;\n\n      var _this$uppy$getObjectO = _this.uppy.getObjectOfFilesPerState(),\n          newFiles = _this$uppy$getObjectO.newFiles,\n          uploadStartedFiles = _this$uppy$getObjectO.uploadStartedFiles,\n          completeFiles = _this$uppy$getObjectO.completeFiles,\n          erroredFiles = _this$uppy$getObjectO.erroredFiles,\n          inProgressFiles = _this$uppy$getObjectO.inProgressFiles,\n          inProgressNotPausedFiles = _this$uppy$getObjectO.inProgressNotPausedFiles,\n          processingFiles = _this$uppy$getObjectO.processingFiles,\n          isUploadStarted = _this$uppy$getObjectO.isUploadStarted,\n          isAllComplete = _this$uppy$getObjectO.isAllComplete,\n          isAllErrored = _this$uppy$getObjectO.isAllErrored,\n          isAllPaused = _this$uppy$getObjectO.isAllPaused;\n\n      var acquirers = _classPrivateFieldLooseBase(_assertThisInitialized(_this), _getAcquirers)[_getAcquirers](pluginState.targets);\n\n      var progressindicators = _classPrivateFieldLooseBase(_assertThisInitialized(_this), _getProgressIndicators)[_getProgressIndicators](pluginState.targets);\n\n      var editors = _classPrivateFieldLooseBase(_assertThisInitialized(_this), _getEditors)[_getEditors](pluginState.targets);\n\n      var theme;\n\n      if (_this.opts.theme === 'auto') {\n        theme = capabilities.darkMode ? 'dark' : 'light';\n      } else {\n        theme = _this.opts.theme;\n      }\n\n      if (['files', 'folders', 'both'].indexOf(_this.opts.fileManagerSelectionType) < 0) {\n        _this.opts.fileManagerSelectionType = 'files'; // eslint-disable-next-line no-console\n\n        console.warn(\"Unsupported option for \\\"fileManagerSelectionType\\\". Using default of \\\"\".concat(_this.opts.fileManagerSelectionType, \"\\\".\"));\n      }\n\n      return DashboardUI({\n        state: state,\n        isHidden: pluginState.isHidden,\n        files: files,\n        newFiles: newFiles,\n        uploadStartedFiles: uploadStartedFiles,\n        completeFiles: completeFiles,\n        erroredFiles: erroredFiles,\n        inProgressFiles: inProgressFiles,\n        inProgressNotPausedFiles: inProgressNotPausedFiles,\n        processingFiles: processingFiles,\n        isUploadStarted: isUploadStarted,\n        isAllComplete: isAllComplete,\n        isAllErrored: isAllErrored,\n        isAllPaused: isAllPaused,\n        totalFileCount: Object.keys(files).length,\n        totalProgress: state.totalProgress,\n        allowNewUpload: allowNewUpload,\n        acquirers: acquirers,\n        theme: theme,\n        disabled: _this.opts.disabled,\n        disableLocalFiles: _this.opts.disableLocalFiles,\n        direction: _this.opts.direction,\n        activePickerPanel: pluginState.activePickerPanel,\n        showFileEditor: pluginState.showFileEditor,\n        saveFileEditor: _this.saveFileEditor,\n        disableAllFocusableElements: _this.disableAllFocusableElements,\n        animateOpenClose: _this.opts.animateOpenClose,\n        isClosing: pluginState.isClosing,\n        progressindicators: progressindicators,\n        editors: editors,\n        autoProceed: _this.uppy.opts.autoProceed,\n        id: _this.id,\n        closeModal: _this.requestCloseModal,\n        handleClickOutside: _this.handleClickOutside,\n        handleInputChange: _this.handleInputChange,\n        handlePaste: _this.handlePaste,\n        inline: _this.opts.inline,\n        showPanel: _this.showPanel,\n        hideAllPanels: _this.hideAllPanels,\n        i18n: _this.i18n,\n        i18nArray: _this.i18nArray,\n        uppy: _this.uppy,\n        note: _this.opts.note,\n        recoveredState: state.recoveredState,\n        metaFields: pluginState.metaFields,\n        resumableUploads: capabilities.resumableUploads || false,\n        individualCancellation: capabilities.individualCancellation,\n        isMobileDevice: capabilities.isMobileDevice,\n        fileCardFor: pluginState.fileCardFor,\n        toggleFileCard: _this.toggleFileCard,\n        toggleAddFilesPanel: _this.toggleAddFilesPanel,\n        showAddFilesPanel: pluginState.showAddFilesPanel,\n        saveFileCard: _this.saveFileCard,\n        openFileEditor: _this.openFileEditor,\n        canEditFile: _this.canEditFile,\n        width: _this.opts.width,\n        height: _this.opts.height,\n        showLinkToFileUploadResult: _this.opts.showLinkToFileUploadResult,\n        fileManagerSelectionType: _this.opts.fileManagerSelectionType,\n        proudlyDisplayPoweredByUppy: _this.opts.proudlyDisplayPoweredByUppy,\n        hideCancelButton: _this.opts.hideCancelButton,\n        hideRetryButton: _this.opts.hideRetryButton,\n        hidePauseResumeButton: _this.opts.hidePauseResumeButton,\n        showRemoveButtonAfterComplete: _this.opts.showRemoveButtonAfterComplete,\n        containerWidth: pluginState.containerWidth,\n        containerHeight: pluginState.containerHeight,\n        areInsidesReadyToBeVisible: pluginState.areInsidesReadyToBeVisible,\n        isTargetDOMEl: _this.isTargetDOMEl,\n        parentElement: _this.el,\n        allowedFileTypes: _this.uppy.opts.restrictions.allowedFileTypes,\n        maxNumberOfFiles: _this.uppy.opts.restrictions.maxNumberOfFiles,\n        requiredMetaFields: _this.uppy.opts.restrictions.requiredMetaFields,\n        showSelectedFiles: _this.opts.showSelectedFiles,\n        handleCancelRestore: _this.handleCancelRestore,\n        handleRequestThumbnail: _this.handleRequestThumbnail,\n        handleCancelThumbnail: _this.handleCancelThumbnail,\n        // drag props\n        isDraggingOver: pluginState.isDraggingOver,\n        handleDragOver: _this.handleDragOver,\n        handleDragLeave: _this.handleDragLeave,\n        handleDrop: _this.handleDrop\n      });\n    };\n\n    _this.discoverProviderPlugins = function () {\n      _this.uppy.iteratePlugins(function (plugin) {\n        if (plugin && !plugin.target && plugin.opts && plugin.opts.target === _this.constructor) {\n          _this.addTarget(plugin);\n        }\n      });\n    };\n\n    _this.install = function () {\n      // Set default state for Dashboard\n      _this.setPluginState({\n        isHidden: true,\n        fileCardFor: null,\n        activeOverlayType: null,\n        showAddFilesPanel: false,\n        activePickerPanel: false,\n        showFileEditor: false,\n        metaFields: _this.opts.metaFields,\n        targets: [],\n        // We'll make them visible once .containerWidth is determined\n        areInsidesReadyToBeVisible: false,\n        isDraggingOver: false\n      });\n\n      var _this$opts = _this.opts,\n          inline = _this$opts.inline,\n          closeAfterFinish = _this$opts.closeAfterFinish;\n\n      if (inline && closeAfterFinish) {\n        throw new Error('[Dashboard] `closeAfterFinish: true` cannot be used on an inline Dashboard, because an inline Dashboard cannot be closed at all. Either set `inline: false`, or disable the `closeAfterFinish` option.');\n      }\n\n      var _this$uppy$opts = _this.uppy.opts,\n          allowMultipleUploads = _this$uppy$opts.allowMultipleUploads,\n          allowMultipleUploadBatches = _this$uppy$opts.allowMultipleUploadBatches;\n\n      if ((allowMultipleUploads || allowMultipleUploadBatches) && closeAfterFinish) {\n        _this.uppy.log('[Dashboard] When using `closeAfterFinish`, we recommended setting the `allowMultipleUploadBatches` option to `false` in the Uppy constructor. See https://uppy.io/docs/uppy/#allowMultipleUploads-true', 'warning');\n      }\n\n      var target = _this.opts.target;\n\n      if (target) {\n        _this.mount(target, _assertThisInitialized(_this));\n      }\n\n      var plugins = _this.opts.plugins || [];\n      plugins.forEach(function (pluginID) {\n        var plugin = _this.uppy.getPlugin(pluginID);\n\n        if (plugin) {\n          plugin.mount(_assertThisInitialized(_this), plugin);\n        }\n      });\n\n      if (!_this.opts.disableStatusBar) {\n        _this.uppy.use(StatusBar, {\n          id: \"\".concat(_this.id, \":StatusBar\"),\n          target: _assertThisInitialized(_this),\n          hideUploadButton: _this.opts.hideUploadButton,\n          hideRetryButton: _this.opts.hideRetryButton,\n          hidePauseResumeButton: _this.opts.hidePauseResumeButton,\n          hideCancelButton: _this.opts.hideCancelButton,\n          showProgressDetails: _this.opts.showProgressDetails,\n          hideAfterFinish: _this.opts.hideProgressAfterFinish,\n          locale: _this.opts.locale,\n          doneButtonHandler: _this.opts.doneButtonHandler\n        });\n      }\n\n      if (!_this.opts.disableInformer) {\n        _this.uppy.use(Informer, {\n          id: \"\".concat(_this.id, \":Informer\"),\n          target: _assertThisInitialized(_this)\n        });\n      }\n\n      if (!_this.opts.disableThumbnailGenerator) {\n        _this.uppy.use(ThumbnailGenerator, {\n          id: \"\".concat(_this.id, \":ThumbnailGenerator\"),\n          thumbnailWidth: _this.opts.thumbnailWidth,\n          thumbnailType: _this.opts.thumbnailType,\n          waitForThumbnailsBeforeUpload: _this.opts.waitForThumbnailsBeforeUpload,\n          // If we don't block on thumbnails, we can lazily generate them\n          lazy: !_this.opts.waitForThumbnailsBeforeUpload\n        });\n      } // Dark Mode / theme\n\n\n      _this.darkModeMediaQuery = typeof window !== 'undefined' && window.matchMedia ? window.matchMedia('(prefers-color-scheme: dark)') : null;\n      var isDarkModeOnFromTheStart = _this.darkModeMediaQuery ? _this.darkModeMediaQuery.matches : false;\n\n      _this.uppy.log(\"[Dashboard] Dark mode is \".concat(isDarkModeOnFromTheStart ? 'on' : 'off'));\n\n      _this.setDarkModeCapability(isDarkModeOnFromTheStart);\n\n      if (_this.opts.theme === 'auto') {\n        _this.darkModeMediaQuery.addListener(_this.handleSystemDarkModeChange);\n      }\n\n      _this.discoverProviderPlugins();\n\n      _this.initEvents();\n    };\n\n    _this.uninstall = function () {\n      if (!_this.opts.disableInformer) {\n        var informer = _this.uppy.getPlugin(\"\".concat(_this.id, \":Informer\")); // Checking if this plugin exists, in case it was removed by uppy-core\n        // before the Dashboard was.\n\n\n        if (informer) _this.uppy.removePlugin(informer);\n      }\n\n      if (!_this.opts.disableStatusBar) {\n        var statusBar = _this.uppy.getPlugin(\"\".concat(_this.id, \":StatusBar\"));\n\n        if (statusBar) _this.uppy.removePlugin(statusBar);\n      }\n\n      if (!_this.opts.disableThumbnailGenerator) {\n        var thumbnail = _this.uppy.getPlugin(\"\".concat(_this.id, \":ThumbnailGenerator\"));\n\n        if (thumbnail) _this.uppy.removePlugin(thumbnail);\n      }\n\n      var plugins = _this.opts.plugins || [];\n      plugins.forEach(function (pluginID) {\n        var plugin = _this.uppy.getPlugin(pluginID);\n\n        if (plugin) plugin.unmount();\n      });\n\n      if (_this.opts.theme === 'auto') {\n        _this.darkModeMediaQuery.removeListener(_this.handleSystemDarkModeChange);\n      }\n\n      _this.unmount();\n\n      _this.removeEvents();\n    };\n\n    _this.id = _this.opts.id || 'Dashboard';\n    _this.title = 'Dashboard';\n    _this.type = 'orchestrator';\n    _this.modalName = \"uppy-Dashboard-\".concat(nanoid());\n    _this.defaultLocale = {\n      strings: {\n        closeModal: 'Close Modal',\n        importFrom: 'Import from %{name}',\n        addingMoreFiles: 'Adding more files',\n        addMoreFiles: 'Add more files',\n        dashboardWindowTitle: 'File Uploader Window (Press escape to close)',\n        dashboardTitle: 'File Uploader',\n        copyLinkToClipboardSuccess: 'Link copied to clipboard',\n        copyLinkToClipboardFallback: 'Copy the URL below',\n        copyLink: 'Copy link',\n        back: 'Back',\n        addMore: 'Add more',\n        removeFile: 'Remove file %{file}',\n        editFile: 'Edit file',\n        editFileWithFilename: 'Edit file %{file}',\n        editing: 'Editing %{file}',\n        finishEditingFile: 'Finish editing file',\n        save: 'Save',\n        saveChanges: 'Save changes',\n        cancel: 'Cancel',\n        myDevice: 'My Device',\n        dropPasteFiles: 'Drop files here or %{browseFiles}',\n        dropPasteFolders: 'Drop files here or %{browseFolders}',\n        dropPasteBoth: 'Drop files here, %{browseFiles} or %{browseFolders}',\n        dropPasteImportFiles: 'Drop files here, %{browseFiles} or import from:',\n        dropPasteImportFolders: 'Drop files here, %{browseFolders} or import from:',\n        dropPasteImportBoth: 'Drop files here, %{browseFiles}, %{browseFolders} or import from:',\n        importFiles: 'Import files from:',\n        dropHint: 'Drop your files here',\n        browseFiles: 'browse files',\n        browseFolders: 'browse folders',\n        uploadComplete: 'Upload complete',\n        uploadPaused: 'Upload paused',\n        resumeUpload: 'Resume upload',\n        pauseUpload: 'Pause upload',\n        retryUpload: 'Retry upload',\n        cancelUpload: 'Cancel upload',\n        xFilesSelected: {\n          0: '%{smart_count} file selected',\n          1: '%{smart_count} files selected'\n        },\n        uploadingXFiles: {\n          0: 'Uploading %{smart_count} file',\n          1: 'Uploading %{smart_count} files'\n        },\n        processingXFiles: {\n          0: 'Processing %{smart_count} file',\n          1: 'Processing %{smart_count} files'\n        },\n        recoveredXFiles: {\n          0: 'We could not fully recover 1 file. Please re-select it and resume the upload.',\n          1: 'We could not fully recover %{smart_count} files. Please re-select them and resume the upload.'\n        },\n        recoveredAllFiles: 'We restored all files. You can now resume the upload.',\n        sessionRestored: 'Session restored',\n        reSelect: 'Re-select',\n        poweredBy: 'Powered by %{uppy}'\n      }\n    }; // set default options\n\n    var defaultOptions = {\n      target: 'body',\n      metaFields: [],\n      trigger: null,\n      inline: false,\n      width: 750,\n      height: 550,\n      thumbnailWidth: 280,\n      thumbnailType: 'image/jpeg',\n      waitForThumbnailsBeforeUpload: false,\n      defaultPickerIcon: defaultPickerIcon,\n      showLinkToFileUploadResult: false,\n      showProgressDetails: false,\n      hideUploadButton: false,\n      hideCancelButton: false,\n      hideRetryButton: false,\n      hidePauseResumeButton: false,\n      hideProgressAfterFinish: false,\n      doneButtonHandler: function doneButtonHandler() {\n        _this.uppy.reset();\n\n        _this.requestCloseModal();\n      },\n      note: null,\n      closeModalOnClickOutside: false,\n      closeAfterFinish: false,\n      disableStatusBar: false,\n      disableInformer: false,\n      disableThumbnailGenerator: false,\n      disablePageScrollWhenModalOpen: true,\n      animateOpenClose: true,\n      fileManagerSelectionType: 'files',\n      proudlyDisplayPoweredByUppy: true,\n      onRequestCloseModal: function onRequestCloseModal() {\n        return _this.closeModal();\n      },\n      showSelectedFiles: true,\n      showRemoveButtonAfterComplete: false,\n      browserBackButtonClose: false,\n      theme: 'light',\n      autoOpenFileEditor: false,\n      disabled: false,\n      disableLocalFiles: false\n    }; // merge default options with the ones set by user\n\n    _this.opts = _objectSpread(_objectSpread({}, defaultOptions), _opts);\n\n    _this.i18nInit();\n\n    _this.superFocus = createSuperFocus();\n    _this.ifFocusedOnUppyRecently = false; // Timeouts\n\n    _this.makeDashboardInsidesVisibleAnywayTimeout = null;\n    _this.removeDragOverClassTimeout = null;\n    return _this;\n  }\n\n  _createClass(Dashboard, [{\n    key: \"onMount\",\n    value: function onMount() {\n      // Set the text direction if the page has not defined one.\n      var element = this.el;\n      var direction = getTextDirection(element);\n\n      if (!direction) {\n        element.dir = 'ltr';\n      }\n    }\n  }]);\n\n  return Dashboard;\n}(UIPlugin)), _class.VERSION = \"2.1.1\", _temp);","map":{"version":3,"sources":["/Users/albertshay/Desktop/silkroad/client/node_modules/@uppy/dashboard/lib/index.js"],"names":["_class","_openFileEditorWhenFilesAdded","_attachRenderFunctionToTarget","_isTargetSupported","_getAcquirers","_getProgressIndicators","_getEditors","_temp","_classPrivateFieldLooseBase","receiver","privateKey","Object","prototype","hasOwnProperty","call","TypeError","id","_classPrivateFieldLooseKey","name","require","h","UIPlugin","StatusBar","Informer","ThumbnailGenerator","findAllDOMElements","toArray","getDroppedFiles","getTextDirection","nanoid","trapFocus","createSuperFocus","memoize","default","FOCUSABLE_ELEMENTS","DashboardUI","TAB_KEY","ESC_KEY","createPromise","o","promise","Promise","resolve","reject","defaultPickerIcon","focusable","width","height","viewBox","d","module","exports","uppy","_opts","removeTarget","plugin","pluginState","getPluginState","newTargets","targets","filter","target","setPluginState","addTarget","callerPluginId","constructor","callerPluginName","title","callerPluginType","type","msg","log","state","slice","push","el","hideAllPanels","update","activePickerPanel","showAddFilesPanel","activeOverlayType","fileCardFor","showFileEditor","showPanel","canEditFile","file","editors","some","getPlugin","openFileEditor","forEach","editor","selectFile","saveFileEditor","save","openModal","savedScrollPosition","window","pageYOffset","savedActiveElement","document","activeElement","opts","disablePageScrollWhenModalOpen","body","classList","add","animateOpenClose","isClosing","handler","isHidden","removeEventListener","addEventListener","browserBackButtonClose","updateBrowserHistory","handleKeyDownInModal","emit","closeModal","manualClose","remove","superFocus","cancel","focus","_history$state","history","modalName","back","isModalOpen","requestCloseModal","onRequestCloseModal","setDarkModeCapability","isDarkModeOn","getState","capabilities","setState","darkMode","handleSystemDarkModeChange","event","isDarkModeOnNow","matches","toggleFileCard","show","fileID","getFile","toggleAddFilesPanel","addFiles","files","descriptors","map","source","data","meta","relativePath","err","startListeningToResize","resizeObserver","ResizeObserver","entries","uppyDashboardInnerEl","contentRect","containerWidth","containerHeight","areInsidesReadyToBeVisible","observe","querySelector","makeDashboardInsidesVisibleAnywayTimeout","setTimeout","isModalAndClosed","inline","stopListeningToResize","disconnect","clearTimeout","recordIfFocusedOnUppyRecently","contains","ifFocusedOnUppyRecently","disableAllFocusableElements","disable","focusableNodes","querySelectorAll","node","currentTabIndex","getAttribute","dataset","inertTabindex","setAttribute","removeAttribute","dashboardIsDisabled","_history$state2","pushState","handlePopState","_event$state","keyCode","forModal","handleClickOutside","closeModalOnClickOutside","handlePaste","iteratePlugins","handleRootPaste","clipboardData","handleInputChange","preventDefault","handleDragOver","stopPropagation","disabled","disableLocalFiles","allowNewUpload","dataTransfer","dropEffect","removeDragOverClassTimeout","isDraggingOver","handleDragLeave","handleDrop","handleRootDrop","executedDropErrorOnce","logDropError","error","info","message","then","length","handleRequestThumbnail","waitForThumbnailsBeforeUpload","handleCancelThumbnail","handleKeyDownInInline","forInline","handlePasteOnBody","isFocusInOverlay","handleComplete","failed","closeAfterFinish","handleCancelRestore","defineProperty","writable","value","firstFile","initEvents","trigger","showModalTrigger","on","autoOpenFileEditor","removeEvents","off","superFocusOnEachUpdate","isFocusInUppy","isFocusNowhere","isInformerHidden","isModal","afterUpdate","saveFileCard","setFileMeta","icon","render","isSupported","getObjectOfFilesPerState","newFiles","uploadStartedFiles","completeFiles","erroredFiles","inProgressFiles","inProgressNotPausedFiles","processingFiles","isUploadStarted","isAllComplete","isAllErrored","isAllPaused","acquirers","progressindicators","theme","indexOf","fileManagerSelectionType","console","warn","totalFileCount","keys","totalProgress","direction","autoProceed","i18n","i18nArray","note","recoveredState","metaFields","resumableUploads","individualCancellation","isMobileDevice","showLinkToFileUploadResult","proudlyDisplayPoweredByUppy","hideCancelButton","hideRetryButton","hidePauseResumeButton","showRemoveButtonAfterComplete","isTargetDOMEl","parentElement","allowedFileTypes","restrictions","maxNumberOfFiles","requiredMetaFields","showSelectedFiles","discoverProviderPlugins","install","Error","allowMultipleUploads","allowMultipleUploadBatches","mount","plugins","pluginID","disableStatusBar","use","hideUploadButton","showProgressDetails","hideAfterFinish","hideProgressAfterFinish","locale","doneButtonHandler","disableInformer","disableThumbnailGenerator","thumbnailWidth","thumbnailType","lazy","darkModeMediaQuery","matchMedia","isDarkModeOnFromTheStart","addListener","uninstall","informer","removePlugin","statusBar","thumbnail","unmount","removeListener","defaultLocale","strings","importFrom","addingMoreFiles","addMoreFiles","dashboardWindowTitle","dashboardTitle","copyLinkToClipboardSuccess","copyLinkToClipboardFallback","copyLink","addMore","removeFile","editFile","editFileWithFilename","editing","finishEditingFile","saveChanges","myDevice","dropPasteFiles","dropPasteFolders","dropPasteBoth","dropPasteImportFiles","dropPasteImportFolders","dropPasteImportBoth","importFiles","dropHint","browseFiles","browseFolders","uploadComplete","uploadPaused","resumeUpload","pauseUpload","retryUpload","cancelUpload","xFilesSelected","uploadingXFiles","processingXFiles","recoveredXFiles","recoveredAllFiles","sessionRestored","reSelect","poweredBy","defaultOptions","reset","i18nInit","element","dir","VERSION"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _class, _openFileEditorWhenFilesAdded, _attachRenderFunctionToTarget, _isTargetSupported, _getAcquirers, _getProgressIndicators, _getEditors, _temp;\n\nfunction _classPrivateFieldLooseBase(receiver, privateKey) { if (!Object.prototype.hasOwnProperty.call(receiver, privateKey)) { throw new TypeError(\"attempted to use private field on non-instance\"); } return receiver; }\n\nvar id = 0;\n\nfunction _classPrivateFieldLooseKey(name) { return \"__private_\" + id++ + \"_\" + name; }\n\nconst {\n  h\n} = require('preact');\n\nconst {\n  UIPlugin\n} = require('@uppy/core');\n\nconst StatusBar = require('@uppy/status-bar');\n\nconst Informer = require('@uppy/informer');\n\nconst ThumbnailGenerator = require('@uppy/thumbnail-generator');\n\nconst findAllDOMElements = require('@uppy/utils/lib/findAllDOMElements');\n\nconst toArray = require('@uppy/utils/lib/toArray');\n\nconst getDroppedFiles = require('@uppy/utils/lib/getDroppedFiles');\n\nconst getTextDirection = require('@uppy/utils/lib/getTextDirection');\n\nconst {\n  nanoid\n} = require('nanoid');\n\nconst trapFocus = require('./utils/trapFocus');\n\nconst createSuperFocus = require('./utils/createSuperFocus');\n\nconst memoize = require('memoize-one').default || require('memoize-one');\n\nconst FOCUSABLE_ELEMENTS = require('@uppy/utils/lib/FOCUSABLE_ELEMENTS');\n\nconst DashboardUI = require('./components/Dashboard');\n\nconst TAB_KEY = 9;\nconst ESC_KEY = 27;\n\nfunction createPromise() {\n  const o = {};\n  o.promise = new Promise((resolve, reject) => {\n    o.resolve = resolve;\n    o.reject = reject;\n  });\n  return o;\n}\n\nfunction defaultPickerIcon() {\n  return h(\"svg\", {\n    \"aria-hidden\": \"true\",\n    focusable: \"false\",\n    width: \"30\",\n    height: \"30\",\n    viewBox: \"0 0 30 30\"\n  }, h(\"path\", {\n    d: \"M15 30c8.284 0 15-6.716 15-15 0-8.284-6.716-15-15-15C6.716 0 0 6.716 0 15c0 8.284 6.716 15 15 15zm4.258-12.676v6.846h-8.426v-6.846H5.204l9.82-12.364 9.82 12.364H19.26z\"\n  }));\n}\n/**\n * Dashboard UI with previews, metadata editing, tabs for various services and more\n */\n\n\nmodule.exports = (_temp = (_openFileEditorWhenFilesAdded = /*#__PURE__*/_classPrivateFieldLooseKey(\"openFileEditorWhenFilesAdded\"), _attachRenderFunctionToTarget = /*#__PURE__*/_classPrivateFieldLooseKey(\"attachRenderFunctionToTarget\"), _isTargetSupported = /*#__PURE__*/_classPrivateFieldLooseKey(\"isTargetSupported\"), _getAcquirers = /*#__PURE__*/_classPrivateFieldLooseKey(\"getAcquirers\"), _getProgressIndicators = /*#__PURE__*/_classPrivateFieldLooseKey(\"getProgressIndicators\"), _getEditors = /*#__PURE__*/_classPrivateFieldLooseKey(\"getEditors\"), _class = class Dashboard extends UIPlugin {\n  constructor(uppy, _opts) {\n    super(uppy, _opts);\n\n    this.removeTarget = plugin => {\n      const pluginState = this.getPluginState(); // filter out the one we want to remove\n\n      const newTargets = pluginState.targets.filter(target => target.id !== plugin.id);\n      this.setPluginState({\n        targets: newTargets\n      });\n    };\n\n    this.addTarget = plugin => {\n      const callerPluginId = plugin.id || plugin.constructor.name;\n      const callerPluginName = plugin.title || callerPluginId;\n      const callerPluginType = plugin.type;\n\n      if (callerPluginType !== 'acquirer' && callerPluginType !== 'progressindicator' && callerPluginType !== 'editor') {\n        const msg = 'Dashboard: can only be targeted by plugins of types: acquirer, progressindicator, editor';\n        this.uppy.log(msg, 'error');\n        return;\n      }\n\n      const target = {\n        id: callerPluginId,\n        name: callerPluginName,\n        type: callerPluginType\n      };\n      const state = this.getPluginState();\n      const newTargets = state.targets.slice();\n      newTargets.push(target);\n      this.setPluginState({\n        targets: newTargets\n      });\n      return this.el;\n    };\n\n    this.hideAllPanels = () => {\n      const state = this.getPluginState();\n      const update = {\n        activePickerPanel: false,\n        showAddFilesPanel: false,\n        activeOverlayType: null,\n        fileCardFor: null,\n        showFileEditor: false\n      };\n\n      if (state.activePickerPanel === update.activePickerPanel && state.showAddFilesPanel === update.showAddFilesPanel && state.showFileEditor === update.showFileEditor && state.activeOverlayType === update.activeOverlayType) {\n        // avoid doing a state update if nothing changed\n        return;\n      }\n\n      this.setPluginState(update);\n    };\n\n    this.showPanel = id => {\n      const {\n        targets\n      } = this.getPluginState();\n      const activePickerPanel = targets.filter(target => {\n        return target.type === 'acquirer' && target.id === id;\n      })[0];\n      this.setPluginState({\n        activePickerPanel,\n        activeOverlayType: 'PickerPanel'\n      });\n    };\n\n    this.canEditFile = file => {\n      const {\n        targets\n      } = this.getPluginState();\n\n      const editors = _classPrivateFieldLooseBase(this, _getEditors)[_getEditors](targets);\n\n      return editors.some(target => this.uppy.getPlugin(target.id).canEditFile(file));\n    };\n\n    this.openFileEditor = file => {\n      const {\n        targets\n      } = this.getPluginState();\n\n      const editors = _classPrivateFieldLooseBase(this, _getEditors)[_getEditors](targets);\n\n      this.setPluginState({\n        showFileEditor: true,\n        fileCardFor: file.id || null,\n        activeOverlayType: 'FileEditor'\n      });\n      editors.forEach(editor => {\n        this.uppy.getPlugin(editor.id).selectFile(file);\n      });\n    };\n\n    this.saveFileEditor = () => {\n      const {\n        targets\n      } = this.getPluginState();\n\n      const editors = _classPrivateFieldLooseBase(this, _getEditors)[_getEditors](targets);\n\n      editors.forEach(editor => {\n        this.uppy.getPlugin(editor.id).save();\n      });\n      this.hideAllPanels();\n    };\n\n    this.openModal = () => {\n      const {\n        promise,\n        resolve\n      } = createPromise(); // save scroll position\n\n      this.savedScrollPosition = window.pageYOffset; // save active element, so we can restore focus when modal is closed\n\n      this.savedActiveElement = document.activeElement;\n\n      if (this.opts.disablePageScrollWhenModalOpen) {\n        document.body.classList.add('uppy-Dashboard-isFixed');\n      }\n\n      if (this.opts.animateOpenClose && this.getPluginState().isClosing) {\n        const handler = () => {\n          this.setPluginState({\n            isHidden: false\n          });\n          this.el.removeEventListener('animationend', handler, false);\n          resolve();\n        };\n\n        this.el.addEventListener('animationend', handler, false);\n      } else {\n        this.setPluginState({\n          isHidden: false\n        });\n        resolve();\n      }\n\n      if (this.opts.browserBackButtonClose) {\n        this.updateBrowserHistory();\n      } // handle ESC and TAB keys in modal dialog\n\n\n      document.addEventListener('keydown', this.handleKeyDownInModal);\n      this.uppy.emit('dashboard:modal-open');\n      return promise;\n    };\n\n    this.closeModal = (opts = {}) => {\n      const {\n        // Whether the modal is being closed by the user (`true`) or by other means (e.g. browser back button)\n        manualClose = true\n      } = opts;\n      const {\n        isHidden,\n        isClosing\n      } = this.getPluginState();\n\n      if (isHidden || isClosing) {\n        // short-circuit if animation is ongoing\n        return;\n      }\n\n      const {\n        promise,\n        resolve\n      } = createPromise();\n\n      if (this.opts.disablePageScrollWhenModalOpen) {\n        document.body.classList.remove('uppy-Dashboard-isFixed');\n      }\n\n      if (this.opts.animateOpenClose) {\n        this.setPluginState({\n          isClosing: true\n        });\n\n        const handler = () => {\n          this.setPluginState({\n            isHidden: true,\n            isClosing: false\n          });\n          this.superFocus.cancel();\n          this.savedActiveElement.focus();\n          this.el.removeEventListener('animationend', handler, false);\n          resolve();\n        };\n\n        this.el.addEventListener('animationend', handler, false);\n      } else {\n        this.setPluginState({\n          isHidden: true\n        });\n        this.superFocus.cancel();\n        this.savedActiveElement.focus();\n        resolve();\n      } // handle ESC and TAB keys in modal dialog\n\n\n      document.removeEventListener('keydown', this.handleKeyDownInModal);\n\n      if (manualClose) {\n        if (this.opts.browserBackButtonClose) {\n          var _history$state;\n\n          // Make sure that the latest entry in the history state is our modal name\n          // eslint-disable-next-line no-restricted-globals\n          if ((_history$state = history.state) != null && _history$state[this.modalName]) {\n            // Go back in history to clear out the entry we created (ultimately closing the modal)\n            // eslint-disable-next-line no-restricted-globals\n            history.back();\n          }\n        }\n      }\n\n      this.uppy.emit('dashboard:modal-closed');\n      return promise;\n    };\n\n    this.isModalOpen = () => {\n      return !this.getPluginState().isHidden || false;\n    };\n\n    this.requestCloseModal = () => {\n      if (this.opts.onRequestCloseModal) {\n        return this.opts.onRequestCloseModal();\n      }\n\n      return this.closeModal();\n    };\n\n    this.setDarkModeCapability = isDarkModeOn => {\n      const {\n        capabilities\n      } = this.uppy.getState();\n      this.uppy.setState({\n        capabilities: { ...capabilities,\n          darkMode: isDarkModeOn\n        }\n      });\n    };\n\n    this.handleSystemDarkModeChange = event => {\n      const isDarkModeOnNow = event.matches;\n      this.uppy.log(`[Dashboard] Dark mode is ${isDarkModeOnNow ? 'on' : 'off'}`);\n      this.setDarkModeCapability(isDarkModeOnNow);\n    };\n\n    this.toggleFileCard = (show, fileID) => {\n      const file = this.uppy.getFile(fileID);\n\n      if (show) {\n        this.uppy.emit('dashboard:file-edit-start', file);\n      } else {\n        this.uppy.emit('dashboard:file-edit-complete', file);\n      }\n\n      this.setPluginState({\n        fileCardFor: show ? fileID : null,\n        activeOverlayType: show ? 'FileCard' : null\n      });\n    };\n\n    this.toggleAddFilesPanel = show => {\n      this.setPluginState({\n        showAddFilesPanel: show,\n        activeOverlayType: show ? 'AddFiles' : null\n      });\n    };\n\n    this.addFiles = files => {\n      const descriptors = files.map(file => ({\n        source: this.id,\n        name: file.name,\n        type: file.type,\n        data: file,\n        meta: {\n          // path of the file relative to the ancestor directory the user selected.\n          // e.g. 'docs/Old Prague/airbnb.pdf'\n          relativePath: file.relativePath || null\n        }\n      }));\n\n      try {\n        this.uppy.addFiles(descriptors);\n      } catch (err) {\n        this.uppy.log(err);\n      }\n    };\n\n    this.startListeningToResize = () => {\n      // Watch for Dashboard container (`.uppy-Dashboard-inner`) resize\n      // and update containerWidth/containerHeight in plugin state accordingly.\n      // Emits first event on initialization.\n      this.resizeObserver = new ResizeObserver(entries => {\n        const uppyDashboardInnerEl = entries[0];\n        const {\n          width,\n          height\n        } = uppyDashboardInnerEl.contentRect;\n        this.uppy.log(`[Dashboard] resized: ${width} / ${height}`, 'debug');\n        this.setPluginState({\n          containerWidth: width,\n          containerHeight: height,\n          areInsidesReadyToBeVisible: true\n        });\n      });\n      this.resizeObserver.observe(this.el.querySelector('.uppy-Dashboard-inner')); // If ResizeObserver fails to emit an event telling us what size to use - default to the mobile view\n\n      this.makeDashboardInsidesVisibleAnywayTimeout = setTimeout(() => {\n        const pluginState = this.getPluginState();\n        const isModalAndClosed = !this.opts.inline && pluginState.isHidden;\n\n        if ( // if ResizeObserver hasn't yet fired,\n        !pluginState.areInsidesReadyToBeVisible // and it's not due to the modal being closed\n        && !isModalAndClosed) {\n          this.uppy.log(\"[Dashboard] resize event didn't fire on time: defaulted to mobile layout\", 'debug');\n          this.setPluginState({\n            areInsidesReadyToBeVisible: true\n          });\n        }\n      }, 1000);\n    };\n\n    this.stopListeningToResize = () => {\n      this.resizeObserver.disconnect();\n      clearTimeout(this.makeDashboardInsidesVisibleAnywayTimeout);\n    };\n\n    this.recordIfFocusedOnUppyRecently = event => {\n      if (this.el.contains(event.target)) {\n        this.ifFocusedOnUppyRecently = true;\n      } else {\n        this.ifFocusedOnUppyRecently = false; // ___Why run this.superFocus.cancel here when it already runs in superFocusOnEachUpdate?\n        //    Because superFocus is debounced, when we move from Uppy to some other element on the page,\n        //    previously run superFocus sometimes hits and moves focus back to Uppy.\n\n        this.superFocus.cancel();\n      }\n    };\n\n    this.disableAllFocusableElements = disable => {\n      const focusableNodes = toArray(this.el.querySelectorAll(FOCUSABLE_ELEMENTS));\n\n      if (disable) {\n        focusableNodes.forEach(node => {\n          // save previous tabindex in a data-attribute, to restore when enabling\n          const currentTabIndex = node.getAttribute('tabindex');\n\n          if (currentTabIndex) {\n            node.dataset.inertTabindex = currentTabIndex;\n          }\n\n          node.setAttribute('tabindex', '-1');\n        });\n      } else {\n        focusableNodes.forEach(node => {\n          if ('inertTabindex' in node.dataset) {\n            node.setAttribute('tabindex', node.dataset.inertTabindex);\n          } else {\n            node.removeAttribute('tabindex');\n          }\n        });\n      }\n\n      this.dashboardIsDisabled = disable;\n    };\n\n    this.updateBrowserHistory = () => {\n      var _history$state2;\n\n      // Ensure history state does not already contain our modal name to avoid double-pushing\n      // eslint-disable-next-line no-restricted-globals\n      if (!((_history$state2 = history.state) != null && _history$state2[this.modalName])) {\n        // Push to history so that the page is not lost on browser back button press\n        // eslint-disable-next-line no-restricted-globals\n        history.pushState({ // eslint-disable-next-line no-restricted-globals\n          ...history.state,\n          [this.modalName]: true\n        }, '');\n      } // Listen for back button presses\n\n\n      window.addEventListener('popstate', this.handlePopState, false);\n    };\n\n    this.handlePopState = event => {\n      var _event$state;\n\n      // Close the modal if the history state no longer contains our modal name\n      if (this.isModalOpen() && (!event.state || !event.state[this.modalName])) {\n        this.closeModal({\n          manualClose: false\n        });\n      } // When the browser back button is pressed and uppy is now the latest entry\n      // in the history but the modal is closed, fix the history by removing the\n      // uppy history entry.\n      // This occurs when another entry is added into the history state while the\n      // modal is open, and then the modal gets manually closed.\n      // Solves PR #575 (https://github.com/transloadit/uppy/pull/575)\n\n\n      if (!this.isModalOpen() && (_event$state = event.state) != null && _event$state[this.modalName]) {\n        // eslint-disable-next-line no-restricted-globals\n        history.back();\n      }\n    };\n\n    this.handleKeyDownInModal = event => {\n      // close modal on esc key press\n      if (event.keyCode === ESC_KEY) this.requestCloseModal(event); // trap focus on tab key press\n\n      if (event.keyCode === TAB_KEY) trapFocus.forModal(event, this.getPluginState().activeOverlayType, this.el);\n    };\n\n    this.handleClickOutside = () => {\n      if (this.opts.closeModalOnClickOutside) this.requestCloseModal();\n    };\n\n    this.handlePaste = event => {\n      // 1. Let any acquirer plugin (Url/Webcam/etc.) handle pastes to the root\n      this.uppy.iteratePlugins(plugin => {\n        if (plugin.type === 'acquirer') {\n          // Every Plugin with .type acquirer can define handleRootPaste(event)\n          plugin.handleRootPaste == null ? void 0 : plugin.handleRootPaste(event);\n        }\n      }); // 2. Add all dropped files\n\n      const files = toArray(event.clipboardData.files);\n      this.addFiles(files);\n    };\n\n    this.handleInputChange = event => {\n      event.preventDefault();\n      const files = toArray(event.target.files);\n      this.addFiles(files);\n    };\n\n    this.handleDragOver = event => {\n      event.preventDefault();\n      event.stopPropagation();\n\n      if (this.opts.disabled || this.opts.disableLocalFiles || !this.uppy.getState().allowNewUpload) {\n        return;\n      } // 1. Add a small (+) icon on drop\n      // (and prevent browsers from interpreting this as files being _moved_ into the\n      // browser, https://github.com/transloadit/uppy/issues/1978).\n\n\n      event.dataTransfer.dropEffect = 'copy';\n      clearTimeout(this.removeDragOverClassTimeout);\n      this.setPluginState({\n        isDraggingOver: true\n      });\n    };\n\n    this.handleDragLeave = event => {\n      event.preventDefault();\n      event.stopPropagation();\n\n      if (this.opts.disabled || this.opts.disableLocalFiles || !this.uppy.getState().allowNewUpload) {\n        return;\n      }\n\n      clearTimeout(this.removeDragOverClassTimeout); // Timeout against flickering, this solution is taken from drag-drop library.\n      // Solution with 'pointer-events: none' didn't work across browsers.\n\n      this.removeDragOverClassTimeout = setTimeout(() => {\n        this.setPluginState({\n          isDraggingOver: false\n        });\n      }, 50);\n    };\n\n    this.handleDrop = event => {\n      event.preventDefault();\n      event.stopPropagation();\n\n      if (this.opts.disabled || this.opts.disableLocalFiles || !this.uppy.getState().allowNewUpload) {\n        return;\n      }\n\n      clearTimeout(this.removeDragOverClassTimeout); // 2. Remove dragover class\n\n      this.setPluginState({\n        isDraggingOver: false\n      }); // 3. Let any acquirer plugin (Url/Webcam/etc.) handle drops to the root\n\n      this.uppy.iteratePlugins(plugin => {\n        if (plugin.type === 'acquirer') {\n          // Every Plugin with .type acquirer can define handleRootDrop(event)\n          plugin.handleRootDrop == null ? void 0 : plugin.handleRootDrop(event);\n        }\n      }); // 4. Add all dropped files\n\n      let executedDropErrorOnce = false;\n\n      const logDropError = error => {\n        this.uppy.log(error, 'error'); // In practice all drop errors are most likely the same, so let's just show one to avoid overwhelming the user\n\n        if (!executedDropErrorOnce) {\n          this.uppy.info(error.message, 'error');\n          executedDropErrorOnce = true;\n        }\n      };\n\n      getDroppedFiles(event.dataTransfer, {\n        logDropError\n      }).then(files => {\n        if (files.length > 0) {\n          this.uppy.log('[Dashboard] Files were dropped');\n          this.addFiles(files);\n        }\n      });\n    };\n\n    this.handleRequestThumbnail = file => {\n      if (!this.opts.waitForThumbnailsBeforeUpload) {\n        this.uppy.emit('thumbnail:request', file);\n      }\n    };\n\n    this.handleCancelThumbnail = file => {\n      if (!this.opts.waitForThumbnailsBeforeUpload) {\n        this.uppy.emit('thumbnail:cancel', file);\n      }\n    };\n\n    this.handleKeyDownInInline = event => {\n      // Trap focus on tab key press.\n      if (event.keyCode === TAB_KEY) trapFocus.forInline(event, this.getPluginState().activeOverlayType, this.el);\n    };\n\n    this.handlePasteOnBody = event => {\n      const isFocusInOverlay = this.el.contains(document.activeElement);\n\n      if (isFocusInOverlay) {\n        this.handlePaste(event);\n      }\n    };\n\n    this.handleComplete = ({\n      failed\n    }) => {\n      if (this.opts.closeAfterFinish && failed.length === 0) {\n        // All uploads are done\n        this.requestCloseModal();\n      }\n    };\n\n    this.handleCancelRestore = () => {\n      this.uppy.emit('restore-canceled');\n    };\n\n    Object.defineProperty(this, _openFileEditorWhenFilesAdded, {\n      writable: true,\n      value: files => {\n        const firstFile = files[0];\n\n        if (this.canEditFile(firstFile)) {\n          this.openFileEditor(firstFile);\n        }\n      }\n    });\n\n    this.initEvents = () => {\n      // Modal open button\n      if (this.opts.trigger && !this.opts.inline) {\n        const showModalTrigger = findAllDOMElements(this.opts.trigger);\n\n        if (showModalTrigger) {\n          showModalTrigger.forEach(trigger => trigger.addEventListener('click', this.openModal));\n        } else {\n          this.uppy.log('Dashboard modal trigger not found. Make sure `trigger` is set in Dashboard options, unless you are planning to call `dashboard.openModal()` method yourself', 'warning');\n        }\n      }\n\n      this.startListeningToResize();\n      document.addEventListener('paste', this.handlePasteOnBody);\n      this.uppy.on('plugin-remove', this.removeTarget);\n      this.uppy.on('file-added', this.hideAllPanels);\n      this.uppy.on('dashboard:modal-closed', this.hideAllPanels);\n      this.uppy.on('file-editor:complete', this.hideAllPanels);\n      this.uppy.on('complete', this.handleComplete); // ___Why fire on capture?\n      //    Because this.ifFocusedOnUppyRecently needs to change before onUpdate() fires.\n\n      document.addEventListener('focus', this.recordIfFocusedOnUppyRecently, true);\n      document.addEventListener('click', this.recordIfFocusedOnUppyRecently, true);\n\n      if (this.opts.inline) {\n        this.el.addEventListener('keydown', this.handleKeyDownInInline);\n      }\n\n      if (this.opts.autoOpenFileEditor) {\n        this.uppy.on('files-added', _classPrivateFieldLooseBase(this, _openFileEditorWhenFilesAdded)[_openFileEditorWhenFilesAdded]);\n      }\n    };\n\n    this.removeEvents = () => {\n      const showModalTrigger = findAllDOMElements(this.opts.trigger);\n\n      if (!this.opts.inline && showModalTrigger) {\n        showModalTrigger.forEach(trigger => trigger.removeEventListener('click', this.openModal));\n      }\n\n      this.stopListeningToResize();\n      document.removeEventListener('paste', this.handlePasteOnBody);\n      window.removeEventListener('popstate', this.handlePopState, false);\n      this.uppy.off('plugin-remove', this.removeTarget);\n      this.uppy.off('file-added', this.hideAllPanels);\n      this.uppy.off('dashboard:modal-closed', this.hideAllPanels);\n      this.uppy.off('file-editor:complete', this.hideAllPanels);\n      this.uppy.off('complete', this.handleComplete);\n      document.removeEventListener('focus', this.recordIfFocusedOnUppyRecently);\n      document.removeEventListener('click', this.recordIfFocusedOnUppyRecently);\n\n      if (this.opts.inline) {\n        this.el.removeEventListener('keydown', this.handleKeyDownInInline);\n      }\n\n      if (this.opts.autoOpenFileEditor) {\n        this.uppy.off('files-added', _classPrivateFieldLooseBase(this, _openFileEditorWhenFilesAdded)[_openFileEditorWhenFilesAdded]);\n      }\n    };\n\n    this.superFocusOnEachUpdate = () => {\n      const isFocusInUppy = this.el.contains(document.activeElement); // When focus is lost on the page (== focus is on body for most browsers, or focus is null for IE11)\n\n      const isFocusNowhere = document.activeElement === document.body || document.activeElement === null;\n      const isInformerHidden = this.uppy.getState().info.isHidden;\n      const isModal = !this.opts.inline;\n\n      if ( // If update is connected to showing the Informer - let the screen reader calmly read it.\n      isInformerHidden && ( // If we are in a modal - always superfocus without concern for other elements\n      // on the page (user is unlikely to want to interact with the rest of the page)\n      isModal // If we are already inside of Uppy, or\n      || isFocusInUppy // If we are not focused on anything BUT we have already, at least once, focused on uppy\n      //   1. We focus when isFocusNowhere, because when the element we were focused\n      //      on disappears (e.g. an overlay), - focus gets lost. If user is typing\n      //      something somewhere else on the page, - focus won't be 'nowhere'.\n      //   2. We only focus when focus is nowhere AND this.ifFocusedOnUppyRecently,\n      //      to avoid focus jumps if we do something else on the page.\n      //   [Practical check] Without '&& this.ifFocusedOnUppyRecently', in Safari, in inline mode,\n      //                     when file is uploading, - navigate via tab to the checkbox,\n      //                     try to press space multiple times. Focus will jump to Uppy.\n      || isFocusNowhere && this.ifFocusedOnUppyRecently)) {\n        this.superFocus(this.el, this.getPluginState().activeOverlayType);\n      } else {\n        this.superFocus.cancel();\n      }\n    };\n\n    this.afterUpdate = () => {\n      if (this.opts.disabled && !this.dashboardIsDisabled) {\n        this.disableAllFocusableElements(true);\n        return;\n      }\n\n      if (!this.opts.disabled && this.dashboardIsDisabled) {\n        this.disableAllFocusableElements(false);\n      }\n\n      this.superFocusOnEachUpdate();\n    };\n\n    this.saveFileCard = (meta, fileID) => {\n      this.uppy.setFileMeta(fileID, meta);\n      this.toggleFileCard(false, fileID);\n    };\n\n    Object.defineProperty(this, _attachRenderFunctionToTarget, {\n      writable: true,\n      value: target => {\n        const plugin = this.uppy.getPlugin(target.id);\n        return { ...target,\n          icon: plugin.icon || this.opts.defaultPickerIcon,\n          render: plugin.render\n        };\n      }\n    });\n    Object.defineProperty(this, _isTargetSupported, {\n      writable: true,\n      value: target => {\n        const plugin = this.uppy.getPlugin(target.id); // If the plugin does not provide a `supported` check, assume the plugin works everywhere.\n\n        if (typeof plugin.isSupported !== 'function') {\n          return true;\n        }\n\n        return plugin.isSupported();\n      }\n    });\n    Object.defineProperty(this, _getAcquirers, {\n      writable: true,\n      value: memoize(targets => {\n        return targets.filter(target => target.type === 'acquirer' && _classPrivateFieldLooseBase(this, _isTargetSupported)[_isTargetSupported](target)).map(_classPrivateFieldLooseBase(this, _attachRenderFunctionToTarget)[_attachRenderFunctionToTarget]);\n      })\n    });\n    Object.defineProperty(this, _getProgressIndicators, {\n      writable: true,\n      value: memoize(targets => {\n        return targets.filter(target => target.type === 'progressindicator').map(_classPrivateFieldLooseBase(this, _attachRenderFunctionToTarget)[_attachRenderFunctionToTarget]);\n      })\n    });\n    Object.defineProperty(this, _getEditors, {\n      writable: true,\n      value: memoize(targets => {\n        return targets.filter(target => target.type === 'editor').map(_classPrivateFieldLooseBase(this, _attachRenderFunctionToTarget)[_attachRenderFunctionToTarget]);\n      })\n    });\n\n    this.render = state => {\n      const pluginState = this.getPluginState();\n      const {\n        files,\n        capabilities,\n        allowNewUpload\n      } = state;\n      const {\n        newFiles,\n        uploadStartedFiles,\n        completeFiles,\n        erroredFiles,\n        inProgressFiles,\n        inProgressNotPausedFiles,\n        processingFiles,\n        isUploadStarted,\n        isAllComplete,\n        isAllErrored,\n        isAllPaused\n      } = this.uppy.getObjectOfFilesPerState();\n\n      const acquirers = _classPrivateFieldLooseBase(this, _getAcquirers)[_getAcquirers](pluginState.targets);\n\n      const progressindicators = _classPrivateFieldLooseBase(this, _getProgressIndicators)[_getProgressIndicators](pluginState.targets);\n\n      const editors = _classPrivateFieldLooseBase(this, _getEditors)[_getEditors](pluginState.targets);\n\n      let theme;\n\n      if (this.opts.theme === 'auto') {\n        theme = capabilities.darkMode ? 'dark' : 'light';\n      } else {\n        theme = this.opts.theme;\n      }\n\n      if (['files', 'folders', 'both'].indexOf(this.opts.fileManagerSelectionType) < 0) {\n        this.opts.fileManagerSelectionType = 'files'; // eslint-disable-next-line no-console\n\n        console.warn(`Unsupported option for \"fileManagerSelectionType\". Using default of \"${this.opts.fileManagerSelectionType}\".`);\n      }\n\n      return DashboardUI({\n        state,\n        isHidden: pluginState.isHidden,\n        files,\n        newFiles,\n        uploadStartedFiles,\n        completeFiles,\n        erroredFiles,\n        inProgressFiles,\n        inProgressNotPausedFiles,\n        processingFiles,\n        isUploadStarted,\n        isAllComplete,\n        isAllErrored,\n        isAllPaused,\n        totalFileCount: Object.keys(files).length,\n        totalProgress: state.totalProgress,\n        allowNewUpload,\n        acquirers,\n        theme,\n        disabled: this.opts.disabled,\n        disableLocalFiles: this.opts.disableLocalFiles,\n        direction: this.opts.direction,\n        activePickerPanel: pluginState.activePickerPanel,\n        showFileEditor: pluginState.showFileEditor,\n        saveFileEditor: this.saveFileEditor,\n        disableAllFocusableElements: this.disableAllFocusableElements,\n        animateOpenClose: this.opts.animateOpenClose,\n        isClosing: pluginState.isClosing,\n        progressindicators,\n        editors,\n        autoProceed: this.uppy.opts.autoProceed,\n        id: this.id,\n        closeModal: this.requestCloseModal,\n        handleClickOutside: this.handleClickOutside,\n        handleInputChange: this.handleInputChange,\n        handlePaste: this.handlePaste,\n        inline: this.opts.inline,\n        showPanel: this.showPanel,\n        hideAllPanels: this.hideAllPanels,\n        i18n: this.i18n,\n        i18nArray: this.i18nArray,\n        uppy: this.uppy,\n        note: this.opts.note,\n        recoveredState: state.recoveredState,\n        metaFields: pluginState.metaFields,\n        resumableUploads: capabilities.resumableUploads || false,\n        individualCancellation: capabilities.individualCancellation,\n        isMobileDevice: capabilities.isMobileDevice,\n        fileCardFor: pluginState.fileCardFor,\n        toggleFileCard: this.toggleFileCard,\n        toggleAddFilesPanel: this.toggleAddFilesPanel,\n        showAddFilesPanel: pluginState.showAddFilesPanel,\n        saveFileCard: this.saveFileCard,\n        openFileEditor: this.openFileEditor,\n        canEditFile: this.canEditFile,\n        width: this.opts.width,\n        height: this.opts.height,\n        showLinkToFileUploadResult: this.opts.showLinkToFileUploadResult,\n        fileManagerSelectionType: this.opts.fileManagerSelectionType,\n        proudlyDisplayPoweredByUppy: this.opts.proudlyDisplayPoweredByUppy,\n        hideCancelButton: this.opts.hideCancelButton,\n        hideRetryButton: this.opts.hideRetryButton,\n        hidePauseResumeButton: this.opts.hidePauseResumeButton,\n        showRemoveButtonAfterComplete: this.opts.showRemoveButtonAfterComplete,\n        containerWidth: pluginState.containerWidth,\n        containerHeight: pluginState.containerHeight,\n        areInsidesReadyToBeVisible: pluginState.areInsidesReadyToBeVisible,\n        isTargetDOMEl: this.isTargetDOMEl,\n        parentElement: this.el,\n        allowedFileTypes: this.uppy.opts.restrictions.allowedFileTypes,\n        maxNumberOfFiles: this.uppy.opts.restrictions.maxNumberOfFiles,\n        requiredMetaFields: this.uppy.opts.restrictions.requiredMetaFields,\n        showSelectedFiles: this.opts.showSelectedFiles,\n        handleCancelRestore: this.handleCancelRestore,\n        handleRequestThumbnail: this.handleRequestThumbnail,\n        handleCancelThumbnail: this.handleCancelThumbnail,\n        // drag props\n        isDraggingOver: pluginState.isDraggingOver,\n        handleDragOver: this.handleDragOver,\n        handleDragLeave: this.handleDragLeave,\n        handleDrop: this.handleDrop\n      });\n    };\n\n    this.discoverProviderPlugins = () => {\n      this.uppy.iteratePlugins(plugin => {\n        if (plugin && !plugin.target && plugin.opts && plugin.opts.target === this.constructor) {\n          this.addTarget(plugin);\n        }\n      });\n    };\n\n    this.install = () => {\n      // Set default state for Dashboard\n      this.setPluginState({\n        isHidden: true,\n        fileCardFor: null,\n        activeOverlayType: null,\n        showAddFilesPanel: false,\n        activePickerPanel: false,\n        showFileEditor: false,\n        metaFields: this.opts.metaFields,\n        targets: [],\n        // We'll make them visible once .containerWidth is determined\n        areInsidesReadyToBeVisible: false,\n        isDraggingOver: false\n      });\n      const {\n        inline,\n        closeAfterFinish\n      } = this.opts;\n\n      if (inline && closeAfterFinish) {\n        throw new Error('[Dashboard] `closeAfterFinish: true` cannot be used on an inline Dashboard, because an inline Dashboard cannot be closed at all. Either set `inline: false`, or disable the `closeAfterFinish` option.');\n      }\n\n      const {\n        allowMultipleUploads,\n        allowMultipleUploadBatches\n      } = this.uppy.opts;\n\n      if ((allowMultipleUploads || allowMultipleUploadBatches) && closeAfterFinish) {\n        this.uppy.log('[Dashboard] When using `closeAfterFinish`, we recommended setting the `allowMultipleUploadBatches` option to `false` in the Uppy constructor. See https://uppy.io/docs/uppy/#allowMultipleUploads-true', 'warning');\n      }\n\n      const {\n        target\n      } = this.opts;\n\n      if (target) {\n        this.mount(target, this);\n      }\n\n      const plugins = this.opts.plugins || [];\n      plugins.forEach(pluginID => {\n        const plugin = this.uppy.getPlugin(pluginID);\n\n        if (plugin) {\n          plugin.mount(this, plugin);\n        }\n      });\n\n      if (!this.opts.disableStatusBar) {\n        this.uppy.use(StatusBar, {\n          id: `${this.id}:StatusBar`,\n          target: this,\n          hideUploadButton: this.opts.hideUploadButton,\n          hideRetryButton: this.opts.hideRetryButton,\n          hidePauseResumeButton: this.opts.hidePauseResumeButton,\n          hideCancelButton: this.opts.hideCancelButton,\n          showProgressDetails: this.opts.showProgressDetails,\n          hideAfterFinish: this.opts.hideProgressAfterFinish,\n          locale: this.opts.locale,\n          doneButtonHandler: this.opts.doneButtonHandler\n        });\n      }\n\n      if (!this.opts.disableInformer) {\n        this.uppy.use(Informer, {\n          id: `${this.id}:Informer`,\n          target: this\n        });\n      }\n\n      if (!this.opts.disableThumbnailGenerator) {\n        this.uppy.use(ThumbnailGenerator, {\n          id: `${this.id}:ThumbnailGenerator`,\n          thumbnailWidth: this.opts.thumbnailWidth,\n          thumbnailType: this.opts.thumbnailType,\n          waitForThumbnailsBeforeUpload: this.opts.waitForThumbnailsBeforeUpload,\n          // If we don't block on thumbnails, we can lazily generate them\n          lazy: !this.opts.waitForThumbnailsBeforeUpload\n        });\n      } // Dark Mode / theme\n\n\n      this.darkModeMediaQuery = typeof window !== 'undefined' && window.matchMedia ? window.matchMedia('(prefers-color-scheme: dark)') : null;\n      const isDarkModeOnFromTheStart = this.darkModeMediaQuery ? this.darkModeMediaQuery.matches : false;\n      this.uppy.log(`[Dashboard] Dark mode is ${isDarkModeOnFromTheStart ? 'on' : 'off'}`);\n      this.setDarkModeCapability(isDarkModeOnFromTheStart);\n\n      if (this.opts.theme === 'auto') {\n        this.darkModeMediaQuery.addListener(this.handleSystemDarkModeChange);\n      }\n\n      this.discoverProviderPlugins();\n      this.initEvents();\n    };\n\n    this.uninstall = () => {\n      if (!this.opts.disableInformer) {\n        const informer = this.uppy.getPlugin(`${this.id}:Informer`); // Checking if this plugin exists, in case it was removed by uppy-core\n        // before the Dashboard was.\n\n        if (informer) this.uppy.removePlugin(informer);\n      }\n\n      if (!this.opts.disableStatusBar) {\n        const statusBar = this.uppy.getPlugin(`${this.id}:StatusBar`);\n        if (statusBar) this.uppy.removePlugin(statusBar);\n      }\n\n      if (!this.opts.disableThumbnailGenerator) {\n        const thumbnail = this.uppy.getPlugin(`${this.id}:ThumbnailGenerator`);\n        if (thumbnail) this.uppy.removePlugin(thumbnail);\n      }\n\n      const plugins = this.opts.plugins || [];\n      plugins.forEach(pluginID => {\n        const plugin = this.uppy.getPlugin(pluginID);\n        if (plugin) plugin.unmount();\n      });\n\n      if (this.opts.theme === 'auto') {\n        this.darkModeMediaQuery.removeListener(this.handleSystemDarkModeChange);\n      }\n\n      this.unmount();\n      this.removeEvents();\n    };\n\n    this.id = this.opts.id || 'Dashboard';\n    this.title = 'Dashboard';\n    this.type = 'orchestrator';\n    this.modalName = `uppy-Dashboard-${nanoid()}`;\n    this.defaultLocale = {\n      strings: {\n        closeModal: 'Close Modal',\n        importFrom: 'Import from %{name}',\n        addingMoreFiles: 'Adding more files',\n        addMoreFiles: 'Add more files',\n        dashboardWindowTitle: 'File Uploader Window (Press escape to close)',\n        dashboardTitle: 'File Uploader',\n        copyLinkToClipboardSuccess: 'Link copied to clipboard',\n        copyLinkToClipboardFallback: 'Copy the URL below',\n        copyLink: 'Copy link',\n        back: 'Back',\n        addMore: 'Add more',\n        removeFile: 'Remove file %{file}',\n        editFile: 'Edit file',\n        editFileWithFilename: 'Edit file %{file}',\n        editing: 'Editing %{file}',\n        finishEditingFile: 'Finish editing file',\n        save: 'Save',\n        saveChanges: 'Save changes',\n        cancel: 'Cancel',\n        myDevice: 'My Device',\n        dropPasteFiles: 'Drop files here or %{browseFiles}',\n        dropPasteFolders: 'Drop files here or %{browseFolders}',\n        dropPasteBoth: 'Drop files here, %{browseFiles} or %{browseFolders}',\n        dropPasteImportFiles: 'Drop files here, %{browseFiles} or import from:',\n        dropPasteImportFolders: 'Drop files here, %{browseFolders} or import from:',\n        dropPasteImportBoth: 'Drop files here, %{browseFiles}, %{browseFolders} or import from:',\n        importFiles: 'Import files from:',\n        dropHint: 'Drop your files here',\n        browseFiles: 'browse files',\n        browseFolders: 'browse folders',\n        uploadComplete: 'Upload complete',\n        uploadPaused: 'Upload paused',\n        resumeUpload: 'Resume upload',\n        pauseUpload: 'Pause upload',\n        retryUpload: 'Retry upload',\n        cancelUpload: 'Cancel upload',\n        xFilesSelected: {\n          0: '%{smart_count} file selected',\n          1: '%{smart_count} files selected'\n        },\n        uploadingXFiles: {\n          0: 'Uploading %{smart_count} file',\n          1: 'Uploading %{smart_count} files'\n        },\n        processingXFiles: {\n          0: 'Processing %{smart_count} file',\n          1: 'Processing %{smart_count} files'\n        },\n        recoveredXFiles: {\n          0: 'We could not fully recover 1 file. Please re-select it and resume the upload.',\n          1: 'We could not fully recover %{smart_count} files. Please re-select them and resume the upload.'\n        },\n        recoveredAllFiles: 'We restored all files. You can now resume the upload.',\n        sessionRestored: 'Session restored',\n        reSelect: 'Re-select',\n        poweredBy: 'Powered by %{uppy}'\n      }\n    }; // set default options\n\n    const defaultOptions = {\n      target: 'body',\n      metaFields: [],\n      trigger: null,\n      inline: false,\n      width: 750,\n      height: 550,\n      thumbnailWidth: 280,\n      thumbnailType: 'image/jpeg',\n      waitForThumbnailsBeforeUpload: false,\n      defaultPickerIcon,\n      showLinkToFileUploadResult: false,\n      showProgressDetails: false,\n      hideUploadButton: false,\n      hideCancelButton: false,\n      hideRetryButton: false,\n      hidePauseResumeButton: false,\n      hideProgressAfterFinish: false,\n      doneButtonHandler: () => {\n        this.uppy.reset();\n        this.requestCloseModal();\n      },\n      note: null,\n      closeModalOnClickOutside: false,\n      closeAfterFinish: false,\n      disableStatusBar: false,\n      disableInformer: false,\n      disableThumbnailGenerator: false,\n      disablePageScrollWhenModalOpen: true,\n      animateOpenClose: true,\n      fileManagerSelectionType: 'files',\n      proudlyDisplayPoweredByUppy: true,\n      onRequestCloseModal: () => this.closeModal(),\n      showSelectedFiles: true,\n      showRemoveButtonAfterComplete: false,\n      browserBackButtonClose: false,\n      theme: 'light',\n      autoOpenFileEditor: false,\n      disabled: false,\n      disableLocalFiles: false\n    }; // merge default options with the ones set by user\n\n    this.opts = { ...defaultOptions,\n      ..._opts\n    };\n    this.i18nInit();\n    this.superFocus = createSuperFocus();\n    this.ifFocusedOnUppyRecently = false; // Timeouts\n\n    this.makeDashboardInsidesVisibleAnywayTimeout = null;\n    this.removeDragOverClassTimeout = null;\n  }\n\n  onMount() {\n    // Set the text direction if the page has not defined one.\n    const element = this.el;\n    const direction = getTextDirection(element);\n\n    if (!direction) {\n      element.dir = 'ltr';\n    }\n  }\n\n}), _class.VERSION = \"2.1.1\", _temp);"]},"metadata":{},"sourceType":"script"}