{"ast":null,"code":"\"use strict\";\n\nconst React = require('react');\n\nconst PropTypes = require('prop-types');\n\nconst StatusBarPlugin = require('@uppy/status-bar');\n\nconst uppyPropType = require('./propTypes').uppy;\n\nconst getHTMLProps = require('./getHTMLProps');\n\nconst nonHtmlPropsHaveChanged = require('./nonHtmlPropsHaveChanged');\n\nconst h = React.createElement;\n/**\n * React component that renders a status bar containing upload progress and speed,\n * processing progress and pause/resume/cancel controls.\n */\n\nclass StatusBar extends React.Component {\n  componentDidMount() {\n    this.installPlugin();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.uppy !== this.props.uppy) {\n      this.uninstallPlugin(prevProps);\n      this.installPlugin();\n    } else if (nonHtmlPropsHaveChanged(this, prevProps)) {\n      const options = { ...this.props,\n        target: this.container\n      };\n      delete options.uppy;\n      this.plugin.setOptions(options);\n    }\n  }\n\n  componentWillUnmount() {\n    this.uninstallPlugin();\n  }\n\n  installPlugin() {\n    const {\n      uppy\n    } = this.props;\n    const options = {\n      id: 'react:StatusBar',\n      ...this.props,\n      target: this.container\n    };\n    delete options.uppy;\n    uppy.use(StatusBarPlugin, options);\n    this.plugin = uppy.getPlugin(options.id);\n  }\n\n  uninstallPlugin(props = this.props) {\n    const {\n      uppy\n    } = props;\n    uppy.removePlugin(this.plugin);\n  }\n\n  render() {\n    // TODO: stop exposing `validProps` as a public property and rename it to `htmlProps`\n    this.validProps = getHTMLProps(this.props);\n    return h('div', {\n      ref: container => {\n        this.container = container;\n      },\n      ...this.validProps\n    });\n  }\n\n}\n\nStatusBar.propTypes = {\n  uppy: uppyPropType,\n  hideAfterFinish: PropTypes.bool,\n  showProgressDetails: PropTypes.bool\n};\nStatusBar.defaultProps = {};\nmodule.exports = StatusBar;","map":{"version":3,"sources":["/Users/albertshay/Desktop/silkroad/client/node_modules/@uppy/react/lib/StatusBar.js"],"names":["React","require","PropTypes","StatusBarPlugin","uppyPropType","uppy","getHTMLProps","nonHtmlPropsHaveChanged","h","createElement","StatusBar","Component","componentDidMount","installPlugin","componentDidUpdate","prevProps","props","uninstallPlugin","options","target","container","plugin","setOptions","componentWillUnmount","id","use","getPlugin","removePlugin","render","validProps","ref","propTypes","hideAfterFinish","bool","showProgressDetails","defaultProps","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAEA,MAAMC,SAAS,GAAGD,OAAO,CAAC,YAAD,CAAzB;;AAEA,MAAME,eAAe,GAAGF,OAAO,CAAC,kBAAD,CAA/B;;AAEA,MAAMG,YAAY,GAAGH,OAAO,CAAC,aAAD,CAAP,CAAuBI,IAA5C;;AAEA,MAAMC,YAAY,GAAGL,OAAO,CAAC,gBAAD,CAA5B;;AAEA,MAAMM,uBAAuB,GAAGN,OAAO,CAAC,2BAAD,CAAvC;;AAEA,MAAMO,CAAC,GAAGR,KAAK,CAACS,aAAhB;AACA;AACA;AACA;AACA;;AAEA,MAAMC,SAAN,SAAwBV,KAAK,CAACW,SAA9B,CAAwC;AACtCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,aAAL;AACD;;AAEDC,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC5B,QAAIA,SAAS,CAACV,IAAV,KAAmB,KAAKW,KAAL,CAAWX,IAAlC,EAAwC;AACtC,WAAKY,eAAL,CAAqBF,SAArB;AACA,WAAKF,aAAL;AACD,KAHD,MAGO,IAAIN,uBAAuB,CAAC,IAAD,EAAOQ,SAAP,CAA3B,EAA8C;AACnD,YAAMG,OAAO,GAAG,EAAE,GAAG,KAAKF,KAAV;AACdG,QAAAA,MAAM,EAAE,KAAKC;AADC,OAAhB;AAGA,aAAOF,OAAO,CAACb,IAAf;AACA,WAAKgB,MAAL,CAAYC,UAAZ,CAAuBJ,OAAvB;AACD;AACF;;AAEDK,EAAAA,oBAAoB,GAAG;AACrB,SAAKN,eAAL;AACD;;AAEDJ,EAAAA,aAAa,GAAG;AACd,UAAM;AACJR,MAAAA;AADI,QAEF,KAAKW,KAFT;AAGA,UAAME,OAAO,GAAG;AACdM,MAAAA,EAAE,EAAE,iBADU;AAEd,SAAG,KAAKR,KAFM;AAGdG,MAAAA,MAAM,EAAE,KAAKC;AAHC,KAAhB;AAKA,WAAOF,OAAO,CAACb,IAAf;AACAA,IAAAA,IAAI,CAACoB,GAAL,CAAStB,eAAT,EAA0Be,OAA1B;AACA,SAAKG,MAAL,GAAchB,IAAI,CAACqB,SAAL,CAAeR,OAAO,CAACM,EAAvB,CAAd;AACD;;AAEDP,EAAAA,eAAe,CAACD,KAAK,GAAG,KAAKA,KAAd,EAAqB;AAClC,UAAM;AACJX,MAAAA;AADI,QAEFW,KAFJ;AAGAX,IAAAA,IAAI,CAACsB,YAAL,CAAkB,KAAKN,MAAvB;AACD;;AAEDO,EAAAA,MAAM,GAAG;AACP;AACA,SAAKC,UAAL,GAAkBvB,YAAY,CAAC,KAAKU,KAAN,CAA9B;AACA,WAAOR,CAAC,CAAC,KAAD,EAAQ;AACdsB,MAAAA,GAAG,EAAEV,SAAS,IAAI;AAChB,aAAKA,SAAL,GAAiBA,SAAjB;AACD,OAHa;AAId,SAAG,KAAKS;AAJM,KAAR,CAAR;AAMD;;AApDqC;;AAwDxCnB,SAAS,CAACqB,SAAV,GAAsB;AACpB1B,EAAAA,IAAI,EAAED,YADc;AAEpB4B,EAAAA,eAAe,EAAE9B,SAAS,CAAC+B,IAFP;AAGpBC,EAAAA,mBAAmB,EAAEhC,SAAS,CAAC+B;AAHX,CAAtB;AAKAvB,SAAS,CAACyB,YAAV,GAAyB,EAAzB;AACAC,MAAM,CAACC,OAAP,GAAiB3B,SAAjB","sourcesContent":["\"use strict\";\n\nconst React = require('react');\n\nconst PropTypes = require('prop-types');\n\nconst StatusBarPlugin = require('@uppy/status-bar');\n\nconst uppyPropType = require('./propTypes').uppy;\n\nconst getHTMLProps = require('./getHTMLProps');\n\nconst nonHtmlPropsHaveChanged = require('./nonHtmlPropsHaveChanged');\n\nconst h = React.createElement;\n/**\n * React component that renders a status bar containing upload progress and speed,\n * processing progress and pause/resume/cancel controls.\n */\n\nclass StatusBar extends React.Component {\n  componentDidMount() {\n    this.installPlugin();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.uppy !== this.props.uppy) {\n      this.uninstallPlugin(prevProps);\n      this.installPlugin();\n    } else if (nonHtmlPropsHaveChanged(this, prevProps)) {\n      const options = { ...this.props,\n        target: this.container\n      };\n      delete options.uppy;\n      this.plugin.setOptions(options);\n    }\n  }\n\n  componentWillUnmount() {\n    this.uninstallPlugin();\n  }\n\n  installPlugin() {\n    const {\n      uppy\n    } = this.props;\n    const options = {\n      id: 'react:StatusBar',\n      ...this.props,\n      target: this.container\n    };\n    delete options.uppy;\n    uppy.use(StatusBarPlugin, options);\n    this.plugin = uppy.getPlugin(options.id);\n  }\n\n  uninstallPlugin(props = this.props) {\n    const {\n      uppy\n    } = props;\n    uppy.removePlugin(this.plugin);\n  }\n\n  render() {\n    // TODO: stop exposing `validProps` as a public property and rename it to `htmlProps`\n    this.validProps = getHTMLProps(this.props);\n    return h('div', {\n      ref: container => {\n        this.container = container;\n      },\n      ...this.validProps\n    });\n  }\n\n}\n\nStatusBar.propTypes = {\n  uppy: uppyPropType,\n  hideAfterFinish: PropTypes.bool,\n  showProgressDetails: PropTypes.bool\n};\nStatusBar.defaultProps = {};\nmodule.exports = StatusBar;"]},"metadata":{},"sourceType":"script"}