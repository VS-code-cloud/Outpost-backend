{"ast":null,"code":"\"use strict\";\n\nconst React = require('react');\n\nconst PropTypes = require('prop-types');\n\nconst DashboardPlugin = require('@uppy/dashboard');\n\nconst basePropTypes = require('./propTypes').dashboard;\n\nconst getHTMLProps = require('./getHTMLProps');\n\nconst nonHtmlPropsHaveChanged = require('./nonHtmlPropsHaveChanged');\n\nconst h = React.createElement;\n/**\n * React Component that renders a Dashboard for an Uppy instance in a Modal\n * dialog. Visibility of the Modal is toggled using the `open` prop.\n */\n\nclass DashboardModal extends React.Component {\n  componentDidMount() {\n    this.installPlugin();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.uppy !== this.props.uppy) {\n      this.uninstallPlugin(prevProps);\n      this.installPlugin();\n    } else if (nonHtmlPropsHaveChanged(this, prevProps)) {\n      const options = { ...this.props,\n        onRequestCloseModal: this.props.onRequestClose\n      };\n      delete options.uppy;\n      this.plugin.setOptions(options);\n    }\n\n    if (prevProps.open && !this.props.open) {\n      this.plugin.closeModal();\n    } else if (!prevProps.open && this.props.open) {\n      this.plugin.openModal();\n    }\n  }\n\n  componentWillUnmount() {\n    this.uninstallPlugin();\n  }\n\n  installPlugin() {\n    const {\n      uppy\n    } = this.props;\n    const options = {\n      id: 'react:DashboardModal',\n      ...this.props,\n      onRequestCloseModal: this.props.onRequestClose\n    };\n\n    if (!options.target) {\n      options.target = this.container;\n    }\n\n    delete options.uppy;\n    uppy.use(DashboardPlugin, options);\n    this.plugin = uppy.getPlugin(options.id);\n\n    if (this.props.open) {\n      this.plugin.openModal();\n    }\n  }\n\n  uninstallPlugin(props = this.props) {\n    const {\n      uppy\n    } = props;\n    uppy.removePlugin(this.plugin);\n  }\n\n  render() {\n    // TODO: stop exposing `validProps` as a public property and rename it to `htmlProps`\n    this.validProps = getHTMLProps(this.props);\n    return h('div', {\n      ref: container => {\n        this.container = container;\n      },\n      ...this.validProps\n    });\n  }\n\n}\n\nDashboardModal.propTypes = {\n  target: typeof window !== 'undefined' ? PropTypes.instanceOf(window.HTMLElement) : PropTypes.any,\n  open: PropTypes.bool,\n  onRequestClose: PropTypes.func,\n  closeModalOnClickOutside: PropTypes.bool,\n  disablePageScrollWhenModalOpen: PropTypes.bool,\n  ...basePropTypes\n};\nmodule.exports = DashboardModal;","map":{"version":3,"sources":["/Users/albertshay/Desktop/silkroad/client/node_modules/@uppy/react/lib/DashboardModal.js"],"names":["React","require","PropTypes","DashboardPlugin","basePropTypes","dashboard","getHTMLProps","nonHtmlPropsHaveChanged","h","createElement","DashboardModal","Component","componentDidMount","installPlugin","componentDidUpdate","prevProps","uppy","props","uninstallPlugin","options","onRequestCloseModal","onRequestClose","plugin","setOptions","open","closeModal","openModal","componentWillUnmount","id","target","container","use","getPlugin","removePlugin","render","validProps","ref","propTypes","window","instanceOf","HTMLElement","any","bool","func","closeModalOnClickOutside","disablePageScrollWhenModalOpen","module","exports"],"mappings":"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","sourcesContent":["\"use strict\";\n\nconst React = require('react');\n\nconst PropTypes = require('prop-types');\n\nconst DashboardPlugin = require('@uppy/dashboard');\n\nconst basePropTypes = require('./propTypes').dashboard;\n\nconst getHTMLProps = require('./getHTMLProps');\n\nconst nonHtmlPropsHaveChanged = require('./nonHtmlPropsHaveChanged');\n\nconst h = React.createElement;\n/**\n * React Component that renders a Dashboard for an Uppy instance in a Modal\n * dialog. Visibility of the Modal is toggled using the `open` prop.\n */\n\nclass DashboardModal extends React.Component {\n  componentDidMount() {\n    this.installPlugin();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.uppy !== this.props.uppy) {\n      this.uninstallPlugin(prevProps);\n      this.installPlugin();\n    } else if (nonHtmlPropsHaveChanged(this, prevProps)) {\n      const options = { ...this.props,\n        onRequestCloseModal: this.props.onRequestClose\n      };\n      delete options.uppy;\n      this.plugin.setOptions(options);\n    }\n\n    if (prevProps.open && !this.props.open) {\n      this.plugin.closeModal();\n    } else if (!prevProps.open && this.props.open) {\n      this.plugin.openModal();\n    }\n  }\n\n  componentWillUnmount() {\n    this.uninstallPlugin();\n  }\n\n  installPlugin() {\n    const {\n      uppy\n    } = this.props;\n    const options = {\n      id: 'react:DashboardModal',\n      ...this.props,\n      onRequestCloseModal: this.props.onRequestClose\n    };\n\n    if (!options.target) {\n      options.target = this.container;\n    }\n\n    delete options.uppy;\n    uppy.use(DashboardPlugin, options);\n    this.plugin = uppy.getPlugin(options.id);\n\n    if (this.props.open) {\n      this.plugin.openModal();\n    }\n  }\n\n  uninstallPlugin(props = this.props) {\n    const {\n      uppy\n    } = props;\n    uppy.removePlugin(this.plugin);\n  }\n\n  render() {\n    // TODO: stop exposing `validProps` as a public property and rename it to `htmlProps`\n    this.validProps = getHTMLProps(this.props);\n    return h('div', {\n      ref: container => {\n        this.container = container;\n      },\n      ...this.validProps\n    });\n  }\n\n}\n\nDashboardModal.propTypes = {\n  target: typeof window !== 'undefined' ? PropTypes.instanceOf(window.HTMLElement) : PropTypes.any,\n  open: PropTypes.bool,\n  onRequestClose: PropTypes.func,\n  closeModalOnClickOutside: PropTypes.bool,\n  disablePageScrollWhenModalOpen: PropTypes.bool,\n  ...basePropTypes\n};\nmodule.exports = DashboardModal;"]},"metadata":{},"sourceType":"script"}