{"ast":null,"code":"\"use strict\";\n\nvar _toConsumableArray = require(\"/Users/albertshay/Desktop/silkroad/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nvar _classCallCheck = require(\"/Users/albertshay/Desktop/silkroad/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/albertshay/Desktop/silkroad/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/Users/albertshay/Desktop/silkroad/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/albertshay/Desktop/silkroad/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar _Symbol$for;\n\nvar _require = require('preact'),\n    h = _require.h,\n    Component = _require.Component;\n\n_Symbol$for = Symbol.for('uppy test: disable unused locale key warning');\n\nvar AddFiles = /*#__PURE__*/function (_Component, _Symbol$for2) {\n  _inherits(AddFiles, _Component);\n\n  var _super = _createSuper(AddFiles);\n\n  function AddFiles() {\n    var _this;\n\n    _classCallCheck(this, AddFiles);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.triggerFileInputClick = function () {\n      _this.fileInput.click();\n    };\n\n    _this.triggerFolderInputClick = function () {\n      _this.folderInput.click();\n    };\n\n    _this.onFileInputChange = function (event) {\n      _this.props.handleInputChange(event); // We clear the input after a file is selected, because otherwise\n      // change event is not fired in Chrome and Safari when a file\n      // with the same name is selected.\n      // ___Why not use value=\"\" on <input/> instead?\n      //    Because if we use that method of clearing the input,\n      //    Chrome will not trigger change if we drop the same file twice (Issue #768).\n\n\n      event.target.value = null;\n    };\n\n    _this.renderHiddenInput = function (isFolder, refCallback) {\n      return h(\"input\", {\n        className: \"uppy-Dashboard-input\",\n        hidden: true,\n        \"aria-hidden\": \"true\",\n        tabIndex: -1,\n        webkitdirectory: isFolder,\n        type: \"file\",\n        name: \"files[]\",\n        multiple: _this.props.maxNumberOfFiles !== 1,\n        onChange: _this.onFileInputChange,\n        accept: _this.props.allowedFileTypes,\n        ref: refCallback\n      });\n    };\n\n    _this.renderMyDeviceAcquirer = function () {\n      return h(\"div\", {\n        className: \"uppy-DashboardTab\",\n        role: \"presentation\",\n        \"data-uppy-acquirer-id\": \"MyDevice\"\n      }, h(\"button\", {\n        type: \"button\",\n        className: \"uppy-u-reset uppy-c-btn uppy-DashboardTab-btn\",\n        role: \"tab\",\n        tabIndex: 0,\n        \"data-uppy-super-focusable\": true,\n        onClick: _this.triggerFileInputClick\n      }, h(\"svg\", {\n        \"aria-hidden\": \"true\",\n        focusable: \"false\",\n        width: \"32\",\n        height: \"32\",\n        viewBox: \"0 0 32 32\"\n      }, h(\"g\", {\n        fill: \"none\",\n        fillRule: \"evenodd\"\n      }, h(\"rect\", {\n        className: \"uppy-ProviderIconBg\",\n        width: \"32\",\n        height: \"32\",\n        rx: \"16\",\n        fill: \"#2275D7\"\n      }), h(\"path\", {\n        d: \"M21.973 21.152H9.863l-1.108-5.087h14.464l-1.246 5.087zM9.935 11.37h3.958l.886 1.444a.673.673 0 0 0 .585.316h6.506v1.37H9.935v-3.13zm14.898 3.44a.793.793 0 0 0-.616-.31h-.978v-2.126c0-.379-.275-.613-.653-.613H15.75l-.886-1.445a.673.673 0 0 0-.585-.316H9.232c-.378 0-.667.209-.667.587V14.5h-.782a.793.793 0 0 0-.61.303.795.795 0 0 0-.155.663l1.45 6.633c.078.36.396.618.764.618h13.354c.36 0 .674-.246.76-.595l1.631-6.636a.795.795 0 0 0-.144-.675z\",\n        fill: \"#FFF\"\n      }))), h(\"div\", {\n        className: \"uppy-DashboardTab-name\"\n      }, _this.props.i18n('myDevice'))));\n    };\n\n    _this.renderBrowseButton = function (text, onClickFn) {\n      var numberOfAcquirers = _this.props.acquirers.length;\n      return h(\"button\", {\n        type: \"button\",\n        className: \"uppy-u-reset uppy-Dashboard-browse\",\n        onClick: onClickFn,\n        \"data-uppy-super-focusable\": numberOfAcquirers === 0\n      }, text);\n    };\n\n    _this.renderDropPasteBrowseTagline = function () {\n      var numberOfAcquirers = _this.props.acquirers.length;\n\n      var browseFiles = _this.renderBrowseButton(_this.props.i18n('browseFiles'), _this.triggerFileInputClick);\n\n      var browseFolders = _this.renderBrowseButton(_this.props.i18n('browseFolders'), _this.triggerFolderInputClick); // in order to keep the i18n CamelCase and options lower (as are defaults) we will want to transform a lower\n      // to Camel\n\n\n      var lowerFMSelectionType = _this.props.fileManagerSelectionType;\n      var camelFMSelectionType = lowerFMSelectionType.charAt(0).toUpperCase() + lowerFMSelectionType.slice(1);\n      return h(\"div\", {\n        class: \"uppy-Dashboard-AddFiles-title\"\n      }, // eslint-disable-next-line no-nested-ternary\n      _this.props.disableLocalFiles ? _this.props.i18n('importFiles') : numberOfAcquirers > 0 ? _this.props.i18nArray(\"dropPasteImport\".concat(camelFMSelectionType), {\n        browseFiles: browseFiles,\n        browseFolders: browseFolders,\n        browse: browseFiles\n      }) : _this.props.i18nArray(\"dropPaste\".concat(camelFMSelectionType), {\n        browseFiles: browseFiles,\n        browseFolders: browseFolders,\n        browse: browseFiles\n      }));\n    };\n\n    _this.renderAcquirer = function (acquirer) {\n      return h(\"div\", {\n        className: \"uppy-DashboardTab\",\n        role: \"presentation\",\n        \"data-uppy-acquirer-id\": acquirer.id\n      }, h(\"button\", {\n        type: \"button\",\n        className: \"uppy-u-reset uppy-c-btn uppy-DashboardTab-btn\",\n        role: \"tab\",\n        tabIndex: 0,\n        \"aria-controls\": \"uppy-DashboardContent-panel--\".concat(acquirer.id),\n        \"aria-selected\": _this.props.activePickerPanel.id === acquirer.id,\n        \"data-uppy-super-focusable\": true,\n        onClick: function onClick() {\n          return _this.props.showPanel(acquirer.id);\n        }\n      }, acquirer.icon(), h(\"div\", {\n        className: \"uppy-DashboardTab-name\"\n      }, acquirer.name)));\n    };\n\n    _this.renderAcquirers = function (acquirers, disableLocalFiles) {\n      // Group last two buttons, so we donâ€™t end up with\n      // just one button on a new line\n      var acquirersWithoutLastTwo = _toConsumableArray(acquirers);\n\n      var lastTwoAcquirers = acquirersWithoutLastTwo.splice(acquirers.length - 2, acquirers.length);\n      return h(\"div\", {\n        className: \"uppy-Dashboard-AddFiles-list\",\n        role: \"tablist\"\n      }, !disableLocalFiles && _this.renderMyDeviceAcquirer(), acquirersWithoutLastTwo.map(function (acquirer) {\n        return _this.renderAcquirer(acquirer);\n      }), h(\"span\", {\n        role: \"presentation\",\n        style: {\n          'white-space': 'nowrap'\n        }\n      }, lastTwoAcquirers.map(function (acquirer) {\n        return _this.renderAcquirer(acquirer);\n      })));\n    };\n\n    return _this;\n  }\n\n  _createClass(AddFiles, [{\n    key: _Symbol$for2,\n    value: function value() {\n      // Those are actually used in `renderDropPasteBrowseTagline` method.\n      this.props.i18nArray('dropPasteBoth');\n      this.props.i18nArray('dropPasteFiles');\n      this.props.i18nArray('dropPasteFolders');\n      this.props.i18nArray('dropPasteImportBoth');\n      this.props.i18nArray('dropPasteImportFiles');\n      this.props.i18nArray('dropPasteImportFolders');\n    }\n  }, {\n    key: \"renderPoweredByUppy\",\n    value: function renderPoweredByUppy() {\n      var i18nArray = this.props.i18nArray;\n      var uppyBranding = h(\"span\", null, h(\"svg\", {\n        \"aria-hidden\": \"true\",\n        focusable: \"false\",\n        className: \"uppy-c-icon uppy-Dashboard-poweredByIcon\",\n        width: \"11\",\n        height: \"11\",\n        viewBox: \"0 0 11 11\"\n      }, h(\"path\", {\n        d: \"M7.365 10.5l-.01-4.045h2.612L5.5.806l-4.467 5.65h2.604l.01 4.044h3.718z\",\n        fillRule: \"evenodd\"\n      })), h(\"span\", {\n        className: \"uppy-Dashboard-poweredByUppy\"\n      }, \"Uppy\"));\n      var linkText = i18nArray('poweredBy', {\n        uppy: uppyBranding\n      });\n      return h(\"a\", {\n        tabIndex: \"-1\",\n        href: \"https://uppy.io\",\n        rel: \"noreferrer noopener\",\n        target: \"_blank\",\n        className: \"uppy-Dashboard-poweredBy\"\n      }, linkText);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return h(\"div\", {\n        className: \"uppy-Dashboard-AddFiles\"\n      }, this.renderHiddenInput(false, function (ref) {\n        _this2.fileInput = ref;\n      }), this.renderHiddenInput(true, function (ref) {\n        _this2.folderInput = ref;\n      }), this.renderDropPasteBrowseTagline(), this.props.acquirers.length > 0 && this.renderAcquirers(this.props.acquirers, this.props.disableLocalFiles), h(\"div\", {\n        className: \"uppy-Dashboard-AddFiles-info\"\n      }, this.props.note && h(\"div\", {\n        className: \"uppy-Dashboard-note\"\n      }, this.props.note), this.props.proudlyDisplayPoweredByUppy && this.renderPoweredByUppy(this.props)));\n    }\n  }]);\n\n  return AddFiles;\n}(Component, _Symbol$for);\n\nmodule.exports = AddFiles;","map":{"version":3,"sources":["/Users/albertshay/Desktop/silkroad/client/node_modules/@uppy/dashboard/lib/components/AddFiles.js"],"names":["_Symbol$for","require","h","Component","Symbol","for","AddFiles","args","triggerFileInputClick","fileInput","click","triggerFolderInputClick","folderInput","onFileInputChange","event","props","handleInputChange","target","value","renderHiddenInput","isFolder","refCallback","className","hidden","tabIndex","webkitdirectory","type","name","multiple","maxNumberOfFiles","onChange","accept","allowedFileTypes","ref","renderMyDeviceAcquirer","role","onClick","focusable","width","height","viewBox","fill","fillRule","rx","d","i18n","renderBrowseButton","text","onClickFn","numberOfAcquirers","acquirers","length","renderDropPasteBrowseTagline","browseFiles","browseFolders","lowerFMSelectionType","fileManagerSelectionType","camelFMSelectionType","charAt","toUpperCase","slice","class","disableLocalFiles","i18nArray","browse","renderAcquirer","acquirer","id","activePickerPanel","showPanel","icon","renderAcquirers","acquirersWithoutLastTwo","lastTwoAcquirers","splice","map","style","uppyBranding","linkText","uppy","href","rel","note","proudlyDisplayPoweredByUppy","renderPoweredByUppy","module","exports"],"mappings":"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","sourcesContent":["\"use strict\";\n\nlet _Symbol$for;\n\nconst {\n  h,\n  Component\n} = require('preact');\n\n_Symbol$for = Symbol.for('uppy test: disable unused locale key warning');\n\nclass AddFiles extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.triggerFileInputClick = () => {\n      this.fileInput.click();\n    };\n\n    this.triggerFolderInputClick = () => {\n      this.folderInput.click();\n    };\n\n    this.onFileInputChange = event => {\n      this.props.handleInputChange(event); // We clear the input after a file is selected, because otherwise\n      // change event is not fired in Chrome and Safari when a file\n      // with the same name is selected.\n      // ___Why not use value=\"\" on <input/> instead?\n      //    Because if we use that method of clearing the input,\n      //    Chrome will not trigger change if we drop the same file twice (Issue #768).\n\n      event.target.value = null;\n    };\n\n    this.renderHiddenInput = (isFolder, refCallback) => {\n      return h(\"input\", {\n        className: \"uppy-Dashboard-input\",\n        hidden: true,\n        \"aria-hidden\": \"true\",\n        tabIndex: -1,\n        webkitdirectory: isFolder,\n        type: \"file\",\n        name: \"files[]\",\n        multiple: this.props.maxNumberOfFiles !== 1,\n        onChange: this.onFileInputChange,\n        accept: this.props.allowedFileTypes,\n        ref: refCallback\n      });\n    };\n\n    this.renderMyDeviceAcquirer = () => {\n      return h(\"div\", {\n        className: \"uppy-DashboardTab\",\n        role: \"presentation\",\n        \"data-uppy-acquirer-id\": \"MyDevice\"\n      }, h(\"button\", {\n        type: \"button\",\n        className: \"uppy-u-reset uppy-c-btn uppy-DashboardTab-btn\",\n        role: \"tab\",\n        tabIndex: 0,\n        \"data-uppy-super-focusable\": true,\n        onClick: this.triggerFileInputClick\n      }, h(\"svg\", {\n        \"aria-hidden\": \"true\",\n        focusable: \"false\",\n        width: \"32\",\n        height: \"32\",\n        viewBox: \"0 0 32 32\"\n      }, h(\"g\", {\n        fill: \"none\",\n        fillRule: \"evenodd\"\n      }, h(\"rect\", {\n        className: \"uppy-ProviderIconBg\",\n        width: \"32\",\n        height: \"32\",\n        rx: \"16\",\n        fill: \"#2275D7\"\n      }), h(\"path\", {\n        d: \"M21.973 21.152H9.863l-1.108-5.087h14.464l-1.246 5.087zM9.935 11.37h3.958l.886 1.444a.673.673 0 0 0 .585.316h6.506v1.37H9.935v-3.13zm14.898 3.44a.793.793 0 0 0-.616-.31h-.978v-2.126c0-.379-.275-.613-.653-.613H15.75l-.886-1.445a.673.673 0 0 0-.585-.316H9.232c-.378 0-.667.209-.667.587V14.5h-.782a.793.793 0 0 0-.61.303.795.795 0 0 0-.155.663l1.45 6.633c.078.36.396.618.764.618h13.354c.36 0 .674-.246.76-.595l1.631-6.636a.795.795 0 0 0-.144-.675z\",\n        fill: \"#FFF\"\n      }))), h(\"div\", {\n        className: \"uppy-DashboardTab-name\"\n      }, this.props.i18n('myDevice'))));\n    };\n\n    this.renderBrowseButton = (text, onClickFn) => {\n      const numberOfAcquirers = this.props.acquirers.length;\n      return h(\"button\", {\n        type: \"button\",\n        className: \"uppy-u-reset uppy-Dashboard-browse\",\n        onClick: onClickFn,\n        \"data-uppy-super-focusable\": numberOfAcquirers === 0\n      }, text);\n    };\n\n    this.renderDropPasteBrowseTagline = () => {\n      const numberOfAcquirers = this.props.acquirers.length;\n      const browseFiles = this.renderBrowseButton(this.props.i18n('browseFiles'), this.triggerFileInputClick);\n      const browseFolders = this.renderBrowseButton(this.props.i18n('browseFolders'), this.triggerFolderInputClick); // in order to keep the i18n CamelCase and options lower (as are defaults) we will want to transform a lower\n      // to Camel\n\n      const lowerFMSelectionType = this.props.fileManagerSelectionType;\n      const camelFMSelectionType = lowerFMSelectionType.charAt(0).toUpperCase() + lowerFMSelectionType.slice(1);\n      return h(\"div\", {\n        class: \"uppy-Dashboard-AddFiles-title\"\n      }, // eslint-disable-next-line no-nested-ternary\n      this.props.disableLocalFiles ? this.props.i18n('importFiles') : numberOfAcquirers > 0 ? this.props.i18nArray(`dropPasteImport${camelFMSelectionType}`, {\n        browseFiles,\n        browseFolders,\n        browse: browseFiles\n      }) : this.props.i18nArray(`dropPaste${camelFMSelectionType}`, {\n        browseFiles,\n        browseFolders,\n        browse: browseFiles\n      }));\n    };\n\n    this.renderAcquirer = acquirer => {\n      return h(\"div\", {\n        className: \"uppy-DashboardTab\",\n        role: \"presentation\",\n        \"data-uppy-acquirer-id\": acquirer.id\n      }, h(\"button\", {\n        type: \"button\",\n        className: \"uppy-u-reset uppy-c-btn uppy-DashboardTab-btn\",\n        role: \"tab\",\n        tabIndex: 0,\n        \"aria-controls\": `uppy-DashboardContent-panel--${acquirer.id}`,\n        \"aria-selected\": this.props.activePickerPanel.id === acquirer.id,\n        \"data-uppy-super-focusable\": true,\n        onClick: () => this.props.showPanel(acquirer.id)\n      }, acquirer.icon(), h(\"div\", {\n        className: \"uppy-DashboardTab-name\"\n      }, acquirer.name)));\n    };\n\n    this.renderAcquirers = (acquirers, disableLocalFiles) => {\n      // Group last two buttons, so we donâ€™t end up with\n      // just one button on a new line\n      const acquirersWithoutLastTwo = [...acquirers];\n      const lastTwoAcquirers = acquirersWithoutLastTwo.splice(acquirers.length - 2, acquirers.length);\n      return h(\"div\", {\n        className: \"uppy-Dashboard-AddFiles-list\",\n        role: \"tablist\"\n      }, !disableLocalFiles && this.renderMyDeviceAcquirer(), acquirersWithoutLastTwo.map(acquirer => this.renderAcquirer(acquirer)), h(\"span\", {\n        role: \"presentation\",\n        style: {\n          'white-space': 'nowrap'\n        }\n      }, lastTwoAcquirers.map(acquirer => this.renderAcquirer(acquirer))));\n    };\n  }\n\n  [_Symbol$for]() {\n    // Those are actually used in `renderDropPasteBrowseTagline` method.\n    this.props.i18nArray('dropPasteBoth');\n    this.props.i18nArray('dropPasteFiles');\n    this.props.i18nArray('dropPasteFolders');\n    this.props.i18nArray('dropPasteImportBoth');\n    this.props.i18nArray('dropPasteImportFiles');\n    this.props.i18nArray('dropPasteImportFolders');\n  }\n\n  renderPoweredByUppy() {\n    const {\n      i18nArray\n    } = this.props;\n    const uppyBranding = h(\"span\", null, h(\"svg\", {\n      \"aria-hidden\": \"true\",\n      focusable: \"false\",\n      className: \"uppy-c-icon uppy-Dashboard-poweredByIcon\",\n      width: \"11\",\n      height: \"11\",\n      viewBox: \"0 0 11 11\"\n    }, h(\"path\", {\n      d: \"M7.365 10.5l-.01-4.045h2.612L5.5.806l-4.467 5.65h2.604l.01 4.044h3.718z\",\n      fillRule: \"evenodd\"\n    })), h(\"span\", {\n      className: \"uppy-Dashboard-poweredByUppy\"\n    }, \"Uppy\"));\n    const linkText = i18nArray('poweredBy', {\n      uppy: uppyBranding\n    });\n    return h(\"a\", {\n      tabIndex: \"-1\",\n      href: \"https://uppy.io\",\n      rel: \"noreferrer noopener\",\n      target: \"_blank\",\n      className: \"uppy-Dashboard-poweredBy\"\n    }, linkText);\n  }\n\n  render() {\n    return h(\"div\", {\n      className: \"uppy-Dashboard-AddFiles\"\n    }, this.renderHiddenInput(false, ref => {\n      this.fileInput = ref;\n    }), this.renderHiddenInput(true, ref => {\n      this.folderInput = ref;\n    }), this.renderDropPasteBrowseTagline(), this.props.acquirers.length > 0 && this.renderAcquirers(this.props.acquirers, this.props.disableLocalFiles), h(\"div\", {\n      className: \"uppy-Dashboard-AddFiles-info\"\n    }, this.props.note && h(\"div\", {\n      className: \"uppy-Dashboard-note\"\n    }, this.props.note), this.props.proudlyDisplayPoweredByUppy && this.renderPoweredByUppy(this.props)));\n  }\n\n}\n\nmodule.exports = AddFiles;"]},"metadata":{},"sourceType":"script"}