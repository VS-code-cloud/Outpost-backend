{"ast":null,"code":"\"use strict\";\n/**\n * Truncates a string to the given number of chars (maxLength) by inserting '...' in the middle of that string.\n * Partially taken from https://stackoverflow.com/a/5723274/3192470.\n *\n * @param {string} string - string to be truncated\n * @param {number} maxLength - maximum size of the resulting string\n * @returns {string}\n */\n\nconst separator = '...';\n\nmodule.exports = function truncateString(string, maxLength) {\n  // Return the empty string if maxLength is zero\n  if (maxLength === 0) return ''; // Return original string if it's already shorter than maxLength\n\n  if (string.length <= maxLength) return string; // Return truncated substring appended of the ellipsis char if string can't be meaningfully truncated\n\n  if (maxLength <= separator.length + 1) return `${string.slice(0, maxLength - 1)}…`;\n  const charsToShow = maxLength - separator.length;\n  const frontChars = Math.ceil(charsToShow / 2);\n  const backChars = Math.floor(charsToShow / 2);\n  return string.slice(0, frontChars) + separator + string.slice(-backChars);\n};","map":{"version":3,"sources":["/Users/albertshay/Desktop/silkroad/client/node_modules/@uppy/utils/lib/truncateString.js"],"names":["separator","module","exports","truncateString","string","maxLength","length","slice","charsToShow","frontChars","Math","ceil","backChars","floor"],"mappings":"AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMA,SAAS,GAAG,KAAlB;;AAEAC,MAAM,CAACC,OAAP,GAAiB,SAASC,cAAT,CAAwBC,MAAxB,EAAgCC,SAAhC,EAA2C;AAC1D;AACA,MAAIA,SAAS,KAAK,CAAlB,EAAqB,OAAO,EAAP,CAFqC,CAE1B;;AAEhC,MAAID,MAAM,CAACE,MAAP,IAAiBD,SAArB,EAAgC,OAAOD,MAAP,CAJ0B,CAIX;;AAE/C,MAAIC,SAAS,IAAIL,SAAS,CAACM,MAAV,GAAmB,CAApC,EAAuC,OAAQ,GAAEF,MAAM,CAACG,KAAP,CAAa,CAAb,EAAgBF,SAAS,GAAG,CAA5B,CAA+B,GAAzC;AACvC,QAAMG,WAAW,GAAGH,SAAS,GAAGL,SAAS,CAACM,MAA1C;AACA,QAAMG,UAAU,GAAGC,IAAI,CAACC,IAAL,CAAUH,WAAW,GAAG,CAAxB,CAAnB;AACA,QAAMI,SAAS,GAAGF,IAAI,CAACG,KAAL,CAAWL,WAAW,GAAG,CAAzB,CAAlB;AACA,SAAOJ,MAAM,CAACG,KAAP,CAAa,CAAb,EAAgBE,UAAhB,IAA8BT,SAA9B,GAA0CI,MAAM,CAACG,KAAP,CAAa,CAACK,SAAd,CAAjD;AACD,CAXD","sourcesContent":["\"use strict\";\n\n/**\n * Truncates a string to the given number of chars (maxLength) by inserting '...' in the middle of that string.\n * Partially taken from https://stackoverflow.com/a/5723274/3192470.\n *\n * @param {string} string - string to be truncated\n * @param {number} maxLength - maximum size of the resulting string\n * @returns {string}\n */\nconst separator = '...';\n\nmodule.exports = function truncateString(string, maxLength) {\n  // Return the empty string if maxLength is zero\n  if (maxLength === 0) return ''; // Return original string if it's already shorter than maxLength\n\n  if (string.length <= maxLength) return string; // Return truncated substring appended of the ellipsis char if string can't be meaningfully truncated\n\n  if (maxLength <= separator.length + 1) return `${string.slice(0, maxLength - 1)}…`;\n  const charsToShow = maxLength - separator.length;\n  const frontChars = Math.ceil(charsToShow / 2);\n  const backChars = Math.floor(charsToShow / 2);\n  return string.slice(0, frontChars) + separator + string.slice(-backChars);\n};"]},"metadata":{},"sourceType":"script"}