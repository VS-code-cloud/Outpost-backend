{"ast":null,"code":"\"use strict\";\n\nconst {\n  h,\n  Component\n} = require('preact');\n\nconst classNames = require('classnames');\n\nconst shallowEqual = require('is-shallow-equal');\n\nconst FilePreviewAndLink = require('./FilePreviewAndLink');\n\nconst FileProgress = require('./FileProgress');\n\nconst FileInfo = require('./FileInfo');\n\nconst Buttons = require('./Buttons');\n\nmodule.exports = class FileItem extends Component {\n  componentDidMount() {\n    const {\n      file\n    } = this.props;\n\n    if (!file.preview) {\n      this.props.handleRequestThumbnail(file);\n    }\n  }\n\n  shouldComponentUpdate(nextProps) {\n    return !shallowEqual(this.props, nextProps);\n  } // VirtualList mounts FileItems again and they emit `thumbnail:request`\n  // Otherwise thumbnails are broken or missing after Golden Retriever restores files\n\n\n  componentDidUpdate() {\n    const {\n      file\n    } = this.props;\n\n    if (!file.preview) {\n      this.props.handleRequestThumbnail(file);\n    }\n  }\n\n  componentWillUnmount() {\n    const {\n      file\n    } = this.props;\n\n    if (!file.preview) {\n      this.props.handleCancelThumbnail(file);\n    }\n  }\n\n  render() {\n    const {\n      file\n    } = this.props;\n    const isProcessing = file.progress.preprocess || file.progress.postprocess;\n    const isUploaded = file.progress.uploadComplete && !isProcessing && !file.error;\n    const uploadInProgressOrComplete = file.progress.uploadStarted || isProcessing;\n    const uploadInProgress = file.progress.uploadStarted && !file.progress.uploadComplete || isProcessing;\n    const error = file.error || false; // File that Golden Retriever was able to partly restore (only meta, not blob),\n    // users still need to re-add it, so itâ€™s a ghost\n\n    const {\n      isGhost\n    } = file;\n    let showRemoveButton = this.props.individualCancellation ? !isUploaded : !uploadInProgress && !isUploaded;\n\n    if (isUploaded && this.props.showRemoveButtonAfterComplete) {\n      showRemoveButton = true;\n    }\n\n    const dashboardItemClass = classNames({\n      'uppy-Dashboard-Item': true,\n      'is-inprogress': uploadInProgress && !this.props.recoveredState,\n      'is-processing': isProcessing,\n      'is-complete': isUploaded,\n      'is-error': !!error,\n      'is-resumable': this.props.resumableUploads,\n      'is-noIndividualCancellation': !this.props.individualCancellation,\n      'is-ghost': isGhost\n    });\n    return h(\"div\", {\n      className: dashboardItemClass,\n      id: `uppy_${file.id}`,\n      role: this.props.role\n    }, h(\"div\", {\n      className: \"uppy-Dashboard-Item-preview\"\n    }, h(FilePreviewAndLink, {\n      file: file,\n      showLinkToFileUploadResult: this.props.showLinkToFileUploadResult\n    }), h(FileProgress, {\n      uppy: this.props.uppy,\n      file: file,\n      error: error,\n      isUploaded: isUploaded,\n      hideRetryButton: this.props.hideRetryButton,\n      hideCancelButton: this.props.hideCancelButton,\n      hidePauseResumeButton: this.props.hidePauseResumeButton,\n      recoveredState: this.props.recoveredState,\n      showRemoveButtonAfterComplete: this.props.showRemoveButtonAfterComplete,\n      resumableUploads: this.props.resumableUploads,\n      individualCancellation: this.props.individualCancellation,\n      i18n: this.props.i18n\n    })), h(\"div\", {\n      className: \"uppy-Dashboard-Item-fileInfoAndButtons\"\n    }, h(FileInfo, {\n      file: file,\n      id: this.props.id,\n      acquirers: this.props.acquirers,\n      containerWidth: this.props.containerWidth,\n      i18n: this.props.i18n,\n      toggleAddFilesPanel: this.props.toggleAddFilesPanel\n    }), h(Buttons, {\n      file: file,\n      metaFields: this.props.metaFields,\n      showLinkToFileUploadResult: this.props.showLinkToFileUploadResult,\n      showRemoveButton: showRemoveButton,\n      canEditFile: this.props.canEditFile,\n      uploadInProgressOrComplete: uploadInProgressOrComplete,\n      toggleFileCard: this.props.toggleFileCard,\n      openFileEditor: this.props.openFileEditor,\n      uppy: this.props.uppy,\n      i18n: this.props.i18n\n    })));\n  }\n\n};","map":{"version":3,"sources":["/Users/albertshay/Desktop/silkroad/client/node_modules/@uppy/dashboard/lib/components/FileItem/index.js"],"names":["h","Component","require","classNames","shallowEqual","FilePreviewAndLink","FileProgress","FileInfo","Buttons","module","exports","FileItem","componentDidMount","file","props","preview","handleRequestThumbnail","shouldComponentUpdate","nextProps","componentDidUpdate","componentWillUnmount","handleCancelThumbnail","render","isProcessing","progress","preprocess","postprocess","isUploaded","uploadComplete","error","uploadInProgressOrComplete","uploadStarted","uploadInProgress","isGhost","showRemoveButton","individualCancellation","showRemoveButtonAfterComplete","dashboardItemClass","recoveredState","resumableUploads","className","id","role","showLinkToFileUploadResult","uppy","hideRetryButton","hideCancelButton","hidePauseResumeButton","i18n","acquirers","containerWidth","toggleAddFilesPanel","metaFields","canEditFile","toggleFileCard","openFileEditor"],"mappings":"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","sourcesContent":["\"use strict\";\n\nconst {\n  h,\n  Component\n} = require('preact');\n\nconst classNames = require('classnames');\n\nconst shallowEqual = require('is-shallow-equal');\n\nconst FilePreviewAndLink = require('./FilePreviewAndLink');\n\nconst FileProgress = require('./FileProgress');\n\nconst FileInfo = require('./FileInfo');\n\nconst Buttons = require('./Buttons');\n\nmodule.exports = class FileItem extends Component {\n  componentDidMount() {\n    const {\n      file\n    } = this.props;\n\n    if (!file.preview) {\n      this.props.handleRequestThumbnail(file);\n    }\n  }\n\n  shouldComponentUpdate(nextProps) {\n    return !shallowEqual(this.props, nextProps);\n  } // VirtualList mounts FileItems again and they emit `thumbnail:request`\n  // Otherwise thumbnails are broken or missing after Golden Retriever restores files\n\n\n  componentDidUpdate() {\n    const {\n      file\n    } = this.props;\n\n    if (!file.preview) {\n      this.props.handleRequestThumbnail(file);\n    }\n  }\n\n  componentWillUnmount() {\n    const {\n      file\n    } = this.props;\n\n    if (!file.preview) {\n      this.props.handleCancelThumbnail(file);\n    }\n  }\n\n  render() {\n    const {\n      file\n    } = this.props;\n    const isProcessing = file.progress.preprocess || file.progress.postprocess;\n    const isUploaded = file.progress.uploadComplete && !isProcessing && !file.error;\n    const uploadInProgressOrComplete = file.progress.uploadStarted || isProcessing;\n    const uploadInProgress = file.progress.uploadStarted && !file.progress.uploadComplete || isProcessing;\n    const error = file.error || false; // File that Golden Retriever was able to partly restore (only meta, not blob),\n    // users still need to re-add it, so itâ€™s a ghost\n\n    const {\n      isGhost\n    } = file;\n    let showRemoveButton = this.props.individualCancellation ? !isUploaded : !uploadInProgress && !isUploaded;\n\n    if (isUploaded && this.props.showRemoveButtonAfterComplete) {\n      showRemoveButton = true;\n    }\n\n    const dashboardItemClass = classNames({\n      'uppy-Dashboard-Item': true,\n      'is-inprogress': uploadInProgress && !this.props.recoveredState,\n      'is-processing': isProcessing,\n      'is-complete': isUploaded,\n      'is-error': !!error,\n      'is-resumable': this.props.resumableUploads,\n      'is-noIndividualCancellation': !this.props.individualCancellation,\n      'is-ghost': isGhost\n    });\n    return h(\"div\", {\n      className: dashboardItemClass,\n      id: `uppy_${file.id}`,\n      role: this.props.role\n    }, h(\"div\", {\n      className: \"uppy-Dashboard-Item-preview\"\n    }, h(FilePreviewAndLink, {\n      file: file,\n      showLinkToFileUploadResult: this.props.showLinkToFileUploadResult\n    }), h(FileProgress, {\n      uppy: this.props.uppy,\n      file: file,\n      error: error,\n      isUploaded: isUploaded,\n      hideRetryButton: this.props.hideRetryButton,\n      hideCancelButton: this.props.hideCancelButton,\n      hidePauseResumeButton: this.props.hidePauseResumeButton,\n      recoveredState: this.props.recoveredState,\n      showRemoveButtonAfterComplete: this.props.showRemoveButtonAfterComplete,\n      resumableUploads: this.props.resumableUploads,\n      individualCancellation: this.props.individualCancellation,\n      i18n: this.props.i18n\n    })), h(\"div\", {\n      className: \"uppy-Dashboard-Item-fileInfoAndButtons\"\n    }, h(FileInfo, {\n      file: file,\n      id: this.props.id,\n      acquirers: this.props.acquirers,\n      containerWidth: this.props.containerWidth,\n      i18n: this.props.i18n,\n      toggleAddFilesPanel: this.props.toggleAddFilesPanel\n    }), h(Buttons, {\n      file: file,\n      metaFields: this.props.metaFields,\n      showLinkToFileUploadResult: this.props.showLinkToFileUploadResult,\n      showRemoveButton: showRemoveButton,\n      canEditFile: this.props.canEditFile,\n      uploadInProgressOrComplete: uploadInProgressOrComplete,\n      toggleFileCard: this.props.toggleFileCard,\n      openFileEditor: this.props.openFileEditor,\n      uppy: this.props.uppy,\n      i18n: this.props.i18n\n    })));\n  }\n\n};"]},"metadata":{},"sourceType":"script"}