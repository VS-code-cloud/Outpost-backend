{"ast":null,"code":"\"use strict\";\n\nfunction encodeCharacter(character) {\n  return character.charCodeAt(0).toString(32);\n}\n\nfunction encodeFilename(name) {\n  var suffix = '';\n  return name.replace(/[^A-Z0-9]/ig, function (character) {\n    suffix += \"-\".concat(encodeCharacter(character));\n    return '/';\n  }) + suffix;\n}\n/**\n * Takes a file object and turns it into fileID, by converting file.name to lowercase,\n * removing extra characters and adding type, size and lastModified\n *\n * @param {object} file\n * @returns {string} the fileID\n */\n\n\nmodule.exports = function generateFileID(file) {\n  // It's tempting to do `[items].filter(Boolean).join('-')` here, but that\n  // is slower! simple string concatenation is fast\n  var id = 'uppy';\n\n  if (typeof file.name === 'string') {\n    id += \"-\".concat(encodeFilename(file.name.toLowerCase()));\n  }\n\n  if (file.type !== undefined) {\n    id += \"-\".concat(file.type);\n  }\n\n  if (file.meta && typeof file.meta.relativePath === 'string') {\n    id += \"-\".concat(encodeFilename(file.meta.relativePath.toLowerCase()));\n  }\n\n  if (file.data.size !== undefined) {\n    id += \"-\".concat(file.data.size);\n  }\n\n  if (file.data.lastModified !== undefined) {\n    id += \"-\".concat(file.data.lastModified);\n  }\n\n  return id;\n};","map":{"version":3,"sources":["/Users/albertshay/Desktop/silkroad/client/node_modules/@uppy/utils/lib/generateFileID.js"],"names":["encodeCharacter","character","charCodeAt","toString","encodeFilename","name","suffix","replace","module","exports","generateFileID","file","id","toLowerCase","type","undefined","meta","relativePath","data","size","lastModified"],"mappings":"AAAA;;AAEA,SAASA,eAAT,CAAyBC,SAAzB,EAAoC;AAClC,SAAOA,SAAS,CAACC,UAAV,CAAqB,CAArB,EAAwBC,QAAxB,CAAiC,EAAjC,CAAP;AACD;;AAED,SAASC,cAAT,CAAwBC,IAAxB,EAA8B;AAC5B,MAAIC,MAAM,GAAG,EAAb;AACA,SAAOD,IAAI,CAACE,OAAL,CAAa,aAAb,EAA4B,UAAAN,SAAS,EAAI;AAC9CK,IAAAA,MAAM,eAAQN,eAAe,CAACC,SAAD,CAAvB,CAAN;AACA,WAAO,GAAP;AACD,GAHM,IAGFK,MAHL;AAID;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGAE,MAAM,CAACC,OAAP,GAAiB,SAASC,cAAT,CAAwBC,IAAxB,EAA8B;AAC7C;AACA;AACA,MAAIC,EAAE,GAAG,MAAT;;AAEA,MAAI,OAAOD,IAAI,CAACN,IAAZ,KAAqB,QAAzB,EAAmC;AACjCO,IAAAA,EAAE,eAAQR,cAAc,CAACO,IAAI,CAACN,IAAL,CAAUQ,WAAV,EAAD,CAAtB,CAAF;AACD;;AAED,MAAIF,IAAI,CAACG,IAAL,KAAcC,SAAlB,EAA6B;AAC3BH,IAAAA,EAAE,eAAQD,IAAI,CAACG,IAAb,CAAF;AACD;;AAED,MAAIH,IAAI,CAACK,IAAL,IAAa,OAAOL,IAAI,CAACK,IAAL,CAAUC,YAAjB,KAAkC,QAAnD,EAA6D;AAC3DL,IAAAA,EAAE,eAAQR,cAAc,CAACO,IAAI,CAACK,IAAL,CAAUC,YAAV,CAAuBJ,WAAvB,EAAD,CAAtB,CAAF;AACD;;AAED,MAAIF,IAAI,CAACO,IAAL,CAAUC,IAAV,KAAmBJ,SAAvB,EAAkC;AAChCH,IAAAA,EAAE,eAAQD,IAAI,CAACO,IAAL,CAAUC,IAAlB,CAAF;AACD;;AAED,MAAIR,IAAI,CAACO,IAAL,CAAUE,YAAV,KAA2BL,SAA/B,EAA0C;AACxCH,IAAAA,EAAE,eAAQD,IAAI,CAACO,IAAL,CAAUE,YAAlB,CAAF;AACD;;AAED,SAAOR,EAAP;AACD,CA1BD","sourcesContent":["\"use strict\";\n\nfunction encodeCharacter(character) {\n  return character.charCodeAt(0).toString(32);\n}\n\nfunction encodeFilename(name) {\n  let suffix = '';\n  return name.replace(/[^A-Z0-9]/ig, character => {\n    suffix += `-${encodeCharacter(character)}`;\n    return '/';\n  }) + suffix;\n}\n/**\n * Takes a file object and turns it into fileID, by converting file.name to lowercase,\n * removing extra characters and adding type, size and lastModified\n *\n * @param {object} file\n * @returns {string} the fileID\n */\n\n\nmodule.exports = function generateFileID(file) {\n  // It's tempting to do `[items].filter(Boolean).join('-')` here, but that\n  // is slower! simple string concatenation is fast\n  let id = 'uppy';\n\n  if (typeof file.name === 'string') {\n    id += `-${encodeFilename(file.name.toLowerCase())}`;\n  }\n\n  if (file.type !== undefined) {\n    id += `-${file.type}`;\n  }\n\n  if (file.meta && typeof file.meta.relativePath === 'string') {\n    id += `-${encodeFilename(file.meta.relativePath.toLowerCase())}`;\n  }\n\n  if (file.data.size !== undefined) {\n    id += `-${file.data.size}`;\n  }\n\n  if (file.data.lastModified !== undefined) {\n    id += `-${file.data.lastModified}`;\n  }\n\n  return id;\n};"]},"metadata":{},"sourceType":"script"}