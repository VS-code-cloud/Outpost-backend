{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/albertshay/Desktop/silkroad/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/albertshay/Desktop/silkroad/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/Users/albertshay/Desktop/silkroad/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/albertshay/Desktop/silkroad/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar _require = require('preact'),\n    cloneElement = _require.cloneElement,\n    Component = _require.Component,\n    toChildArray = _require.toChildArray;\n\nvar classNames = require('classnames');\n\nvar transitionName = 'uppy-transition-slideDownUp';\nvar duration = 250;\n/**\n * Vertical slide transition.\n *\n * This can take a _single_ child component, which _must_ accept a `className` prop.\n *\n * Currently this is specific to the `uppy-transition-slideDownUp` transition,\n * but it should be simple to extend this for any type of single-element\n * transition by setting the CSS name and duration as props.\n */\n\nvar Slide = /*#__PURE__*/function (_Component) {\n  _inherits(Slide, _Component);\n\n  var _super = _createSuper(Slide);\n\n  function Slide(props) {\n    var _this;\n\n    _classCallCheck(this, Slide);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      cachedChildren: null,\n      className: ''\n    };\n    return _this;\n  } // TODO: refactor to stable lifecycle method\n  // eslint-disable-next-line\n\n\n  _createClass(Slide, [{\n    key: \"componentWillUpdate\",\n    value: function componentWillUpdate(nextProps) {\n      var _this2 = this;\n\n      var cachedChildren = this.state.cachedChildren;\n      var child = toChildArray(nextProps.children)[0];\n      if (cachedChildren === child) return null;\n      var patch = {\n        cachedChildren: child\n      }; // Enter transition\n\n      if (child && !cachedChildren) {\n        patch.className = \"\".concat(transitionName, \"-enter\");\n        cancelAnimationFrame(this.animationFrame);\n        clearTimeout(this.leaveTimeout);\n        this.leaveTimeout = undefined;\n        this.animationFrame = requestAnimationFrame(function () {\n          // Force it to render before we add the active class\n          // this.base.getBoundingClientRect()\n          _this2.setState({\n            className: \"\".concat(transitionName, \"-enter \").concat(transitionName, \"-enter-active\")\n          });\n\n          _this2.enterTimeout = setTimeout(function () {\n            _this2.setState({\n              className: ''\n            });\n          }, duration);\n        });\n      } // Leave transition\n\n\n      if (cachedChildren && !child && this.leaveTimeout === undefined) {\n        patch.cachedChildren = cachedChildren;\n        patch.className = \"\".concat(transitionName, \"-leave\");\n        cancelAnimationFrame(this.animationFrame);\n        clearTimeout(this.enterTimeout);\n        this.enterTimeout = undefined;\n        this.animationFrame = requestAnimationFrame(function () {\n          _this2.setState({\n            className: \"\".concat(transitionName, \"-leave \").concat(transitionName, \"-leave-active\")\n          });\n\n          _this2.leaveTimeout = setTimeout(function () {\n            _this2.setState({\n              cachedChildren: null,\n              className: ''\n            });\n          }, duration);\n        });\n      } // eslint-disable-next-line\n\n\n      this.setState(patch);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          cachedChildren = _this$state.cachedChildren,\n          className = _this$state.className;\n\n      if (!cachedChildren) {\n        return null;\n      }\n\n      return cloneElement(cachedChildren, {\n        className: classNames(className, cachedChildren.props.className)\n      });\n    }\n  }]);\n\n  return Slide;\n}(Component);\n\nmodule.exports = Slide;","map":{"version":3,"sources":["/Users/albertshay/Desktop/silkroad/client/node_modules/@uppy/dashboard/lib/components/Slide.js"],"names":["require","cloneElement","Component","toChildArray","classNames","transitionName","duration","Slide","props","state","cachedChildren","className","nextProps","child","children","patch","cancelAnimationFrame","animationFrame","clearTimeout","leaveTimeout","undefined","requestAnimationFrame","setState","enterTimeout","setTimeout","module","exports"],"mappings":"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","sourcesContent":["\"use strict\";\n\nconst {\n  cloneElement,\n  Component,\n  toChildArray\n} = require('preact');\n\nconst classNames = require('classnames');\n\nconst transitionName = 'uppy-transition-slideDownUp';\nconst duration = 250;\n/**\n * Vertical slide transition.\n *\n * This can take a _single_ child component, which _must_ accept a `className` prop.\n *\n * Currently this is specific to the `uppy-transition-slideDownUp` transition,\n * but it should be simple to extend this for any type of single-element\n * transition by setting the CSS name and duration as props.\n */\n\nclass Slide extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cachedChildren: null,\n      className: ''\n    };\n  } // TODO: refactor to stable lifecycle method\n  // eslint-disable-next-line\n\n\n  componentWillUpdate(nextProps) {\n    const {\n      cachedChildren\n    } = this.state;\n    const child = toChildArray(nextProps.children)[0];\n    if (cachedChildren === child) return null;\n    const patch = {\n      cachedChildren: child\n    }; // Enter transition\n\n    if (child && !cachedChildren) {\n      patch.className = `${transitionName}-enter`;\n      cancelAnimationFrame(this.animationFrame);\n      clearTimeout(this.leaveTimeout);\n      this.leaveTimeout = undefined;\n      this.animationFrame = requestAnimationFrame(() => {\n        // Force it to render before we add the active class\n        // this.base.getBoundingClientRect()\n        this.setState({\n          className: `${transitionName}-enter ${transitionName}-enter-active`\n        });\n        this.enterTimeout = setTimeout(() => {\n          this.setState({\n            className: ''\n          });\n        }, duration);\n      });\n    } // Leave transition\n\n\n    if (cachedChildren && !child && this.leaveTimeout === undefined) {\n      patch.cachedChildren = cachedChildren;\n      patch.className = `${transitionName}-leave`;\n      cancelAnimationFrame(this.animationFrame);\n      clearTimeout(this.enterTimeout);\n      this.enterTimeout = undefined;\n      this.animationFrame = requestAnimationFrame(() => {\n        this.setState({\n          className: `${transitionName}-leave ${transitionName}-leave-active`\n        });\n        this.leaveTimeout = setTimeout(() => {\n          this.setState({\n            cachedChildren: null,\n            className: ''\n          });\n        }, duration);\n      });\n    } // eslint-disable-next-line\n\n\n    this.setState(patch);\n  }\n\n  render() {\n    const {\n      cachedChildren,\n      className\n    } = this.state;\n\n    if (!cachedChildren) {\n      return null;\n    }\n\n    return cloneElement(cachedChildren, {\n      className: classNames(className, cachedChildren.props.className)\n    });\n  }\n\n}\n\nmodule.exports = Slide;"]},"metadata":{},"sourceType":"script"}